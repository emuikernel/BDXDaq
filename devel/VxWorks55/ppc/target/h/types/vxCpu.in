/* vxCpu.h - VxWorks CPU definitions header */

/* Copyright 1984-2001 Wind River Systems, Inc. */

/*
 * vxCpu.h is now generated -- DO NOT EDIT
 *
 * To change the boilerplate, edit vxCpu.in
 *
 * To add CPU types or otherwise change the substance,
 * edit $WIND_BASE/host/src/target/architecturedb
 */

/*
modification history
--------------------
02i,10aug01,pch  Rename to vxCpu.in, revise for use in generating vxCpu.h
                 from host/src/target/architecturedb
02m,23jul01,scm  change XScale name to conform to coding standards...
02h,07may01,kab  Fix PPC enum clashes
02l,04may01,scm  add STRONGARM support...
02g,25oct00,s_m  renamed PPC405 cpu types
02f,14jun00,alp  Added PPC405 support
02k,11dec00,scm  replace references to ARMSA2 with XScale
02j,31aug00,scm  add sa2 support under arm
02i,20jan99,cdp  marked old ARM CPU numbers 'obsoleted'.
02h,13nov98,cdp  added ARMARCH3, ARMARCH4, ARMARCH4_T.
02n,28mar01,mem  Update SH cpu numbers.
02m,14dec00,pes  Remove more obsolete MIPS CPU designations.
02m,01dec00,???  Update ARM block
02l,06oct00,ish  fix MCF5400
02k,07jul00,dh   rationalised mcf family to 2 cpus.
02j,23nov99,yvp  adding CPU_FAMILY FRV and CPU type FR500 for Fujitsu FR-V
                 (a.k.a Venus) family processors
02i,27mar00,ish  Fixed CPU identifiers in ColdFire support
02h,15mar00,dra  Added ColdFire support.
02g,12oct99,yvp  Merge from .../tor2_0_0.coretools-baseline branch to make
                 Tor2 code work with T3 main/LATEST compiler
02f,09sep99,myz  added CW4000_16 support
02f,22jul99,jld  Regularize CPU=MCOREx tags.
02e,17dec97,ur   added MCORE support.
02f,05nov97,mem  added SPARCV9 support.
02n,18oct99,dra  added CW4000, CW4011, VR4100, VR5000 and VR5400 support.
02m,13jul99,bc   Added SH7718 <-> sh3e
02l,02jul98,st   added SH7750 support (SH4).
02k,05may98,jmc  added SH-DSP and SH3-DSP support.
02j,23apr97,hk   added SH support.
02i,17aug97,tpr  added PowerPC EC 603 support.
02h,15aug97,cym  added SIMNT support.
02g,09apr98,hdn  added support for Pentium, PentiumPro.
02f,26mar97,cdp  added Thumb (ARM7TDMI_T) support.
02e,28nov96,cdp  added ARM support.
02d,12jul96,kkk  added CW4000 & R4650 support.
02c,08feb96,tpr  added PPC505 and PPC860 support.
02b,23feb96,tpr  undefined the PPC macro defined by the PowerPC Gnu.
02a,26may94,yao  added PPC support.
01k,24jul95,ism  added SIMSOLARIS support.
01j,27dec95,myz  added I960HX stuff.
01i,20mar95,kvk  added I960JX specific stuff.
01h,31oct94,kdl  removed comment-within-comment.
01f,27sep93,cd   added R4000 support.
01g,26oct94,tmk  added new cpu type MC68LC040
01f,21jul94,tpr  added MC68060 cpu.
01f,09jun93,hdn  added support for I80X86
01g,02dec93,tpr  added definition for the AMD 29200 microcontroller
	    pad  added definitions for the AMD 29030 cpu
01g,11aug93,gae  vxsim hppa.
01f,22jun93,gae  vxsim: added SIMSPARCSUNOS.
01e,13nov92,dnw  added test for correct definition of CPU
01d,22sep92,rrr  added support for c++
01c,07sep92,smb  added documentation
01b,23jul92,jwt  restored SPARClite reference omitted in file creation.
01a,11jul92,smb  CPU definitions moved from vxWorks.h.
*/

/*
DESCRIPTION
Depending on the value of CPU passed to the system by the compiler command
line, the CPU_FAMILY is defined.  This must be the first header file
included by vxWorks.h.
*/

#ifndef __INCvxCpuh
#define __INCvxCpuh

#ifdef __cplusplus
extern "C" {
#endif

/* CPU types */

/* Turn off stuff that some compilers pre-define ... */
#ifdef MC68000
#undef MC68000
#endif
#ifdef I960
#undef I960
#endif
#ifdef PPC
#undef PPC
#endif

/* Ensure CPU_FAMILY undefined initially */
#ifdef CPU_FAMILY
#undef CPU_FAMILY
#endif

@@@@@@ this line of vxCpu.in gets replaced by generated content @@@@@@

/*
 * Check that CPU and CPU_FAMILY are now defined correctly.
 * If CPU is defined to be one of the above valid values then
 * the CPU_FAMILY will have been properly selected.
 * This is required in order to select the right headers
 * and definitions for that CPU in subsequent headers.
 * If CPU or CPU_FAMILY is not defined at this point,
 * we generate an error and abort the compilation.
 */

#if !defined(CPU) || !defined(CPU_FAMILY)
#error CPU is not defined correctly
#endif

#ifdef __cplusplus
}
#endif

#endif /* __INCvxCpuh */
