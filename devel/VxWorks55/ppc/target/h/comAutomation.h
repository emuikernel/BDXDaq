/* comAutomation.h generated by WIDL Version 2.2.1 on 06-Dec-01 at 11:42:36 AM */

#include "comBase.h"

#ifndef __INCcomAutomation_h
#define __INCcomAutomation_h


#include "comCoreTypes.h"

#ifdef __cplusplus
extern "C" {
#endif

int include_comAutomation (void);

/*
 * VARENUM usage key,
 *
 * * [V] - may appear in a VARIANT
 * * [S] - may appear in a Safe Array
 *
 *  VT_EMPTY            [V]     nothing
 *  VT_NULL             [V]     SQL style Null
 *  VT_I2               [V][S]  2 byte signed int
 *  VT_I4               [V][S]  4 byte signed int
 *  VT_R4               [V][S]  4 byte real
 *  VT_R8               [V][S]  8 byte real
 *  VT_CY               [V][S]  currency
 *  VT_DATE             [V][S]  date
 *  VT_BSTR             [V][S]  OLE Automation string
 *  VT_ERROR            [V][S]  SCODE
 *  VT_BOOL             [V][S]  True=-1, False=0
 *  VT_VARIANT             [S]  VARIANT *
 *  VT_UNKNOWN          [V][S]  IUnknown *
 *  VT_UI1              [V][S]  unsigned char
 *  VT_ARRAY            [V][S]  SAFEARRAY*
 */
enum tagVARENUM
{
VT_EMPTY = 0,
VT_NULL = 1,
VT_I2 = 2,
VT_I4 = 3,
VT_R4 = 4,
VT_R8 = 5,
VT_CY = 6,
VT_DATE = 7,
VT_BSTR = 8,
VT_DISPATCH = 9,
VT_ERROR = 10,
VT_BOOL = 11,
VT_VARIANT = 12,
VT_UNKNOWN = 13,
VT_DECIMAL = 14,
VT_I1 = 16,
VT_UI1 = 17,
VT_UI2 = 18,
VT_UI4 = 19,
VT_I8 = 20,
VT_UI8 = 21,
VT_INT = 22,
VT_UINT = 23,
VT_VOID = 24,
VT_HRESULT = 25,
VT_PTR = 26,
VT_SAFEARRAY = 27,
VT_CARRAY = 28,
VT_USERDEFINED = 29,
VT_LPSTR = 30,
VT_LPWSTR = 31,
VT_FILETIME = 64,
VT_BLOB = 65,
VT_STREAM = 66,
VT_STORAGE = 67,
VT_STREAMED_OBJECT = 68,
VT_STORED_OBJECT = 69,
VT_BLOB_OBJECT = 70,
VT_CF = 71,
VT_CLSID = 72,
VT_VECTOR = 4096,
VT_ARRAY = 8192,
VT_BYREF = 16384,
VT_RESERVED = 32768,
VT_ILLEGAL = 65535,
VT_ILLEGALMASKED = 4095,
VT_TYPEMASK = 4095,
};

typedef enum tagVARENUM VARENUM;

typedef unsigned short VARTYPE;

struct tagVARIANT
{
VARTYPE vt;
WORD wReserved1;
WORD wReserved2;
WORD wReserved3;
union 
{
LONG lVal;
BYTE bVal;
SHORT iVal;
FLOAT fltVal;
DOUBLE dblVal;
VARIANT_BOOL boolVal;
SCODE scode;
CY cyVal;
DATE date;
BSTR bstrVal;
IUnknown* punkVal;
struct tagSAFEARRAY* parray;
BYTE* pbVal;
SHORT* piVal;
LONG* plVal;
FLOAT* pfltVal;
DOUBLE* pdblVal;
VARIANT_BOOL* pboolVal;
SCODE* pscode;
CY* pcyVal;
DATE* pdate;
BSTR* pbstrVal;
IUnknown** ppunkVal;
struct tagVARIANT* pvarVal;
void* byref;
char cVal;
USHORT uiVal;
ULONG ulVal;
INT intVal;
UINT uintVal;
char* pcVal;
USHORT* puiVal;
ULONG* pulVal;
INT* pintVal;
UINT* puintVal;
} ;
};

typedef struct tagVARIANT VARIANT;

typedef VARIANT* LPVARIANT;

typedef VARIANT VARIANTARG;

typedef VARIANT* LPVARIANTARG;

#define SF_ERROR VT_ERROR
#define SF_I1 VT_I1
#define SF_I2 VT_I2
#define SF_I4 VT_I4
#define SF_BSTR VT_BSTR
#define SF_UNKNOWN VT_UNKNOWN
#define SF_VARIANT VT_VARIANT
enum tagFADF_TYPE
{
FADF_AUTO = 1,
FADF_STATIC = 2,
FADF_EMBEDDED = 4,
FADF_FIXEDSIZE = 16,
FADF_RECORD = 32,
FADF_HAVEIID = 64,
FADF_HAVEVARTYPE = 128,
FADF_BSTR = 256,
FADF_UNKNOWN = 512,
FADF_DISPATCH = 1024,
FADF_VARIANT = 2048,
FADF_RESERVED = 61448,
};

typedef enum tagFADF_TYPE FADF_TYPE;

struct tagSAFEARRAYBOUND
{
ULONG cElements;
LONG lLbound;
};

typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;

typedef SAFEARRAYBOUND* LPSAFEARRAYBOUND;

struct tagSAFEARRAY
{
USHORT cDims;
USHORT fFeatures;
ULONG cbElements;
ULONG cLocks;
PVOID pvData;
SAFEARRAYBOUND rgsabound[1];
};

typedef struct tagSAFEARRAY SAFEARRAY;

#ifdef __cplusplus
}
#endif



#endif /* __INCcomAutomation_h */


