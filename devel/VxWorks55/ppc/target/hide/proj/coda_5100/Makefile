# Makefile generated by the project manager
#


# GENERATED: Thu Sep 25 10:56:31 AM EDT 2003
# DO NOT EDIT - file is regenerated whenever the project changes


## core information

ifeq ($(wildcard Makefile),)
PRJ_DIR        = ..
else
PRJ_DIR        = .
endif
PRJ_FILE       = coda_5100.wpj
PRJ_TYPE       = vxWorks
PRJ_OBJS       = sysALib.o hawkI2c.o hawkSmc.o sysLib.o sysMotVpdUtil.o sysMaxL2Disable.o sysMotVpdALib.o usrAppInit.o prjConfig.o linkSyms.o intDisconnect.o
BOOT_OBJS      = romInit.o sysVxALib.o romStart.o $(BOOT_EXTRA)
BUILD_SPEC     = coda
BSP_DIR        = $(WIND_BASE)/target/config/mv5100
TGT_DIR        = $(WIND_BASE)/target



## set searching directories for dependencies

vpath %.c $(BSP_DIR)
vpath %.cpp $(BSP_DIR)
vpath %.cxx $(BSP_DIR)


## build-configuration info

ifeq ($(BUILD_SPEC),default)
CPU            = PPC604
TOOL           = gnu
TOOL_FAMILY    = gnu
DEFAULT_RULE   = vxWorks
endif

ifeq ($(BUILD_SPEC),default_rom)
CPU            = PPC604
TOOL           = gnu
TOOL_FAMILY    = gnu
DEFAULT_RULE   = vxWorks_rom
endif

ifeq ($(BUILD_SPEC),default_romCompress)
CPU            = PPC604
TOOL           = gnu
TOOL_FAMILY    = gnu
DEFAULT_RULE   = vxWorks_romCompress
endif

ifeq ($(BUILD_SPEC),default_romResident)
CPU            = PPC604
TOOL           = gnu
TOOL_FAMILY    = gnu
DEFAULT_RULE   = vxWorks_romResident
endif

ifeq ($(BUILD_SPEC),coda)
CPU            = PPC604
TOOL           = gnu
TOOL_FAMILY    = gnu
DEFAULT_RULE   = vxWorks
endif


## component-configuration info

COMPONENTS = INCLUDE_ALTIVEC \
	INCLUDE_ALTIVEC_SHOW \
	INCLUDE_ANSI_ASSERT \
	INCLUDE_ANSI_CTYPE \
	INCLUDE_ANSI_LOCALE \
	INCLUDE_ANSI_MATH \
	INCLUDE_ANSI_STDIO \
	INCLUDE_ANSI_STDIO_EXTRA \
	INCLUDE_ANSI_STDLIB \
	INCLUDE_ANSI_STRING \
	INCLUDE_ANSI_TIME \
	INCLUDE_ARP_API \
	INCLUDE_AUX_CLK \
	INCLUDE_BOOT_LINE_INIT \
	INCLUDE_BSD_SOCKET \
	INCLUDE_BUF_MGR \
	INCLUDE_CACHE_ENABLE \
	INCLUDE_CACHE_SUPPORT \
	INCLUDE_CBIO \
	INCLUDE_CPLUS \
	INCLUDE_CPLUS_DEMANGLER \
	INCLUDE_CPLUS_LANG \
	INCLUDE_CTORS_DTORS \
	INCLUDE_DEBUG \
	INCLUDE_DHCPC_LEASE_CLEAN \
	INCLUDE_DIAB_INTRINSICS \
	INCLUDE_DISK_CACHE \
	INCLUDE_DISK_PART \
	INCLUDE_DISK_UTIL \
	INCLUDE_DLL \
	INCLUDE_DOSFS_CHKDSK \
	INCLUDE_DOSFS_DIR_FIXED \
	INCLUDE_DOSFS_DIR_VFAT \
	INCLUDE_DOSFS_FAT \
	INCLUDE_DOSFS_FMT \
	INCLUDE_DOSFS_MAIN \
	INCLUDE_END \
	INCLUDE_END_BOOT \
	INCLUDE_ENV_VARS \
	INCLUDE_EXC_HANDLING \
	INCLUDE_EXC_SHOW \
	INCLUDE_EXC_TASK \
	INCLUDE_FLOATING_POINT \
	INCLUDE_FORMATTED_IO \
	INCLUDE_FTP \
	INCLUDE_GNU_INTRINSICS \
	INCLUDE_HASH \
	INCLUDE_HOST_TBL \
	INCLUDE_HW_FP \
	INCLUDE_HW_FP_SHOW \
	INCLUDE_IO_SYSTEM \
	INCLUDE_IP \
	INCLUDE_KERNEL \
	INCLUDE_LOADER \
	INCLUDE_LOGGING \
	INCLUDE_LOOPBACK \
	INCLUDE_LSTLIB \
	INCLUDE_MEMORY_CONFIG \
	INCLUDE_MEM_MGR_BASIC \
	INCLUDE_MEM_MGR_FULL \
	INCLUDE_MEM_SHOW \
	INCLUDE_MMU_BASIC \
	INCLUDE_MODULE_MANAGER \
	INCLUDE_MSG_Q \
	INCLUDE_MSG_Q_SHOW \
	INCLUDE_MUX \
	INCLUDE_NETDEV_CONFIG \
	INCLUDE_NETDEV_NAMEGET \
	INCLUDE_NETMASK_GET \
	INCLUDE_NETWORK \
	INCLUDE_NET_HOST_SETUP \
	INCLUDE_NET_INIT \
	INCLUDE_NET_LIB \
	INCLUDE_NET_REM_IO \
	INCLUDE_NET_SETUP \
	INCLUDE_NET_SHOW \
	INCLUDE_NFS \
	INCLUDE_PCI_CFGSHOW \
	INCLUDE_PCI_PARAMS \
	INCLUDE_PING \
	INCLUDE_PIPES \
	INCLUDE_POSIX_CLOCKS \
	INCLUDE_POSIX_PTHREADS \
	INCLUDE_POSIX_SCHED \
	INCLUDE_RLOGIN \
	INCLUDE_RNG_BUF \
	INCLUDE_ROUTE_SOCK \
	INCLUDE_RPC \
	INCLUDE_SECURITY \
	INCLUDE_SELECT \
	INCLUDE_SELECT_SUPPORT \
	INCLUDE_SEM_BINARY \
	INCLUDE_SEM_COUNTING \
	INCLUDE_SEM_MUTEX \
	INCLUDE_SEM_SHOW \
	INCLUDE_SHELL \
	INCLUDE_SHELL_BANNER \
	INCLUDE_SIGNALS \
	INCLUDE_SIO \
	INCLUDE_SNTPC \
	INCLUDE_SPY \
	INCLUDE_STANDALONE_SYM_TBL \
	INCLUDE_STARTUP_SCRIPT \
	INCLUDE_STAT_SYM_TBL \
	INCLUDE_STDIO \
	INCLUDE_STDIO_SHOW \
	INCLUDE_SYM_TBL \
	INCLUDE_SYM_TBL_INIT \
	INCLUDE_SYM_TBL_SHOW \
	INCLUDE_SYM_TBL_SYNC \
	INCLUDE_SYSCLK_INIT \
	INCLUDE_SYSHW_INIT \
	INCLUDE_SYS_START \
	INCLUDE_TAR \
	INCLUDE_TASK_HOOKS \
	INCLUDE_TASK_HOOKS_SHOW \
	INCLUDE_TASK_SHOW \
	INCLUDE_TASK_VARS \
	INCLUDE_TCP \
	INCLUDE_TCP_DEBUG \
	INCLUDE_TCP_SHOW \
	INCLUDE_TELNET \
	INCLUDE_TFTP_CLIENT \
	INCLUDE_TIMEX \
	INCLUDE_TTY_DEV \
	INCLUDE_UDP \
	INCLUDE_UDP_SHOW \
	INCLUDE_UNLOADER \
	INCLUDE_USER_APPL \
	INCLUDE_VME_PARAMS \
	INCLUDE_VXEVENTS \
	INCLUDE_WATCHDOGS \
	INCLUDE_WDB \
	INCLUDE_WDB_ALTIVEC \
	INCLUDE_WDB_BANNER \
	INCLUDE_WDB_BP \
	INCLUDE_WDB_COMM_END \
	INCLUDE_WDB_CTXT \
	INCLUDE_WDB_DIRECT_CALL \
	INCLUDE_WDB_EVENTPOINTS \
	INCLUDE_WDB_EVENTS \
	INCLUDE_WDB_EXC_NOTIFY \
	INCLUDE_WDB_EXIT_NOTIFY \
	INCLUDE_WDB_FUNC_CALL \
	INCLUDE_WDB_GOPHER \
	INCLUDE_WDB_HW_FP \
	INCLUDE_WDB_MEM \
	INCLUDE_WDB_REG \
	INCLUDE_WDB_START_NOTIFY \
	INCLUDE_WDB_SYS \
	INCLUDE_WDB_SYS_HW_FP \
	INCLUDE_WDB_TASK \
	INCLUDE_WDB_TASK_ALTIVEC \
	INCLUDE_WDB_TASK_BP \
	INCLUDE_WDB_TASK_HW_FP \
	INCLUDE_WDB_USER_EVENT \
	INCLUDE_WDB_VIO \
	INCLUDE_WDB_VIO_LIB
COMPONENT_LIBS = 


include $(TGT_DIR)/h/make/defs.project


## build-configuration info

ifeq ($(BUILD_SPEC),default)
AR               = arppc
AS               = ccppc
BOOT_EXTRA       = hawkI2c.o hawkSmc.o sysMotVpdUtil.o sysMotVpdALib.o
CC               = ccppc
CC_ARCH_SPEC     = -mcpu=604 -mstrict-align
CFLAGS           = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100
CFLAGS_AS        = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -P -xassembler-with-cpp -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100
CFLAGS_AS_PROJECT = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)/target/config/all -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/src/config -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DMV5100 -P -xassembler-with-cpp
CFLAGS_PROJECT   = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)/target/config/all -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/src/config -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DMV5100
CPP              = ccppc -E -P
EXTRA_MODULES    = 
LD               = ldppc
LDFLAGS          = -X -N
LD_LINK_PATH     = -L$(WIND_BASE)/target/lib/ppc/PPC604/gnu -L$(WIND_BASE)/target/lib/ppc/PPC604/common
LD_PARTIAL       = ccppc -r -nostdlib -Wl,-X
LD_PARTIAL_FLAGS = -X -r
LIBS             = $(VX_OS_LIBS)
NM               = nmppc
OPTION_DEFINE_MACRO = -D
OPTION_DEPEND    = -M -w
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
OPTION_LANG_C    = -xc
OPTION_UNDEFINE_MACRO = -U
RAM_HIGH_ADRS    = 00800000 # RAM text/data address
RAM_LOW_ADRS     = 00100000 # RAM text/data address
SIZE             = sizeppc
TOOL_FAMILY      = gnu
USR_ENTRY        = usrInit
POST_BUILD_RULE  = 
endif

ifeq ($(BUILD_SPEC),default_rom)
AR               = arppc
AS               = ccppc
BOOT_EXTRA       = hawkI2c.o hawkSmc.o sysMotVpdUtil.o sysMotVpdALib.o
CC               = ccppc
CC_ARCH_SPEC     = -mcpu=604 -mstrict-align
CFLAGS           = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100
CFLAGS_AS        = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -P -xassembler-with-cpp -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100
CFLAGS_AS_PROJECT = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)/target/config/all -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/src/config -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DMV5100 -P -xassembler-with-cpp
CFLAGS_PROJECT   = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)/target/config/all -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/src/config -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DMV5100
CPP              = ccppc -E -P
EXTRA_MODULES    = 
HEX_FLAGS        = 
LD               = ldppc
LDFLAGS          = -X -N
LD_LINK_PATH     = -L$(WIND_BASE)/target/lib/ppc/PPC604/gnu -L$(WIND_BASE)/target/lib/ppc/PPC604/common
LD_PARTIAL       = ccppc -r -nostdlib -Wl,-X
LD_PARTIAL_FLAGS = -X -r
LIBS             = $(VX_OS_LIBS)
NM               = nmppc
OPTION_DEFINE_MACRO = -D
OPTION_DEPEND    = -M -w
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
OPTION_LANG_C    = -xc
OPTION_UNDEFINE_MACRO = -U
RAM_HIGH_ADRS    = 00800000 # RAM text/data address
RAM_LOW_ADRS     = 00100000 # RAM text/data address
ROM_SIZE         = 00100000 # number of bytes of ROM space
ROM_TEXT_ADRS    = fff00100 # ROM entry address
SIZE             = sizeppc
TOOL_FAMILY      = gnu
USR_ENTRY        = usrInit
POST_BUILD_RULE  = 
endif

ifeq ($(BUILD_SPEC),default_romCompress)
AR               = arppc
AS               = ccppc
BOOT_EXTRA       = hawkI2c.o hawkSmc.o sysMotVpdUtil.o sysMotVpdALib.o
CC               = ccppc
CC_ARCH_SPEC     = -mcpu=604 -mstrict-align
CFLAGS           = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100
CFLAGS_AS        = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -P -xassembler-with-cpp -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100
CFLAGS_AS_PROJECT = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)/target/config/all -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/src/config -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DMV5100 -P -xassembler-with-cpp
CFLAGS_PROJECT   = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)/target/config/all -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/src/config -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DMV5100
CPP              = ccppc -E -P
EXTRA_MODULES    = 
HEX_FLAGS        = 
LD               = ldppc
LDFLAGS          = -X -N
LD_LINK_PATH     = -L$(WIND_BASE)/target/lib/ppc/PPC604/gnu -L$(WIND_BASE)/target/lib/ppc/PPC604/common
LD_PARTIAL       = ccppc -r -nostdlib -Wl,-X
LD_PARTIAL_FLAGS = -X -r
LIBS             = $(VX_OS_LIBS)
NM               = nmppc
OPTION_DEFINE_MACRO = -D
OPTION_DEPEND    = -M -w
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
OPTION_LANG_C    = -xc
OPTION_UNDEFINE_MACRO = -U
RAM_HIGH_ADRS    = 00800000 # RAM text/data address
RAM_LOW_ADRS     = 00100000 # RAM text/data address
ROM_SIZE         = 00100000 # number of bytes of ROM space
ROM_TEXT_ADRS    = fff00100 # ROM entry address
SIZE             = sizeppc
TOOL_FAMILY      = gnu
USR_ENTRY        = usrInit
POST_BUILD_RULE  = 
endif

ifeq ($(BUILD_SPEC),default_romResident)
AR               = arppc
AS               = ccppc
BOOT_EXTRA       = hawkI2c.o hawkSmc.o sysMotVpdUtil.o sysMotVpdALib.o
CC               = ccppc
CC_ARCH_SPEC     = -mcpu=604 -mstrict-align
CFLAGS           = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100
CFLAGS_AS        = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -P -xassembler-with-cpp -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100
CFLAGS_AS_PROJECT = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)/target/config/all -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/src/config -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DMV5100 -P -xassembler-with-cpp
CFLAGS_PROJECT   = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)/target/config/all -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/src/config -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DMV5100
CPP              = ccppc -E -P
EXTRA_MODULES    = 
HEX_FLAGS        = 
LD               = ldppc
LDFLAGS          = -X -N
LD_LINK_PATH     = -L$(WIND_BASE)/target/lib/ppc/PPC604/gnu -L$(WIND_BASE)/target/lib/ppc/PPC604/common
LD_PARTIAL       = ccppc -r -nostdlib -Wl,-X
LD_PARTIAL_FLAGS = -X -r
LIBS             = $(VX_OS_LIBS)
NM               = nmppc
OPTION_DEFINE_MACRO = -D
OPTION_DEPEND    = -M -w
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
OPTION_LANG_C    = -xc
OPTION_UNDEFINE_MACRO = -U
RAM_HIGH_ADRS    = 00800000 # RAM text/data address
RAM_LOW_ADRS     = 00100000 # RAM text/data address
ROM_SIZE         = 00100000 # number of bytes of ROM space
ROM_TEXT_ADRS    = fff00100 # ROM entry address
SIZE             = sizeppc
TOOL_FAMILY      = gnu
USR_ENTRY        = usrInit
POST_BUILD_RULE  = 
endif

ifeq ($(BUILD_SPEC),coda)
AR               = arppc
AS               = ccppc
BOOT_EXTRA       = hawkI2c.o hawkSmc.o sysMotVpdUtil.o sysMotVpdALib.o
CC               = ccppc
CC_ARCH_SPEC     = -mcpu=604 -mstrict-align
CFLAGS           = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100
CFLAGS_AS        = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -P -xassembler-with-cpp -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100
CFLAGS_AS_PROJECT = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)/target/config/all -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/src/config -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DMV5100 -P -xassembler-with-cpp
CFLAGS_PROJECT   = -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)/target/config/all -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/src/config -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DMV5100
CPP              = ccppc -E -P
EXTRA_MODULES    = 
LD               = ldppc
LDFLAGS          = -X -N
LD_LINK_PATH     = -L$(WIND_BASE)/target/lib/ppc/PPC604/gnu -L$(WIND_BASE)/target/lib/ppc/PPC604/common
LD_PARTIAL       = ccppc -r -nostdlib -Wl,-X
LD_PARTIAL_FLAGS = -X -r
LIBS             = $(VX_OS_LIBS)
NM               = nmppc
OPTION_DEFINE_MACRO = -D
OPTION_DEPEND    = -M -w
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
OPTION_LANG_C    = -xc
OPTION_UNDEFINE_MACRO = -U
RAM_HIGH_ADRS    = 00800000 # RAM text/data address
RAM_LOW_ADRS     = 00100000 # RAM text/data address
SIZE             = sizeppc
TOOL_FAMILY      = gnu
USR_ENTRY        = usrInit
POST_BUILD_RULE  = 
endif

# override make definitions only below this line


# override make definitions only above this line

include $(TGT_DIR)/h/make/rules.project


## build-configuration info

sysALib.o: $(PRJ_DIR)/prjParams.h

ifeq ($(BUILD_SPEC),default)

usrAppInit.o:
	$(CC) -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100 -c $(PRJ_DIR)/usrAppInit.c

intDisconnect.o:
	$(CC) -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100 -c $(WIND_BASE)/target/config/mv5100/intDisconnect.c
endif

ifeq ($(BUILD_SPEC),default_rom)

usrAppInit.o:
	$(CC) -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100 -c $(PRJ_DIR)/usrAppInit.c

intDisconnect.o:
	$(CC) -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100 -c $(WIND_BASE)/target/config/mv5100/intDisconnect.c
endif

ifeq ($(BUILD_SPEC),default_romCompress)

usrAppInit.o:
	$(CC) -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100 -c $(PRJ_DIR)/usrAppInit.c

intDisconnect.o:
	$(CC) -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100 -c $(WIND_BASE)/target/config/mv5100/intDisconnect.c
endif

ifeq ($(BUILD_SPEC),default_romResident)

usrAppInit.o:
	$(CC) -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100 -c $(PRJ_DIR)/usrAppInit.c

intDisconnect.o:
	$(CC) -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100 -c $(WIND_BASE)/target/config/mv5100/intDisconnect.c
endif

ifeq ($(BUILD_SPEC),coda)

usrAppInit.o:
	$(CC) -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100 -c $(PRJ_DIR)/usrAppInit.c

intDisconnect.o:
	$(CC) -g -mcpu=604 -mstrict-align -ansi -fno-builtin -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/mv5100 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=PPC604 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -DMV5100 -c $(WIND_BASE)/target/config/mv5100/intDisconnect.c
endif


## dependencies


sysALib.o: $(WIND_BASE)/target/config/mv5100/sysALib.s \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


hawkI2c.o: $(WIND_BASE)/target/config/mv5100/hawkI2c.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stddef.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


hawkSmc.o: $(WIND_BASE)/target/config/mv5100/hawkSmc.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stddef.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


sysLib.o: $(WIND_BASE)/target/config/mv5100/sysLib.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stddef.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stdarg.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/va-ppc.h


sysMotVpdUtil.o: $(WIND_BASE)/target/config/mv5100/sysMotVpdUtil.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stddef.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


sysMaxL2Disable.o: $(WIND_BASE)/target/config/mv5100/sysMaxL2Disable.s \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


sysMotVpdALib.o: $(WIND_BASE)/target/config/mv5100/sysMotVpdALib.s \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


sysVxALib.o: $(WIND_BASE)/target/config/mv5100/sysVxALib.s


romInit.o: $(WIND_BASE)/target/config/mv5100/romInit.s \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


romStart.o: $(WIND_BASE)/target/config/comps/src/romStart.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stddef.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stdarg.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/va-ppc.h


usrAppInit.o: $(PRJ_DIR)/usrAppInit.c


prjConfig.o: $(PRJ_DIR)/prjConfig.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stddef.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stdarg.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/va-ppc.h


linkSyms.o: $(PRJ_DIR)/linkSyms.c


intDisconnect.o: $(WIND_BASE)/target/config/mv5100/intDisconnect.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stddef.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/stdarg.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/powerpc-wrs-vxworks/gcc-2.96/include/va-ppc.h


## user defined rules

romStart.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(ROM_FLAGS_EXTRA) $< -o $@

hawkSmc.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/mv5100/hawkSmc.c -o $@

sysMotVpdUtil.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/mv5100/sysMotVpdUtil.c -o $@

sysMaxL2Disable.o : 
	$(AS) $(OPTION_OBJECT_ONLY) $(CFLAGS_AS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/mv5100/sysMaxL2Disable.s -o $@

hawkI2c.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/mv5100/hawkI2c.c -o $@

romInit.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS_AS) $(PROJECT_BSP_FLAGS_EXTRA) $(ROM_FLAGS_EXTRA) $< -o $@

linkSyms.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(PRJ_DIR)/linkSyms.c -o $@

sysVxALib.o : 
	$(AS) $(OPTION_OBJECT_ONLY) $(CFLAGS_AS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/mv5100/sysVxALib.s -o $@

sysLib.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/mv5100/sysLib.c -o $@

sysALib.o : 
	$(AS) $(OPTION_OBJECT_ONLY) $(CFLAGS_AS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/mv5100/sysALib.s -o $@

sysMotVpdALib.o : 
	$(AS) $(OPTION_OBJECT_ONLY) $(CFLAGS_AS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/mv5100/sysMotVpdALib.s -o $@

prjConfig.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(PRJ_DIR)/prjConfig.c -o $@

