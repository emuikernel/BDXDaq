C======================================================================
C======================================================================
C======================================================================
C
C
C         A N  A B R I D G E D  G U I D E  T O  E L S S		vesion 1.4
C
C
C   PURPOSE :  SIMULATION OF ELECTROMAGNETIC SHOWERS
C              IN MULTIMEDIA ABSORBERS OF ARBITRARY
C                          GEOMETRY.
C
C
C   AUTHOR  :         Amatuni Ts. A.
C	       YEREVAN PHYSICS INSTITUTE
C                 ALIKHANYAN   St. 2
C                    YEREVAN 375036
C		   REPUBLIC OF ARMENIA
C
C
C		RELEASED IN AUGUST 83.
C		LAST MODIFICATIONS MADE ON 27/11/92
C
C		LONG WRITEUP:
C		Ts. Amatuni, "M-C Simulation of e.m. Showers"
C		             Yerevan Phys. Inst. report EFI-735(50)-84,1984
C		Ts. Amatuni, "ELSS-1 User's Guide"
C			     Yerevan Phys. Inst. report EFI-760(75)-84,1984
C
C	***** Modified by Mikhail V. Kossov CLAS(CEBAF) on 7/12/93/ *****
C	***** to be called as initialization and shower subroutines *****
C
C
C   INTERACTIONS        1) PAIR PRODUCTION.
C       AND             2) BREMSSTRAHLUNG.
C    PROCESSES	   	   WITH ACCOUNT OF
C    INCLUDED :            A) ARBITRARY SCREENING,
C			   B) DENSITY EFFECT,
C			   C) LANDAU-POMERANCHUK-MIGDAL EFFECT.
C			3) MULTIPLE SCATTERING.
C   			   WITH ACCOUNT OF THE FIRST THREE
C			   TERMS OF THE MOLIER EXPANSION.
C			4) IONISATION LOSSES
C			   WITH ACCOUNT OF
C			   A) THE DENSITY EFFECT,
C			   B) FLUCTUATIONS.
C			5) RADIATION LOSSES AND THEIR FLUCTUATIONS.
C			6) ELECTRON-ELECTRON SCATTERING.
C			7) POSITRON-ELECTRON SCATTERING.
C			8) COMPTON EFFECT.
C			9) PHOTOEFFECT (K-SHELL WITH AN APPROXIMATE
C			   CORRECTION FOR THE L-SHELL CONTRIBUTION).
C                       10) 2-PHOTON POSITRON-ELECTRON ANNIHILATION.
C
C		UNITS: CM  - for all space dimensions,
C		*****  MeV - for all energy/momentum values
C
C               USAGE:  IN ORDER TO SIMULATE ELECTROMAGNETIC SHOWERS
C		*****   ONE HAS TO
C 	                A) INITIALIZE PACKAGE "ELSS_INIT(EB,CP,CE,NA,NAMES)"
C			C) CALL ELSS_SHOWER WITH FILLED "COMMON/ELSS_PARINI/"
C		        B) SUPPLY A SUBROUTINE "ACCESS(IFLAG)", IFLAG= 1 - 6
C
C   1) EB - Maximal possible eneggy (Energy of Beam)
C   2) CP - cut for the lowest energy of photons in Shower (Cut for Photons)
C   3) CE - cut for the lowest energy of electrons in Shower (Cut for Photons)
C   4) NA - Number of media (must be .LE. 10) to be used as absorbeds
C   5) NAMES(10) (CHARACTER*4) - names of absorbers from the following list:
C
C			   U   ,FOR URANIUM
C			   PB  ,FOR LEAD
C			   W   ,FOR TUNGSTEN
C			   CU  ,FOR COPPER
C			   FE  ,FOR IRON
C			   AL  ,FOR ALUMINIUM
C			   C   ,FOR CARBON
C			   BE  ,FOR BERYLLIUM
C			   LA  ,FOR LIQUID ARGON
C			   NAI ,FOR NAI CRYSTALL
C			   F2  ,F2 LEAD GLASS
C			   SF2 ,FOR SF-2 LEAD GLASS
C			   TF1 ,FOR TF-1 LEAD GLASS
C			   SF5 ,FOR SF5 LEAD GLASS
C			   DF6 ,FOR DF-6 LEAD GLASS
C			   SF6W,FOR SF-6W LEAD GLASS
C			   BGO ,FOR BGO CRYSTALL
C			   SCG ,FOR SCINTILLATING GLASS
C			   AIR ,FOR AIR AT N.T.P.
C			   H2O ,FOR WATER
C			   CONC,FOR ORDINARY SHIELDING CONCRETE
C		           PLEX,FOR PLEXIGLASS
C			   PS  ,FOR POLYSTERENE(PLASTIC SCINTILLATOR)
C			   MWPC,CONVENTIONAL MWPC GAS
C
C=========================================================================
C
C	S O M E    C O M M O N    B L O C K S
C
C   ****COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
C
C	AP -  PHOTON CUT-OFF ENERGY
C	AE -  ELECTRON CUT-OFF ENERGY (TOTAL ENERGY)
C	ELM - ELECTRON REST MASS
C	TE -  =AE-ELM
C
C   ****COMMON/ELSS_PARINI/IQI,IRI,WTI,EI,TOFI,XI,YI,ZI,UI,VI,WI,NEVREQ,
C                          NEVSIM,NEVSAV
C         
C       IQI - THE ELECTRIC CHARGE OF THE PRIMARY PARTICLE
C	IRI - THE REGION INDEX WHERE THE PRIMARY ENTERS THE
C             ABSORBER
C	WTI - WEIGHT OF THE PRIMARY (WTI=1,IN THIS VERSION)
C	EI  - ENERGY OF THE PRIMARY (TOTAL ENERGY FOR ELECTRONS)
C	TOFI - THE TOF OF THE PRIMARY(DEFAULT 0.)
C	XI,YI,ZI - COORDINATES OF THE PRIMARY (DEFAULT VALUES 0.,0.,0.)
C	UI,VI,WI - DIRECTION COSINES OF THE PRIMARY (DEFAULT
C		   VALUES 0.,0.,1.)
C	NEVREQ   - THE REQUIRED NUMBER OF SHOWER CASES
C	NEVSIM   - THE NUMBER OF SIMULATED SHOWERS
C	NEVSAV   - CAN BE USED FOR SAVING
C
C   ****COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
C       IQ,WT,E,TOF,X,Y,Z,U,V,W - THE SAME AS ABOVE BUT FOR THE CURRENT PARTICLE
C
C	IR,IM,IDISC - SHOULD BE EXPLANED IN MORE DETAIL
C
C	IR - IS THE REGION INDEX  FOR CURRENT PARTICLE LOCATION
C	IM - IS THE MEDIUM INDEX FOR THIS REGION
C
C	EXAMPLE - LET THE ABSORBER BE AN ALUMINIUM ,LIQUID-ARGON CALORIMETER
C	          THE MEDIA APPEARING FIRST IN THE DATA CARDS
C	          HAS IM=1,SECOND - IM=2.
C	          I.E.,IF THE DATA CARDS WERE OF THE FORM
C
C	          AL
C	          LA
C
C	          THEN IM=1 MEANS THAT THE PARTICLE IS IN ALUMINIUM
C	               IM=2 MEANS THAT THE PARTICLE IS IN L.A.
C
C	          BESIDES WE CAN NUMERATE THE LAYERS (THE REGION INDEX
C	          FOR THIS CASE, VACUUM - IR=1, AL - IR=2, LA - IR=3,
C	          AL - IR=4,...ETC
C	IDISC - PARTICLE DISCARDING FLAG
C	        NORMALLY IDISC=0. SETTING IDISC=+1 CAUSES IMMEDIATE
C	        DISCARD  OF THE CURRENT PARTICLE, IDISC=-1 AFTER
C	        TRANSPORTING DISTANCE STEPA (SEE BELOW) AND SIMULATING 
C		THE IONIZATION LOSSES AND THE MULTIPLE SCATTERING ON 
C	        THE STEP.FOR PHOTONS THIS IS EQUIVALENT TO IDISC=+1.
C
C  ****COMMON/ELSS_STPSIZ/STEPR,STEPU, STEPA,STEPC,IROLD,IRNEW,ICROS
C
C      STEPR - (STEP RANDOM) FREE PATH LENGTH IN THE CURRENT MEDIUM
C                            COMPUTED BY THE PROGRAM.
C      STEPU - (STEP USER)   DISTANCE WHICH THE USER ALLOWS TO
C	                     TRANSPORT.IT COULD BE COMPUTED FOR 
C	                     EXAMPLE FROM GEOMETRY CONSIDERATIONS.
C	                     (DEFAULT STEPU=STEPR)
C      STEPA - (STEP ACTUAL) =MIN(STEPR,STEPU,RANGE FOR ELECTRONS)
C      STEPC - (STEP CURVED) IS NOT UTILISED (FOR REASONS WHICH WILL
C	                     BE DISCUSSED ELSEWHERE)
C      IROLD - =IR=INDEX OF THE CURRENT REGION
C      IRNEW - INDEX OF THE REGION TO WHICH THE PARTICLE PASSES
C              AFTER TRAVELLING DISTANCE STEPA (DEFAULT IROLD=IRNEW).
C              FOR MULTIMEDIA ABSORBERS OR FINITE GEOMETRY IRNEW SHOULD
C	       BE DETERMINED BY THE USER;
C
C	       EXAMPLE - IF(STEPU.LT.STEPR) IRNEW=...
C
C      ICROS - IS SET BY THE PROGRAM. IF=1 A BOUNDARY HAS BEEN CROSSED
C              AND THE PARTICLE IS NOW ON THE BOUNDARY, OTHERWISE=0. 
C
C  ****COMMON/ELSS_ENERGY/ELOSI,ELOSC,ELOST,EOLD,ENEW
C
C      ELOSI - ENERGY LOSS ON DISTANCE STEPA DUE TO IONIZATION
C      ELOSC - ENERGY LOSS AT INTERACTION POINTS DUE TO SUBCUTOFF
C              PARTICLES
C      ELOST - =ELOSI+ELOSC
C      EOLD  - =E=PARTICLE ENERGY AT BEGINNING OF STEP
C      ENEW  - PARTICLE ENERGY AFTER COMPLETING TRANSPORT OVER
C              DISTANCE STEPA
C
C  ****COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
C
C      NMED - NUMBER OF MEDIA
C      RHO  - THEIR DENSITIES
C      X0   - RADIATION LENGTHS
C      MED  - ARRAY OF MEDIUM INDICES       IM=MED(IR)
C
C             FOR THE ABOVE EXAMPLE
C             MED(1)=0 VACUUM
C             MED(2)=1 ALUMINIUM
C             MED(3)=2 LIQUID ARGON
C             MED(4)=3 ALUMINIUM
C               .
C               . ETC
C               .
C======================================================================
C
C
C	S U B R O U T I N E      A C C E S S (IFLAG).
C
C
C      THIS IS IN FACT THE MAIN PROGRAM DISGUISED AS A SUBROUTINE
C      FOR REASONS OF UNIVERSALITY. IT SHOULD BE SUPPLIED BY THE USER.
C      THE SHOWER SIMULATION CODE PASSES CONTROL TO THIS SUBROUTINE
C      IN CERTAIN SITUATIONS, SO THAT THE USER IS ABLE TO CONTROL
C      THE SHOWER PROPAGATION (FOR EXAMPLE, ACCOUNT FOR BOUNDARIES),
C      AND TO EXTRACT THE NEEDED INFORMATION (BY HISTOGRAMING
C      CERTAIN QUANTITIES)
C
C
C      IFLAG=1  IS CALLED AFTER THE PREPARATION ROUTINES
C               AND PRIOR TO SIMULATION OF THE FIRST SHOWER.
C               MAY BE USED FOR ANY PURPOSES.
C
C      IFLAG=2  IS CALLED PRIOR TO SIMULATION OF EACH SHOWER
C               MAY BE USED FOR REDEFINING IRI,EI,TOFI,XI,YI,ZI,
C               UI,VI WI,OR INITIALIZING USER-DEFINED ARRAYS
C               CONSTANTS,...,ETC.
C
C      IFLAG=3  IS CALLED AFTER THE PROGRAM HAS DECIDED TO
C               TRANSPORT THE CURRENT PARTICLE BY DISTANCE STEPR.
C               HERE THE USER MAY DEFINE STEPU,OR DISCARD THE
C               PARTICLE BY SETTING IDISC=1,OR IDISC=-1,OR DETERMINE
C               IRNEW IF IT TURNS OUT THAT STEPU.LT.STEPR,...,ETC,
C               OR TAKE NO ACTION AT ALL(FOR CERTAIN PROBLEMS)
C
C      IFLAG=4  IS CALLED AFTER COMPLETING TRANSPORT OVER
C               DISTANCE STEPA AND SIMULATION OF THE INTERACTION
C               ON IT. THIS CALL IS CONVENIENT FOR BOOK-KEEPING,
C               HISTOGRAMING,...ETC. OF QUANTITIES WHICH ARE OF
C		INTEREST.
C
C      IFLAG=5  IS CALLED AFTER THE SIMULATION OF EACH SHOWER.
C               MAY BE USED FOR SAVING,...,ETC.
C
C      IFLAG=6  IS CALLED AFTER THE SIMULATION OF ALL THE
C               SHOWERS. MAY BE USED FOR ANY PURPOSES (not used)
C======================================================================
C......................................................................
C......................................................................
C=================================================================-ELSS
	SUBROUTINE ELSS_INIT(EBEAM,CATP,CATE,NMEDIA,MENAME)
C	EBEAM - Maximal energy for possible energies of photons and e+/e-
C       CATP - CUT-OFF ENERGY for PHOTONS (MeV)
C       CATE - CUT-OFF ENERGY for ELECTRONS (MeV)
C       NMEDIA - number of media used
C       MENAME(10) - names of media like 'Pb' or 'PS'-scintillator 
C=================================================================-ELSS
	CHARACTER*4 NAME,NUN,MENAME(10)
	COMMON/ELSS_CUTOFF/AE,AP,ELM, TE
        COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
        COMMON/ELSS_MEDDAT/NCOM(10),ZZ(10,10),AA(10,10),WW(10,10)
        COMMON/ELSS_CROSEC/SBR(10,2),SMO(10),SBH(10),SAN(10),
     ,                SPH(10,3),SCO(10),SPA(10),SPN(10)
        COMMON/ELSS_SIGELE/STOTE,SBRE,SMOL,SBHA,SANI
        COMMON/ELSS_SIGPHO/STOTP(10),SPAR(10),SCOM(10),SPHO(10),
     ,                     SPHN(10)
        COMMON/ELSS_PARINI/IQI,IRI,WTI,EI,TOFI,XI,YI,ZI,UI,VI,WI,
     ,                NEVREQ,NEVSIM,NEVSAV
        COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
        COMMON/ELSS_STPSIZ/STEPR,STEPU,STEPA,STEPC,IROLD,IRNEW,ICROS
        COMMON/ELSS_ENERGY/ELOSI,ELOSC,ELOST,EOLD,ENEW	
        COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
        COMMON/ELSS_PBRHLP/DBH(10),DLP(10),ALFP(10),ALFB(10),AP1(10),
     ,        AP2(10),AB1(10),COR(10),SL1(10),SL2(10),W0(10),W0L(10)
        COMMON/ELSS_REJFUN/A1(10),A2(10),B1(10),B2(10),
     ,                C1(10),C2(10),DM(10),EM(10)
        COMMON/ELSS_ILSHLP/EIP(10),EPF(10),GAS(10),G0S(10),     
     ,                G1S(10),X1S(10),AST(10),BI(10),BP(10)
        COMMON/ELSS_DEDXTB/XSI(10),DEDXN(101,10),DEDXP(101,10)
        COMMON/ELSS_MLSHLP/BC(10),XCC(10),EMSCT
        COMMON/ELSS_PHOHLP/EKPH(10)
        COMMON/ELSS_DISUNI/NUN,DUN
	COMMON/ELSS_RNSEED/ISEED
        COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	CALL ELSS_DATAIN(EBEAM,CATP,CATE,NMEDIA,MENAME)
C
	CALL ELSS_PREPAR
C
	CALL ELSS_ACCESS(1)
C
	RETURN
	END
C===============================================================-SHOWER
	SUBROUTINE ELSS_SHOWER
C===============================================================-SHOWER
	COMMON/ELSS_PARINI/IQI,IRI,WTI,EI,TOFI,XI,YI,ZI,UI,VI,WI,
     ,        	      NEVREQ,NEVSIM,NEVSAV
	COMMON/ELSS_MEMORY/ISIZ,ITOP,STACK(500)
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_STPSIZ/STEPR,STEPU,STEPA,STEPC,IROLD,IRNEW,ICROS
	COMMON/ELSS_ENERGY/ELOSI,ELOSC,ELOST,EOLD,ENEW
	COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_RNSEED/ISEED
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	CALL ELSS_ACCESS(2)
	CALL ELSS_STKINI ! Stack initialization (first particle)
20 	CONTINUE
	IF(ITOP.LE.0) GO TO 30
	CALL ELSS_STKPOP
	ICROS=0
	IDISC=0
	IROLD=IR
	IRNEW=IROLD
	IFAIL=1
	EOLD=E
	ENEW=EOLD
	ELOSI=0.
	ELOSC=0.
	ELOST=0.
	IF(IQ.EQ.0) CALL ELSS_PHOTON
	IF(IQ.NE.0) CALL ELSS_ELEPOS
	GO TO 20
C
30	CONTINUE
	NEVSIM=NEVSIM+1
	CALL ELSS_ACCESS(5)
C
	RETURN
	END
C===============================================================-CLOSE
	SUBROUTINE ELSS_CLOSE
C===============================================================-CLOSE
C
	CALL ELSS_ACCESS(6)

C	RETURN
	END
C===============================================================-ELEPOS
	SUBROUTINE ELSS_ELEPOS
C===============================================================-ELEPOS
C
C   	***** PERFORMS ELECTRON & POSITRON TRANSPORT *****
C
C=========================================================
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_SIGELE/STOTE,SBRE,SMOL,SBHA,SANI                         
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_STPSIZ/STEPR,STEPU,STEPA,STEPC,IROLD,IRNEW,ICROS
	COMMON/ELSS_ENERGY/ELOSI,ELOSC,ELOST,EOLD,ENEW
	COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
	COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA VLIGHT/29.979 245 8/
C
	IF(E.GT.AE) GO TO 10
	CALL ELSS_ANNIH
	GO TO 70
C
C	SAMPLE THE OPTICAL PATH LENGTH.
C
10	CONTINUE
	STEPO=-ALOG(RANDOM(0))
C
C	COMPUTE THE PSEUDO CROSS SECTIONS.
C
20	CONTINUE
	STEPR=1.0E+10
	IM=MED(IR)
	IF(IM.LE.0) GO TO 40
	CALL ELSS_ELESIG
C
C	SAMPLE THE 'FREE' PATH LENGTH.
C
30	CONTINUE
	STEPR=STEPO/STOTE
C
C	TRANSPORT THE PARTICLE.
C
40	CONTINUE
	STEPU=STEPR
	CALL ELSS_ACCESS(3)
	IF(IDISC.EQ.1 ) RETURN
	IF(STEPU.LE.0.) GO TO 20
	STEPA=AMIN1(STEPR,STEPU)
	CALL ELSS_ILOSS
	TOF=TOF+STEPA/(VLIGHT*SQRT(1.-ELM**2/(EOLD*ENEW)))
	X  =X+U*STEPA
	Y  =Y+V*STEPA
	Z  =Z+W*STEPA
	IF(ENEW.GT.AE) GO TO 45
	IF(IQ.EQ.+1) CALL ELSS_ANNIH
	GO TO 70
45	CONTINUE
	CALL ELSS_MSCAT
	STEPO=STEPO-STEPA*STOTE
	IF(STEPA.EQ.STEPR) GO TO 50
C
C	A BOUNDARY HAS BEEN REACHED
C
	ICROS=1
	ELOST=ELOSI+ELOSC
	CALL ELSS_ACCESS(4)
	IF(IDISC.EQ.-1) RETURN
	ICROS=0
	IROLD=IRNEW
	IR=IROLD
	EOLD=ENEW
	ELOSI=0.
	ELOSC=0.
	ELOST=0.
	GO TO 20
C
C	IT'S TIME TO INTERACT. SIMULATE THE INTERACTION.
C
50	CONTINUE
	IF(IDISC.EQ.-1) GO TO 70
	R=STOTE*RANDOM(0)
	IF(IQ.EQ.+1)    GO TO 60
	IF(R.LE.SBRE)   CALL ELSS_BREMS
	IF(R.GT.SBRE)   CALL ELSS_MOLLR
	                GO TO 70
60	CONTINUE
	IF(R.LE.SBRE)                    CALL ELSS_BREMS
	IF(R.GT.SBRE.AND.R.LE.SBRE+SBHA) CALL ELSS_BHABH
	IF(              R.GT.SBRE+SBHA) CALL ELSS_ANNIH
C
C	IF THE INTERACTION IS NOT FICTITIOUS STORE THE
C	  SECONDARIES IN THE LIFO STACK. ENABLE USER
C	         ACCESS AND END TRANSPORT.
C
70	CONTINUE
	IF(IFAIL.EQ.0) CALL ELSS_STKPSH
	ELOST=ELOSI+ELOSC
	CALL ELSS_ACCESS(4)
	IF(IDISC.EQ.-1) RETURN
	IF(IFAIL.EQ. 0) RETURN
	EOLD=ENEW
	ELOSI=0.
	ELOSC=0.
	ELOST=0.
	GO TO 10
	END
C===============================================================-PHOTON
	SUBROUTINE ELSS_PHOTON
C===============================================================-PHOTON
C
C       ***** PERFORMS PHOTON TRANSPORT *****
C
C============================================
	COMMON/ELSS_SIGPHO/STOTP(10),SPAR(10),SCOM(10),SPHO(10),SPHN(10)
        COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
        COMMON/ELSS_STPSIZ/STEPR,STEPU,STEPA,STEPC,IROLD,IRNEW,ICROS
        COMMON/ELSS_ENERGY/ELOSI,ELOSC,ELOST,EOLD,ENEW
        COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
        COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
        COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT                            
	DATA VLIGHT/29.979 245 8/
C
C	COMPUTE THE PSEUDO CROSS SECTIONS.
C
	CALL ELSS_PHOSIG
C
C	SAMPLE THE OPTICAL PATH LENGTH.
C
10	CONTINUE
	STEPO=-ALOG(RANDOM(0))
C
C	SAMPLE THE 'INTERACTION LENGTH'.
C
20	CONTINUE
	STEPR=1.0E+10
	IM=MED(IR)
	IF(IM.LE.0) GO TO 25
        STEPR=STEPO/STOTP(IM)
C
C	TRANSPORT THE PHOTON.
C
25	CONTINUE
	STEPU=STEPR
	CALL ELSS_ACCESS(3)
	IF(IDISC.EQ.1) RETURN
	STEPA=AMIN1(STEPU,STEPR)
	TOF=TOF+STEPA/VLIGHT
	X  =X+U*STEPA
	Y  =Y+V*STEPA
	Z  =Z+W*STEPA
	STEPO=STEPO-STEPA*STOTP(IM)
	IF(STEPA.EQ.STEPR) GO TO 30
C
C	A BOUNDARY HAS BEEN REACHED
C
	ICROS=1
	CALL ELSS_ACCESS(4)
	IF(IDISC.EQ.-1) RETURN
	ICROS=0
	IROLD=IRNEW
	IR=IROLD
	GO TO 20
C
C	IT'S TIME TO INTERACT. SIMULATE THE INTERACTION.
C
30	CONTINUE
	IF(IDISC.EQ.-1) GO TO 40
	R=STOTP(IM)*RANDOM(0)
	IF(R.LE.SPAR(IM)                           ) CALL ELSS_PAIRP
	IF(R.LE.SPAR(IM)+SCOM(IM).AND.R.GT.SPAR(IM)) CALL ELSS_COMPT
	IF(R.GT.SPAR(IM)+SCOM(IM)                  ) CALL ELSS_PHOTE
C
C	IF THE INTERACTION IS NOT FICTITIOUS STORE
C	THE SECONDARIES IN THE LIFO STACK. ENABLE
C	    USER ACCESS AND END THE TRANSPORT
C
40	CONTINUE
	IF(IFAIL.EQ.0) CALL ELSS_STKPSH
	ELOST=ELOSI+ELOSC
	CALL ELSS_ACCESS(4)
	IF(IDISC.EQ.-1) RETURN
	IF(IFAIL.NE.0) GO TO 10
	RETURN
	END
C======================================================================ELESIG
        SUBROUTINE ELSS_ELESIG
C======================================================================ELESIG
C
C	***** COMPUTES THE PSEUDO CROSS SECTIONS FOR E- OR E+  *****
C
C===================================================================
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_CROSEC/SBR(10,2),SMO(10),SBH(10),SAN(10),
     ,	              SPH(10,3),SCO(10),SPA(10),SPN(10)
	COMMON/ELSS_SIGELE/STOTE,SBRE,SMOL,SBHA,SANI
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	BSQ=1.-(ELM/E)**2
	XMIN=TE/(E-ELM)
	IF(IQ.EQ.+1) GO TO 10
	SBRE=SBR(IM,1)+SBR(IM,2)/E
	SMOL=0.
	IF(E.GT.2.*AE-ELM) SMOL=SMO(IM)*(1.-2.*XMIN)/BSQ
	STOTE=SBRE+SMOL
	RETURN
10	CONTINUE
	SBRE=SBR(IM,1)+SBR(IM,2)/E
	SBHA=SBH(IM)*(1.-XMIN)/BSQ
	G=E/ELM
	IF(E.LE.1000.) SANI=1.643*SAN(IM)*G**(-0.8036)
	IF(E.GT.1000.) SANI=3.501*SAN(IM)*G**(-0.9034)
	STOTE=SBRE+SBHA+SANI
	RETURN
	END
C===============================================================-PHOSIG
	SUBROUTINE ELSS_PHOSIG
C===============================================================-PHOSIG
C
C	***** COMPUTES THE PSEUDO CROSS SECTIONS FOR PHOTONS.
C
C===============================================================-PHOSIG
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_CROSEC/SBR(10,2),SMO(10),SBH(10),SAN(10),
     ,                SPH(10,3),SCO(10),SPA(10),SPN(10)
	COMMON/ELSS_SIGPHO/STOTP(10),SPAR(10),SCOM(10),SPHO(10),SPHN(10)
	COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA TWOELM/1.0220068/
C
	G=E/ELM
	GG=G*G
	C1=1.+(2.-G-G)/GG
	C2=GG+G
	C2=C2+C2
	C3=1.+G+G
	SC=(C1*ALOG(C3)+C2/(C3*C3)+4./G)/G
	DO 10 M=1,NMED
	SPHO(M)=(SPH(M,1)+(SPH(M,2)+SPH(M,3)/G)/G)/G
	SCOM(M)=SCO(M)*SC
	SPAR(M)=0.
	IF(E.GT.TWOELM) SPAR(M)=SPA(M)
        STOTP(M)=SPHO(M)+SCOM(M)+SPAR(M)
10      CONTINUE
	RETURN
        END
C======================================================================
        SUBROUTINE  ELSS_BREMS
C======================================================================
C
C	* SIMULATES BREMSSTRAHLUNG. INITIAL ELECTRON (OR POSITRON)
C	* PARAMETERS ARE STORED IN COMMON/ELSS_PARAMS/. IF IFLAG=0
C	* SECONDARY PARTICLE PARAMETERS ARE IN COMMON/ELSS_PARSEC/.
C
C======================================================================
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_PBRHLP/DBH(10),DLP(10),ALFP(10),ALFB(10),AP1(10),
     ,        AP2(10),AB1(10),COR(10),SL1(10),SL2(10),W0(10),W0L(10)
	COMMON/ELSS_REJFUN/A1(10),A2(10),B1(10),B2(10),
     ,                C1(10),C2(10),DM(10),EM(10)
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA REJLP/1.05/
C
	XMIN=0.
	XMAX=1.-ELM/E
C
C	SAMPLE THE FRACTION OF PRIMARY
C	ENERGY CARRIED BY THE PHOTON.
C
10	CONTINUE
	XX=W0(IM)*SQRT(EXP(W0L(IM)*RANDOM(0))-1.)
	IF(XX.LT.XMIN.OR.XX.GT.XMAX) GO TO 10
C
	DELE=XX/((1.-XX)*E)
	Q=DLP(IM)*DELE
	IF(Q.LT.1.)GO TO 20
C
C	REJECT ACCORDING TO BETHE-HEITLER'S ARBITRARILY
C	SCREENED DIFFERENTIAL CROSS-SECTION.
C
	DLT =DBH(IM)*DELE
	IF(DLT.GE.DM(IM)) RETURN
	IF(DLT.LE.1.) FI1=20.863-DLT*(4.246-1.036*DLT)
	IF(DLT.GT.1.) FI1=20.514-4.278*ALOG(DLT+0.952)
	              FI2=FI1-2./(3.+DLT*(19.5+18.*DLT))
	F1=A1(IM)+A2(IM)*(3.*FI1-FI2)
	F2=B1(IM)+B2(IM)*FI1
	IF(F1.LE.0.) F1=0.
	IF(F2.LE.0.) F2=0.
	REJ=((1.-XX)*F1+ALFB(IM)*XX*XX*F2)/REJLP
	IF(RANDOM(0).GT.REJ) RETURN
	GO TO 50
C
C	REJECT ACCORDING TO LANDAU-POMERANCHUK-MIGDAL'S
C	        DIFFERENTIAL CROSS-SECTION
C
20	CONTINUE
	IF(Q.GT.SL1(IM)) GO TO 30
	XSIS=2.
	GO TO 40
30	CONTINUE
	H=SL2(IM)*ALOG(Q)
	XSIS=1.+H-0.16*SL2(IM)*H*(2.-H*(3.-H))
40	CONTINUE
	S=SQRT(Q/XSIS)
	AS=1.-1./(1.+S*(6.+S*(17.15+S*(29.28+52.95*S))))
	BS=1.-1./(1.+S*(4.+S*(17.70+S*( 3.85+54.75*S))))
	REJ=XSIS*((1.-XX)*AS+ALFB(IM)*XX*XX*BS)/REJLP
	IF(RANDOM(0).GT.REJ)RETURN
C
C	ACCEPT EVENT AND ASSIGN SECONDARY PARTICLE PARAMETERS.
C		PRODUCTION ANGLES ARE NEGLECTED.
C
50	CONTINUE
	IFAIL=0
	ES(2)=XX*E
	ES(1)=E-ES(2)
	US(1)=U
	US(2)=U
	VS(1)=V
	VS(2)=V
	WS(1)=W
	WS(2)=W
	IQS(1)=IQ
	IQS(2)=0
	RETURN
	END
C===============================================================-DBREMS
        FUNCTION ELSS_DBREMS(E0,X,IM)
C===============================================================-DBREMS
C
C	COMPUTES BREMSSTRAHLUNG DIFFERENTIAL CROSS-SECTION.
C	E0 - IS THE PRIMARY ENERGY (TOTAL).
C	X  - IS THE FRACTION OF PRIMARY ENERGY CARRIED BY THE PHOTON.
C	IM - IS THE MEDIUM INDEX.
C
C===============================================================-DBREMS
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
	COMMON/ELSS_PBRHLP/DBH(10),DLP(10),ALFP(10),ALFB(10),AP1(10),
     ,        AP2(10),AB1(10),COR(10),SL1(10),SL2(10),W0(10),W0L(10)
	COMMON/ELSS_REJFUN/A1(10),A2(10),B1(10),B2(10),
     ,                C1(10),C2(10),DM(10),EM(10)
C
	ELSS_DBREMS=0.
	IF(IM.LE.0) RETURN
	XMIN=0.
	XMAX=1.-ELM/E0
	IF(X.LE.XMIN.OR.X.GE.XMAX) RETURN
	DELE=X/((1.-X)*E0)
	TERM=X/(X0(IM)*(X*X+W0(IM)**2))
	Q=DLP(IM)*DELE
	IF(Q.LT.1.) GO TO 10
C
C	BETHE-HEITLER`S ARBITRARILY SCREENED
C	DIFFERENTIAL CROSS-SECTION WITH DENSITY
C	EFFECT CORRECTION FOR SOFT PHOTONS.
C
	DLT=DBH(IM)*DELE
	IF(DLT.LE.1.) FI1=20.863-DLT*(4.246-1.036*DLT)
	IF(DLT.GT.1.) FI1=20.514-4.278*ALOG(DLT+0.952)
                      FI2=FI1-2./(3.+DLT*(19.5+18.*DLT))
	AD=A1(IM)+A2(IM)*(3.*FI1-FI2)
	BD=B1(IM)+B2(IM)*FI1
	IF(AD.LT.0.) AD=0.
	IF(BD.LT.0.) BD=0.
	ELSS_DBREMS=TERM*(AB1(IM)*(1.-X)*AD+X*X*BD)
	ELSS_DBREMS=(1.+COR(IM)/E0)*ELSS_DBREMS
	RETURN
C
C	LANDAU-POMERANCHUK-MIGDAL'S DIFFERENTIAL
C	CROSS SECTION WITH DENSITY EFFECT CORRECTION
C                     FOR SOFT PHOTONS.
C
10 	CONTINUE
	IF(Q.GT.SL1(IM)) GO TO 20
	XSIS=2.
	GO TO 30
20      CONTINUE
	H=SL2(IM)*ALOG(Q)                 
	XSIS=1.+H-0.16*SL2(IM)*H*(2.-H*(3.-H))
30	CONTINUE
	S=SQRT(Q/XSIS)
	AS=1.-1./(1.+S*(6.+S*(17.15+S*(29.28+52.95*S))))
	BS=1.-1./(1.+S*(4.+S*(17.70+S*(3.850+54.75*S))))
	ELSS_DBREMS=TERM*XSIS*(AB1(IM)*(1.-X)*AS+X*X*BS)
	ELSS_DBREMS=(1.+COR(IM)/E0)*ELSS_DBREMS
	RETURN
	END
C======================================================================
	SUBROUTINE ELSS_MOLLR
C======================================================================
C
C	SIMULATES E-E- SCATTERING. INITIAL ELECTRON PARAMETERS ARE
C	STORED IN COMMON/ELSS_PARAMS/. IF IFAIL=0 SECONDARY PARTICLE
C	PARAMETERS ARE WRITTEN INTO COMMON/ELSS_PARSEC/.
C
C======================================================================
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
        COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	T0=E-ELM
	IF(T0.LE.2.*TE) RETURN
	G1=T0/E
	G1=G1*G1
	G2=ELM*(E+T0)/(E*E)
C
C	SAMPLE THE FRACTION OF PRIMARY KINETIC ENERGY TRANSFERED TO
C	RECOIL ELECTRON ACCORDING TO MOLLER DIFFERENTIAL CROSS SECTION.
C
	XX=TE/(T0-(T0-2.*TE)*RANDOM(0))
	R=XX/(1.-XX)
	REJ=(4./9.)*(1.+G1*XX*XX+R*(R-G2))
	IF(RANDOM(0).GT.REJ) RETURN
C	
C	ACCEPT EVENT AND ASSIGN SECONDARY PARTICLE PARAMETERS.
C
	IFAIL=0
	T2=XX*T0
	T1=T0-T2
	ES(1)=T1+ELM
	ES(2)=T2+ELM
	IQS(1)=-1
	IQS(2)=-1
	W1=1.
	W2=1.
	IF(T1.GT.TE) W1=SQRT(T1*(E+ELM)/(T0*(ES(1)+ELM)))
	IF(T2.GT.TE) W2=SQRT(T2*(E+ELM)/(T0*(ES(2)+ELM)))
	CALL ELSS_UPHI(W1,W2)
	RETURN
	END
C================================================================-BHABH
	SUBROUTINE ELSS_BHABH
C================================================================-BHABH
C
C	SIMULATES E+E- SCATTERING. INITIAL POSITRON PARAMETERS ARE
C	STORED IN COMMON/ELSS_PARAMS/. IF IFAIL=0 SECONDARY PARTICLE
C	PARAMETERS ARE WRITTEN INTO COMMON/ELSS_PARSEC/.
C
C================================================================-BHABH
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
        COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	T0=E-ELM
	BSQ=1.-(ELM/E)**2
	YY=ELM/(ELM+E)
	YYYY=YY*YY
	YYY=1.-YY-YY
	YYYYYY=YYY*YYY
	B4=YYY*YYYYYY
	B3=B4+YYYYYY
	B2=YYY*(3.+YYYY)
	B1=2.-YYYY
C
C	SAMPLE THE FRACTION OF PRIMARY KINETIC ENERGY TRANSFERED TO
C	RECOIL ELECTRON ACCORDING TO BHABHA DIFFERENTIAL CROSS-SECTION.
C
	XX=TE/(T0-(T0-TE)*RANDOM(0))
	REJ=1.-BSQ*XX*(B1-XX*(B2-XX*(B3-XX*B4)))
	IF(RANDOM(0).GT.REJ) RETURN
C	
C	ACCEPT EVENT AND ASSIGN THE SECONDARY PARTICLE PARAMETERS.
C
	IFAIL=0
	TELE=XX*T0
	TPOS=T0-TELE
	ES(1)=TPOS+ELM
	ES(2)=TELE+ELM
	WELE=1.
	WPOS=1.
	IF(TELE.GT.TE) WELE=SQRT(TELE*(E+ELM)/(T0*(ES(2)+ELM)))
	IF(TPOS.GT.TE) WPOS=SQRT(TPOS*(E+ELM)/(T0*(ES(1)+ELM)))
	IQS(1)=+1
	IQS(2)=-1
	CALL ELSS_UPHI(WPOS,WELE)
	RETURN
	END
C================================================================-ANNIH
	SUBROUTINE ELSS_ANNIH
C================================================================-ANNIH
C	
C	SIMULATES TWO-PHOTON E+E- ANNIHILATION. INITIAL POSITRON 
C	PARAMETERS ARE STORED IN COMMON/ELSS_PARAMS/. IF IFAIL=0 THE 
C	SECONDARY PARTICLE PARAMETERS ARE WRITTEN INTO COMMON/ELSS_PARSEC/.
C
C================================================================-ANNIH
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_ENERGY/ELOSI,ELOSC,ELOST,EOLD,ENEW
	COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C	
	IF(E.LE.AE) GO TO 20  
	G=E/ELM
	A=1.+G
	P0P=SQRT(G*G-1.)
	XMIN=1./(A+P0P)
	ALF=(1.-XMIN)/XMIN
C
C	SAMPLE THE FRACTION OF PRIMARY AVAILABLE ENERGY
C	CARRIED BY THE PHOTON WITH SMALLER ENERGY.
C
10	CONTINUE
	R=RANDOM(0)
	XX=XMIN*ALF**R
	REJ=1.-XX+(G+G-1./XX)/(A*A)
	IF(RANDOM(0).GT.REJ) GO TO 10
C
C	ACCEPT EVENT AND ASSIGN SECONDARY PARTICLE PARAMETERS.
C
	IFAIL=0
	XBIG=AMAX1(XX,1.-XX)
	XSML=1.-XBIG
	ES(1)=(E+ELM)*XBIG
	ES(2)=(E+ELM)*XSML	
	IQS(1)=0
	IQS(2)=0
	W1=(A*XBIG-1.)/(P0P*XBIG)
	W2=(A*XSML-1.)/(P0P*XSML)
	CALL ELSS_UPHI(W1,W2)
	RETURN
C
C	 SUB CUT-OFF POSITRONS ARE ASSUMED TO COME TO REST
C	 AND ANNIHILATE INTO PHOTONS EACH WITH ENERGY `ELM`
C	           MOVING IN OPPOSITE DIRECTIONS.
C
20	CONTINUE
	IFAIL=0
	ELOSC=ELOSC+E-ELM
	ES(1)=ELM
	ES(2)=ELM
	IQS(1)=0
	IQS(2)=0
	CALL ELSS_IUVW
	RETURN
	END
C================================================================-PAIRP
        SUBROUTINE ELSS_PAIRP
C================================================================-PAIRP
C	
C 	SIMULATES ELECTRON-POSITRON PAIR PRODUCTION. INITIAL PHOTON
C	PARAMETERS ARE STORED IN COMMON /ELSS_PARAMS/. IF IFAIL=0
C	SECONDARY PARTICLE PARAMETERS ARE IN COMMON /ELSS_PARSEC/.
C
C==================================================================
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_PBRHLP/DBH(10),DLP(10),ALFP(10),ALFB(10),AP1(10),
     ,        AP2(10),AB1(10),COR(10),SL1(10),SL2(10),W0(10),W0L(10)
	COMMON/ELSS_REJFUN/A1(10),A2(10),B1(10),B2(10),
     ,                C1(10),C2(10),DM(10),EM(10)
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA REJLP/1.05/
C	
	IF(E.LE.EM(IM)) RETURN
	XMIN=ELM/E
C
C	CHOOSE THE SUBDISTRIBUTION TO BE SAMPLED. THE QUANTITY
C	TO BE SAMPLED IS THE FRACTION OF PRIMARY ENERGY GIVEN
C		TO ONE OF THE SECONDARIES.
C
10	CONTINUE
	IF(RANDOM(0).LE.ALFP(IM)) GO TO 50
C
C	SAMPLE FROM THE 'FIRST' SUBDISTRIBUTION.
C
15	CONTINUE
	R1=RANDOM(0)
	R2=RANDOM(0)
	R3=RANDOM(0)
	XX=0.5*(1.-AMAX1(R1,R2,R3))
	IF(XX.LT.XMIN) GO TO 15
C
	DELE=1./(XX*(1.-XX)*E)
	Q=DLP(IM)*DELE
	IF(Q.LT.1.) GO TO 20
C
C	ACCORDING TO BETHE-HEITLER'S ARBITRARILY
C	SCREENED DIFFERENTIAL CROSS-SECTION	 	   	          
C
	DLT=DBH(IM)*DELE
	IF(DLT.GE.DM(IM)) RETURN
	IF(DLT.LE.1.) FI1=20.863-DLT*(4.246-1.036*DLT)
	IF(DLT.GT.1.) FI1=20.514-4.278*ALOG(DLT+0.952)
		      FI2=FI1-2./(3.+DLT*(19.5+18.*DLT))
	REJ=(A1(IM)+A2(IM)*(3.*FI1-FI2))/REJLP
	IF(RANDOM(0).GT.REJ) RETURN
	GO TO 90
C
C	ACCORDING TO LANDAU-POMERANCHUK-MIGDAL'S
C		DIFFERENTIAL CROSS-SECTION
C
20	CONTINUE
	IF(Q.GT.SL1(IM)) GO TO 30
	XSIS=2.
	GO TO 40
30	CONTINUE
	H=SL2(IM)*ALOG(Q)
	XSIS=1.+H-0.16*SL2(IM)*H*(2.-H*(3.-H))
40	CONTINUE
	S=SQRT(Q/XSIS)
	AS=1.-1./(1.+S*(6.+S*(17.15+S*(29.28+52.95*S))))
	REJ=AS*XSIS/REJLP
	IF(RANDOM(0).GT.REJ) RETURN
	GO TO 90
C
C	SAMPLE FROM THE 'SECOND' SUBDISTRIBUTION
C
50	CONTINUE
	XX=0.5*RANDOM(0)
	IF(XX.LT.XMIN) GO TO 50
	DELE=1./(XX*(1.-XX)*E)
	Q=DLP(IM)*DELE
	IF(Q.LT.1.) GO TO 60
C
C	ACCORDING TO BETHE-HEITLER'S ARBITRARILY
C	SCREENED DIFFERENTIAL CROSS-SECTION	 	   	          
C
	DLT=DBH(IM)*DELE
	IF(DLT.GE.DM(IM)) RETURN
	IF(DLT.LE.1.) FI1=20.863-DLT*(4.246-1.036*DLT)
	IF(DLT.GT.1.) FI1=20.514-4.278*ALOG(DLT+0.952)
		      FI2=FI1-2./(3.+DLT*(19.5+18.*DLT))
	REJ=(C1(IM)+C2(IM)*(3.*FI1+FI2))/REJLP
	IF(RANDOM(0).GT.REJ) RETURN
	GO TO 90
C
C	ACCORDING TO LANDAU-POMERANCHUK-MIGDAL'S
C		DIFFERENTIAL CROSS-SECTION
C
60	CONTINUE
	IF(Q.GT.SL1(IM)) GO TO 70
	XSIS=2.
	GO TO 80
70	CONTINUE
	H=SL2(IM)*ALOG(Q)
	XSIS=1.+H-0.16*SL2(IM)*H*(2.-H*(3.-H))
80	CONTINUE
	S=SQRT(Q/XSIS)
	CS=1.-1./(1.+S*(3.+S*(17.07+S*(5.08+44.84*S))))
	REJ=CS*XSIS/REJLP
	IF(RANDOM(0).GT.REJ) RETURN
C
C	ACCEPT EVENT AND ASSIGN THE SECONDARY PARTICLE PARAMETERS
C		PRODUCTION ANGLES ARE NEGLECTED
C
90	CONTINUE
	IFAIL=0
	ES(2)=XX*E
	ES(1)=E-ES(2)
	US(1)=U
	US(2)=U
	VS(1)=V
 	VS(2)=V
	WS(1)=W
	WS(2)=W
	IF(RANDOM(0).GT.0.5) GO TO 100
	IQS(1)=+1
	IQS(2)=-1
	RETURN
100	CONTINUE
	IQS(1)=-1
	IQS(2)=+1
	RETURN
	END
C===============================================================-DPAIRP
	FUNCTION ELSS_DPAIRP(E0,X,IM)
C===============================================================-DPAIRP
C
C	COMPUTES THE DIFFERENTIAL CROSS-SECTION
C	FOR ELECTRON-POSITRON PAIR PRODUCTION.
C	E0  - IS THE  PRIMARY  PHOTON  ENERGY
C	X   - IS THE FRACTION OF PRIMARY ENERGY
C	      GIVEN TO ONE OF THE SECONDARIES
C	IM  - IS THE MEDIUM INDEX
C
C===============================================
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
	COMMON/ELSS_PBRHLP/DBH(10),DLP(10),ALFP(10),ALFB(10),AP1(10),
     ,        AP2(10),AB1(10),COR(10),SL1(10),SL2(10),W0(10),W0L(10)
	COMMON/ELSS_REJFUN/A1(10),A2(10),B1(10),B2(10),
     ,                C1(10),C2(10),DM(10),EM(10)
C
 	ELSS_DPAIRP=0. 
	IF(IM.LE.0     ) RETURN
	IF(E0.LE.EM(IM)) RETURN
	XMIN=ELM/E0
	XMAX=1.-XMIN
	IF(X.LE.XMIN.OR.X.GE.XMAX) RETURN
	DELE=1./(X*(1.-X)*E0)
	Q=DLP(IM)*DELE
	IF(Q.LT.1.) GO TO 10
C
C	BETHE-HEITLER'S ARBITRARILY SCREENED CROSS-SECTION
C
	DLT=DBH(IM)*DELE
	IF(DLT.LE.1.) FI1=20.863-DLT*(4.246-1.036*DLT)
	IF(DLT.GT.1.) FI1=20.514-4.278*ALOG(DLT+0.952)
		      FI2=FI1-2./(3.+DLT*(19.5+18.*DLT))
	AD=A1(IM)+A2(IM)*(3.*FI1-FI2)
	CD=C1(IM)+C2(IM)*(3.*FI1+FI2)
	IF(AD.LT.0.) AD=0.
	IF(CD.LT.0.) CD=0.
	ELSS_DPAIRP=(AP1(IM)*12.*(X-0.5)**2*AD+AP2(IM)*CD)/X0(IM)
	RETURN
C
C	LANDAU-POMERANCHUK-MIGDAL'S CROSS-SECTION
C
10	CONTINUE
	IF(Q.GT.SL1(IM)) GO TO 20
	XSIS=2.
	GO TO 30
20	CONTINUE
	H=SL2(IM)*ALOG(Q)
	XSIS=1.+H-0.16*SL2(IM)*H*(2.-H*(3.-H))
30	CONTINUE
	S=SQRT(Q/XSIS)
	AS=1.-1./(1.+S*(6.+S*(17.15+S*(29.28+52.95*S))))
	CS=1.-1./(1.+S*(3.+S*(17.07+S*( 5.08+44.84*S))))
	ELSS_DPAIRP=XSIS*(AP1(IM)*12.*(X-0.5)**2*AS+AP2(IM)*CS)/X0(IM)
	RETURN
	END
C================================================================-COMPT
	SUBROUTINE ELSS_COMPT
C================================================================-COMPT
C
C	SIMULATES COMPTON SCATTERING. INITIAL PHOTON PARAMETERS ARE
C	STORED IN COMMON/ELSS_PARAMS/.IF IFAIL=0 THE SECONDARY PARTICLE
C	PARAMETERS ARE WRITTEN INTO COMMON/ELSS_PARSEC/.
C
C================================================================-COMPT
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,MT
C
	G=E/ELM
	A3=G*G
	A2=1.+G+G
	XMIN=1./A2
	A1=A3-G-G-2.
C
C	 SAMPLE THE FRACTION OF PRIMARY ENERGY GIVEN TO SCATTERED
C	 PHOTON ACCORDING TO KLEIN-NISHINA DIFFERENTIAL CROSS-SECTION.
C
10	CONTINUE
	R=RANDOM(0)
	XX=XMIN**R
	REJ=(1.+XX*(A1+XX*(A2+A3*XX)))/(2.*A3*XX)
	IF(RANDOM(0).GT.REJ) GO TO 10
C
C	 ACCEPT EVENT AND ASSING THE SECONDARY PARTICLE PARAMETERS.
C
	IFAIL=0
	EG=XX*E
	EE=E-EG+ELM
	WG=1.
	WE=1.
	IF(EG.GT.AP) WG=1.-(1.-XX)/(G*XX)
	IF(EE.GT.AE) WE=(1.+1./G)*SQRT((EE-ELM)/(EE+ELM))
	ES(1)=EG
	ES(2)=EE
	IQS(1)=0
	IQS(2)=-1
	CALL ELSS_UPHI(WG,WE)
	RETURN
	END
C================================================================-PHOTE
	SUBROUTINE ELSS_PHOTE
C================================================================-PHOTE
C
C	SIMULATES PHOTOELECTRIC ABSORPTION BY K-SHELL ELECTRONS
C	INITIAL PHOTON PARAMETERS ARE STORED IN COMMON/ELSS_PARAMS/
C	THE SECONDARY PARTICLE PARAMETERS ARE IN COMMON/ELSS_PARSEC/
C
C================================================================-PHOTE
	COMMON/ELSS_PHOHLP/EKPH(10)
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_CUTOFF/AP,AE,ELM,TE
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,MT
C
	IFAIL=0
	ES(1)=E+EKPH(IM)
	IQS(1)=-1
	ES(2)=ELM-EKPH(IM)
	IQS(2)=0
	US(1)=U
	VS(1)=V
	WS(1)=W
	RETURN
	END
C================================================================-ILOSS
	SUBROUTINE ELSS_ILOSS
C================================================================-ILOSS
C
C	***** SIMULATES THE IONIZATION LOSSES ON THE STEP
C
C========================================================
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
        COMMON/ELSS_DEDXTB/XSI(10),DEDXN(101,10),DEDXP(101,10)
	COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
        COMMON/ELSS_STPSIZ/STEPR,STEPU,STEPA,STEPC,IROLD,IRNEW,ICROS
        COMMON/ELSS_ENERGY/ELOSI,ELOSC,ELOST,EOLD,ENEW	
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA NTAB1/101/
C
	IF(IM.LE.0) RETURN
	T0=E-ELM
	BSQ=1.-(ELM/E)**2
	ESTOP=E-AE
	EPSMAX=TE
	IF(IQ.EQ.-1.AND.T0.LE.(2.*TE)) EPSMAX=0.5*T0
C
C	COMPUTE THE AVERAGE IONIZATION LOSSES 
C
	IF(E.LE.100.*AE) GO TO 5
	IF(IQ.EQ.-1) DEDXA=DEDXN(NTAB1,IM)
	IF(IQ.EQ.+1) DEDXA=DEDXP(NTAB1,IM)
	GO TO 10
5	CONTINUE
	IL=INT(E/AE)
	IH=IL+1
	ALF=E/AE-FLOAT(IL)
	IF(IQ.EQ.-1) DEDXA=(1.-ALF)*DEDXN(IL,IM)+ALF*DEDXN(IH,IM)
	IF(IQ.EQ.+1) DEDXA=(1.-ALF)*DEDXP(IL,IM)+ALF*DEDXP(IH,IM)
10	CONTINUE
	RANGE=ESTOP/DEDXA
	IF(STEPA.LT.RANGE) GO TO 15
	STEPA=RANGE
	ELOSI=ESTOP
	GO TO 40
15	CONTINUE
	ELOSA=DEDXA*STEPA
	IF(ELOSA.LE.0.1*T0) GO TO 20
	ELOSI=ELOSA
	GO TO 40
20	CONTINUE
	GG=XSI(IM)*STEPA/(EPSMAX*BSQ)
	IF(GG.GE.0.05) GO TO 30
C	
C	 LANDAU FLUCTUATION
C	
	R=RANDOM(0)
	IF(R.LE.0.601)                AL=ELSS_RANNOR(0.0,1.3)
	IF(R.LE.0.824.AND.R.GT.0.601) AL=ELSS_RANNOR(3.0,1.4)
	IF(R.LE.0.933.AND.R.GT.0.824) AL=ELSS_RANNOR(6.5,2.1)
	IF(R.GT.0.933)                AL=ELSS_RANNOR(11.,3.5)
	ELOSI=ELOSA+(AL+ALOG(GG)+0.422784)*GG*EPSMAX
	GO TO 40
C
C	GAUSSIAN FLUCTUATIONS
C
30	CONTINUE
	SIGMA=EPSMAX*SQRT(GG)
	ELOSI=ELSS_RANNOR(ELOSA,SIGMA)
C
40	CONTINUE
	IF(ELOSI.LT.0.   ) ELOSI=0.
        IF(ELOSI.GT.ESTOP) ELOSI=ESTOP
	E=E-ELOSI
	ENEW=E
	IF(E.GT.AE) RETURN
	ELOSC=ELOSC+E-ELM
	E=ELM
	ENEW=E
	IDISC=-1
	RETURN
	END
C======================================================================
	FUNCTION ELSS_FF(T,D,IQ)
C======================================================================
C
C	COMPUTES THE CONTRIBUTION TO DEDX DUE TO HARD
C	SUBCUTOFF COLLISIONS. (DIFFERENT FOR E- AND E+)
C
C=======================================================
	X=D/T
	IF(IQ.EQ.+1) GO TO 10
	ELSS_FF=X/(1.-X)+0.5*(D/(T+1.))**2+
     +  (1.+(2.*T+1.)/((T+1.)**2))*ALOG(1.-X)
	RETURN
10	CONTINUE
	BSQ=1.-1./((T+1.)**2)
	Y=1./(T+2.)
	YY=Y
	Y1=1.-Y-Y
	Y1Y1=Y1*Y1
	B4=Y1Y1*Y1
	B3=B4+Y1Y1
	B2=Y1*(3.+YY)
	B1=2.-YY
	ELSS_FF=-BSQ*X*(12.*B1-X*(6.*B2-X*(4.*B3-3.*B4*X)))/12.
	RETURN
	END
C===============================================================-TDEDXI
	FUNCTION ELSS_TDEDXI(E0,TMAX,IQ,IM,MODE)
C===============================================================-TDEDXI
C
C	CALCULATES THE AVERAGE RESTRICTED STOPPING POWER
C	FOR IONIZATION LOSSES WITH DENSITY EFFECT CORRECTION
C	E0 - IS THE PRIMARY ELECTRON(IQ=-1),OR POSITRON(IQ=+1) 
C	     TOTAL ENERGY
C	IM - IS THE MEDIUM INDEX
C	MODE - IF 0 - CORRECT DENSITY EFFECT, OTHERWISE - THE ASYMPTOTIC
C		EXPRESSION IS USED WHICH IS ACCURATE TO 5-6%.
C	TMAX - IS THE MAXIMUM ENERGY TRANSFERED TO THE RECOIL ELECTRON
C	       IN A SINGLE COLLISION. THE DIFFERENCE BETWEEN ELECTRONS
C	       AND POSITRONS IS TREATED ACCURATELY SO YOU CAN SAFELY
C	       SET TMAX EQUAL TO SOME POSITIVE VALUE AND LET THE FUNCTION
C	       DO THE REST OF THE JOB.
C
C===============================================================-TDEDXI
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
        COMMON/ELSS_ILSHLP/EIP(10),EPF(10),GAS(10),G0S(10),
     ,                G1S(10),X1S(10),AST(10),BI(10),BP(10)
        COMMON/ELSS_DEDXTB/XSI(10),DEDXN(101,10),DEDXP(101,10)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	ELSS_TDEDXI=0.
	IF(IM  .LE.0  ) RETURN
	IF(IQ  .EQ.0. ) RETURN
	IF(E0  .LE.ELM) RETURN
	IF(TMAX.LE.0. ) RETURN
	G=E0/ELM
	GG=G*G
	BSQ=1.-1./(GG)
	TAU=G-1.
	IF(IQ.EQ.-1.) DLT=AMIN1(TMAX/ELM,0.5*TAU)
	IF(IQ.EQ.+1.) DLT=AMIN1(TMAX/ELM,    TAU)
	FC=ELSS_FF(TAU,DLT,IQ)
	CF=XSI(IM)/BSQ
	IF(MODE.EQ.0) GO TO 5
C
C	WITH ASYMPTOTIC DENSITY EFFECT
C
	IF(G.LE.GAS(IM)) GO TO 30
	IF(G.GT.GAS(IM)) GO TO 10
C
C	WITH CORRECT DENSITY EFFECT
C
5	CONTINUE
	IF(                 G.LE.G0S(IM)) GO TO 30
	IF(G.GT.G0S(IM).AND.G.LE.G1S(IM)) GO TO 20
10	CONTINUE
	ELSS_TDEDXI=CF*(BP(IM)+ALOG(DLT)-BSQ+1.+FC)
	RETURN
20	CONTINUE
	DF=AST(IM)*(X1S(IM)-0.5*ALOG10(GG-1.))**3
	ELSS_TDEDXI=CF*(BP(IM)+ALOG(DLT)-BSQ+1.+FC-DF)
	RETURN
30	CONTINUE
	ELSS_TDEDXI=CF*(BI(IM)+ALOG(DLT*(G*G-1.))-BSQ+FC)
	RETURN
	END
C================================================================-MSCAT
	SUBROUTINE ELSS_MSCAT
C================================================================-MSCAT
C
C	***** SIMULATES THE MULTIPLE COULOMB SCATTERING OF ELECTRONS
C
C================================================================-MSCAT
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
        COMMON/ELSS_MLSHLP/BC(10),XCC(10),EMSCT
        COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
        COMMON/ELSS_STPSIZ/STEPR,STEPU,STEPA,STEPC,IROLD,IRNEW,ICROS
        COMMON/ELSS_ENERGY/ELOSI,ELOSC,ELOST,EOLD,ENEW	
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA PISQ/9.8696046/
C
	IF(IM.LE.0   ) RETURN
	IF(ENEW.LE.AE) RETURN
	ESQ=EOLD*ENEW
	BSQ=1.-ELM*ELM/ESQ
	OMEGA0=BC(IM)*STEPA/BSQ
	IF(OMEGA0.LE.20.) RETURN
	XCSQ=(STEPA*(XCC(IM)/BSQ)**2)/ESQ
	BB=1.3455+2.5636*ALOG10(OMEGA0)
	IF(XCSQ*BB.LE.20.) GO TO 5
C
C	ISOTROPE SCATTERING
C
	CA=RANDOM(0)
	CA=CA+CA-1.
	SA=SQRT(1.-CA*CA)
	GO TO 50
C
5	CONTINUE
	ALF1=1.-2./BB
	IF(ALF1.LT.0.) ALF1=0.
	ALF2=ALF1+1.800/BB
	ALF3=ALF2+2.025/BB
C
10	CONTINUE
	R=ALF3*RANDOM(0)
	IF(R.LE.ALF1)               GO TO 20
	IF(R.GT.ALF1.AND.R.LE.ALF2) GO TO 30
C 
	R1=RANDOM(0)
	R2=RANDOM(0)
	FIINV=AMAX1(R1,R2)
	REJ=ELSS_G3(FIINV,BB)
	IF(RANDOM(0).GT.REJ) GO TO 10
	FI=1./(FIINV*FIINV)
	GO TO 40
C
20	CONTINUE
	FI=-ALOG(RANDOM(0))
	GO TO 40   
C
30	CONTINUE
	FI=RANDOM(0)
	REJ=ELSS_G2(FI,BB)
	IF(RANDOM(0). GT.REJ) GO TO 10
	FI=FI*FI
C
C
40	CONTINUE
	ANGSQ=XCSQ*BB*FI
	IF(ANGSQ.GT.PISQ)     GO TO 10
	ANG=SQRT(ANGSQ)
	SA=SIN(ANG)
	REJ=SA/ANG
	R=RANDOM(0)
	IF(R*R.  GT.REJ)      GO TO 10
	CA=COS(ANG)
50	CONTINUE
	X1=RANDOM(0)
	X1=X1+X1-1.
	X12=X1*X1
	X2=RANDOM(0)
	X22=X2*X2
	RSQ=X12+X22
	IF(RSQ.  GT.1.)       GO TO 50
	SF=X1*X2/RSQ
	SF=SF+SF
	CF=(X12-X22)/RSQ
	WW=0.
	IF(W.NE.-1.) WW=1./(1.+W)
	U1=U*CA+((U*U*WW-1.)*CF+U*V*WW*SF)*SA
	V1=V*CA+(U*V*WW*CF+(V*V*WW-1.)*SF)*SA
	W1=W*CA+(U*CF+V*SF)*SA
	U=U1
	V=V1
	W=W1
	RETURN
	END
C======================================================================
	FUNCTION ELSS_G2(X,B)
C======================================================================
C
C	***** COMPUTES THE SECOND REJECTION FUNCTION NEEDED IN 'MSCAT'
C
C======================================================================
	REAL G21(21),G22(21)
	DATA G21/0.0000,0.1341,0.2650,0.3896,0.5052,0.6093,0.6997,
     ,		 0.7749,0.8338,0.8760,0.9013,0.9104,0.9044,0.8844,
     ,		 0.8524,0.8105,0.7605,0.7048,0.6455,0.5845,0.5240/
	DATA G22/0.0000,0.0677,0.1324,0.1855,0.2299,0.2549,0.2669,
     ,		 0.2576,0.2331,0.1923,0.1360,0.0741,-.0015,-.0693,
     ,		 -.1475,-.2054,-.2697,-.3050,-.3426,-.3486,-.3533/
C
	I=INT(20.*X)+1
	ALF=20.*X-FLOAT(I-1)
	ELSS_G2=(1.-ALF)*(G21(I)+G22(I)/B)+ALF*(G21(I+1)+G22(I+1)/B)
	RETURN
	END
C======================================================================
	FUNCTION ELSS_G3(X,B)
C======================================================================
C
C	***** COMPUTES THE THIRD REJECTION FUNCTION NEEDED IN 'MSCAT'
C
C======================================================================
	REAL G31(41),G32(41)
	DATA G31/.494,.495,.500,.505,.515,.527,.550,.565,.591,.630,
     ,		 .672,.745,.805,.885,.960,.995,.965,.895,.810,.710,
     ,		 .598,.500,.415,.355,.310,.280,.260,.245,.240,.235,
     ,	    .230,.235,.235,.240,.240,.245,.245,.240,.240,.235,.230/
	DATA G32/0.000,0.015,0.025,0.040,0.058,0.075,0.095,0.115,0.130,
     ,		 0.125,0.068,-.110,-.380,-.650,-.825,-.800,-.630,-.300,
     ,		 0.050,0.300,0.520,0.615,0.620,0.580,0.500,0.385,0.270,
     ,		 0.180,0.095,0.020,-.045,-.085,-.120,-.145,-.160,-.170,
     ,		 -.175,-.180,-.175,-.170,-.160/
C
	I=INT(40.*X)+1
	ALF=40.*X-FLOAT(I-1)
	ELSS_G3=(1.-ALF)*(G31(I)+G32(I)/B)+ALF*(G31(I+1)+G32(I+1)/B)
	RETURN
	END
C======================================================================
	SUBROUTINE ELSS_UPHI(CT1,CT2)
C======================================================================
C
C	COMPUTES THE DIRECTION COSINES OF THE SECONDARY
C		PARTICLES IN THE 'LAB.' SYSTEM
C	CT1,CT2 - DIRECTION COSINES IN THE LOCAL SYSTEM
C
C======================================================================
        COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	ST1=0.
	ST2=0.
	IF(CT1.NE.1.) ST1=SQRT(1.-CT1*CT1)
	IF(CT2.NE.1.) ST2=SQRT(1.-CT2*CT2)
10	CONTINUE
	X1=RANDOM(0)
	X1=X1+X1-1.
	X12=X1*X1
	X2=RANDOM(0)
	X22=X2*X2
	RSQ=X12+X22
	IF(RSQ.GT.1.0) GO TO 10
	SF=X1*X2/RSQ
	SF=SF+SF
	CF=(X12-X22)/RSQ
	WW=0.
	IF(W.NE.-1.) WW=1./(1.+W)
	US(1)=U*CT1+((U*U*WW-1.)*CF+U*V*WW*SF)*ST1
	US(2)=U*CT2-((U*U*WW-1.)*CF+U*V*WW*SF)*ST2
	VS(1)=V*CT1+(U*V*WW*CF+(V*V*WW-1.)*SF)*ST1
	VS(2)=V*CT2-(U*V*WW*CF+(V*V*WW-1.)*SF)*ST2
	WS(1)=W*CT1+(U*CF+V*SF)*ST1
	WS(2)=W*CT2-(U*CF+V*SF)*ST2
	RETURN
	END
C======================================================================
	SUBROUTINE ELSS_IUVW
C======================================================================
C
C	***** GENERATES AN ISOTROPE VECTOR
C             
C==========================================
        COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	X1=RANDOM(0)
	WS(1)=X1+X1-1.
	WS(2)=-WS(1)
10	CONTINUE
	X1=RANDOM(0)
	X1=X1+X1-1.
	X12=X1*X1
	X2=RANDOM(0)
	X22=X2*X2
	RSQ=X12+X22
	IF(RSQ.GT.1.) GO TO 10
	SF=X1*X2/RSQ
	SF=SF+SF
	CF=(X12-X22)/RSQ
	ST=SQRT(1.-WS(1)*WS(1))
	VS(1)=ST*SF
	VS(2)=-VS(1)
	US(1)=ST*CF
	US(2)=-US(1)
	RETURN
	END
C===============================================================-STKINI
	SUBROUTINE ELSS_STKINI
C===============================================================-STKINI
C
C	***** INITIALIZES THE STACK
C
C==================================
	COMMON/ELSS_MEMORY/ISIZ,ITOP,STACK(500)
        COMMON/ELSS_PARINI/IQI,IRI,WTI,EI,TOFI,XI,YI,ZI,UI,VI,WI,
     ,                NEVREQ,NEVSIM,NEVSAV
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	ITOP=0
	ISIZ=500
	DO 10 I=1,ISIZ
	STACK(I)=0.
10	CONTINUE
	STACK(ITOP+1) =IQI
	STACK(ITOP+2) =IRI
	STACK(ITOP+3) =WTI
	STACK(ITOP+4) =EI
	STACK(ITOP+5) =TOFI
	STACK(ITOP+6) =XI
	STACK(ITOP+7) =YI
	STACK(ITOP+8) =ZI
	STACK(ITOP+9) =UI
	STACK(ITOP+10)=VI
	STACK(ITOP+11)=WI 
	ITOP=ITOP+11
	RETURN
	END
C===============================================================-STKPOP
	SUBROUTINE ELSS_STKPOP
C===============================================================-STKPOP
C
C	***** TAKES THE TOP PARTICLE FROM THE STACK
C
C==================================================
	COMMON/ELSS_MEMORY/ISIZ,ITOP,STACK(500)
        COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	W  =STACK(ITOP)
	V  =STACK(ITOP-1)
	U  =STACK(ITOP-2)
	Z  =STACK(ITOP-3)
	Y  =STACK(ITOP-4)
	X  =STACK(ITOP-5)
	TOF=STACK(ITOP-6)
	E  =STACK(ITOP-7)
	WT =STACK(ITOP-8)  ! weight of the event
	IR =STACK(ITOP-9)  ! start region
	IQ =STACK(ITOP-10) ! Charge
	ITOP=ITOP-11
	RETURN
	END
C===============================================================-STKPSH
	SUBROUTINE ELSS_STKPSH
C===============================================================-STKPSH
C
C	STORES THE PARTICLES IN A LIFO STACK
C	THE PARTICLE WITH LEAST ENERGY IS PUT ON TOP
C
C===================================================
	INTEGER NP(2)
	REAL RM(2)
	COMMON/ELSS_MEMORY/ISIZ,ITOP,STACK(500)
	COMMON/ELSS_CUTOFF/ECUT(2),ELM,TE
        COMMON/ELSS_PARAMS/IQ,IM,IR,WT,E,TOF,X,Y,Z,U,V,W,IDISC
        COMMON/ELSS_ENERGY/ELOSI,ELOSC,ELOST,EOLD,ENEW	
	COMMON/ELSS_PARSEC/IFAIL,IQS(2),WTS(2),ES(2),US(2),VS(2),WS(2)
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA RM/0.5110034,0.0/
C
	I=0
	NP(1)=1
	NP(2)=2
	IF(ES(1).GT.ES(2))    GO TO 10
	NP(1)=2
	NP(2)=1
10	CONTINUE
	I=I+1
	IF(I.GT.2) RETURN
	J=NP(I)
	IF(IQS(J).EQ.+1 )     GO TO 20
	JJ=IQS(J)+2
	IF(ES(J).GT.ECUT(JJ)) GO TO 20
	ELOSC=ELOSC+ES(J)-RM(JJ)
	GO TO 10
20	CONTINUE
	STACK(ITOP+1) =IQS(J)
	STACK(ITOP+2) =IR
	STACK(ITOP+3) =WTS(J)
	STACK(ITOP+4) =ES(J)
	STACK(ITOP+5) =TOF
	STACK(ITOP+6) =X
	STACK(ITOP+7) =Y
	STACK(ITOP+8) =Z
	STACK(ITOP+9) =US(J)
	STACK(ITOP+10)=VS(J)
	STACK(ITOP+11)=WS(J)
	ITOP=ITOP+11
	GO TO 10
	END
C===============================================================-RANNOR
	FUNCTION ELSS_RANNOR(AMEAN,SIGMA)
C===============================================================-RANNOR
C
C	SIMULATES A GAUSSIAN RANDOM VARIABLE 
C	(MEAN = AMEAN,  VARIANCE = SIGMA)
C
C===========================================
	SUM=0.
	DO 10 I=1,12
	SUM=SUM+RANDOM(0)
10	CONTINUE
	ELSS_RANNOR=AMEAN+SIGMA*(SUM-6.)
	RETURN
	END
C===============================================================-DATAIN
	SUBROUTINE ELSS_DATAIN(EBEAM,CATP,CATE,NMEDIA,MENAME)
C===============================================================-DATAIN
C===============================================================-DATAIN
	INTEGER MADR(24),NCMP(24)
	CHARACTER*4 PART(6),NAMS(24),NAM1(24),
     ,              NAM2(24),NAM3(24),NUN,NAME,IBLANK
     ,              ,MENAME(10)
	REAL RHOS(24),ZZS(73),AAS(73),WWS(73)
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
        COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
        COMMON/ELSS_MEDDAT/NCOM(10),ZZ(10,10),AA(10,10),WW(10,10)
        COMMON/ELSS_PARINI/IQI,IRI,WTI,EI,TOFI,XI,YI,ZI,UI,VI,WI,
     ,                NEVREQ,NEVSIM,NEVSAV
        COMMON/ELSS_DISUNI/NUN,DUN
	COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA MEDNUM,IBLANK/24,'    '/
	DATA PART/'ELEC','TRON','PHOT','ON  ','POSI','TRON'/
C-----------------------------------------------------------------------
	DATA NAMS/'U   ','PB  ','W   ','CU  ','FE  ','AL  ',
     ,            'C   ','BE  ','SF5 ','NAI ','SCG ','PS  ',
     ,            'CONC','LA  ','H2O ','AIR ','MWPC','PLEX',
     ,            'BGO ','F2  ','TF1 ','SF2 ','DF6 ','SF6W'/
C-----------------------------------------------------------------------
	DATA NAM1/'URAN','LEAD','TUNG','COPP','IRON','ALUM',
     ,            'CARB','BERY','SF5 ','NAI ','SCG ','POLY',
     ,            'CONC','LIQU','WATE','AIR ','90%A','PLEX',
     ,            'BGO ','F2 G','TF1 ','SF2 ','DF6 ','SF6W'/
C-----------------------------------------------------------------------
	DATA NAM2/'IUM ','    ','STEN','ER  ','    ','INIU',
     ,            'ON  ','LIUM','GLAS','CRYS','GLAS','STYR',
     ,            'RETE','ID A','R   ','    ','R+10','IGLA',
     ,            'CRYS','LASS','GLAS','GLAS','GLAS',' GLA'/
C-----------------------------------------------------------------------
	DATA NAM3/'    ','    ','    ','    ','    ','M   ',
     ,            '    ','    ','S   ','TALL','S   ','ENE ',
     ,            '    ','RGON','    ','    ','%CH4','S   ',
     ,            'TALL','    ','S   ','S   ','S   ','SS  '/
C-----------------------------------------------------------------------
	DATA MADR/1,2,3,4,5,6,7,8,9,15,17,25,27,35,36,38,42,45,48,51,
     1            56,62,68,68/
C-----------------------------------------------------------------------
	DATA NCMP/1,1,1,1,1,1,1,1,6,2,8,2,8,1,2,4,3,3,3,5,6,6,6,6/
C-----------------------------------------------------------------------
	DATA RHOS/18.95,11.35,19.3,8.96,7.87,2.7,1.55,1.848,4.08,
     1		  3.670,4.390,1.032,2.5,1.40,1.00,0.001205,0.001674,
     2		  1.18,7.1,3.61,3.86,3.85,5.2,5.2/
C-----------------------------------------------------------------------
	DATA ZZS/92.,82.,74.,29.,26.,13., 6., 4., 8.,82.,14.,19.,11.,56.
     1,		 11.,53., 8.,56.,14., 3.,12.,19.,13.,58., 1., 6., 8.,14.
     2,		 20.,13.,26., 1., 6.,11.,18., 1., 8., 7., 8.,18., 6.,18.
     3,           1., 6., 1., 6., 8.,83.,32., 8., 8.,82.,14.,11.,19.,82.
     4,          14., 8.,19.,11.,33.,82.,14., 8.,19.,11.,33.,82.,14., 8.
     5,          19.,11.,51./
C-----------------------------------------------------------------------
	DATA AAS/238.03,207.20,183.85,63.546,55.847,26.980,12.011,9.0100
     1,		 15.999,207.20,28.085,39.098,22.990,137.33,22.990,126.90
     2,		 15.999,137.33,28.085,6.9400,24.305,39.098,26.981,140.12
     3,		 1.0079,12.011,15.999,28.085,40.080,26.981,55.847,1.0079
     4,		 12.011,22.990,39.948,1.0079,15.999,14.007,15.999,39.948
     5,		 12.011,39.950,1.0079,12.011,1.0079,12.011,15.999,208.98
     6,          72.590,15.999,15.999,207.20,28.085,22.990,39.098,207.20
     7,          28.085,15.999,39.098,22.990,74.922,207.20,28.085,15.999
     8,          39.098,22.990,74.922,207.20,28.085,15.999,39.098,22.990
     9,          121.75/
C-----------------------------------------------------------------------
	DATA WWS/8*1.0,.6070,.0931,.2422,.0321,.0244,.0012,.5000,.5000,
     1		 .5621,.2170,.1417,.0267,.0165,.0220,.0080,.0060,.5238,
     2		 .4762,.5107,.3577,.0860,.0200,.0120,.0063,.0040,.0033,
     3		 1.000,.6667,.3333,.7560,.2307,.0130,.0003,.9000,.0800,
     4		 .0200,.5333,.3333,.1334,.2105,.1579,.6316,.6046,.0657,
     5           .2494,.0526,.0277,.0822,.2464,.6084,.0381,.0231,.0018,
     6           .0921,.2742,.5503,.0481,.0340,.0012,.1541,.2204,.6058,
     7           .0093,.0094,.0010/
C-----------------------------------------------------------------------
C
	NUN = 'CM'
	AP=CATP
	AE=CATE
	EI=EBEAM
	ELM=0.5110034
	TE=AE-ELM
	IF(AE.LE.ELM) GO TO 220
	IF(AP.GE.EI)  GO TO 240
	IF(AE.GE.EI)  GO TO 260
	IRI =2
	WTI =1.
	TOFI=0.
	XI  =0.  
	YI  =0.  
	ZI  =0.  
	UI  =0.  
	VI  =0.  
	WI  =1.  
	NMED=NMEDIA
	IF(NMED.GT.10) GO TO 280
	DO 190 IMED=1,NMED
	NAME(IMED)=MENAME(IMED)
	NUMB=0
	DO 100 ISCAN=1,MEDNUM
	IF(NAME(IMED).EQ.NAMS(ISCAN)) NUMB=ISCAN
100	CONTINUE
	IF(NUMB.LE.0) THEN
	  WRITE(6,*)'NO ABSORBERS'
	  STOP
	ENDIF
	NCOM(IMED)=NCMP(NUMB)
	IADR      =MADR(NUMB)
	RHO(IMED) =RHOS(NUMB)
	NC=NCOM(IMED)
	DO 130 I=1,NC
	II=IADR+I-1
	ZZ(I,IMED)=ZZS(II)
	AA(I,IMED)=AAS(II)
	WW(I,IMED)=WWS(II)
130	CONTINUE
190	CONTINUE
	RETURN
220	CONTINUE
	WRITE(5,230)
230	FORMAT(1X,23HEXECUTION TERMINATED;  ,11HAE.LE.0.511)
	STOP
240	CONTINUE
	WRITE(5,250)
250	FORMAT(1X,23HEXECUTION TERMINATED;  ,20HAP.GE.PRIMARY ENERGY)
	STOP
260	CONTINUE
	WRITE(5,270)
270	FORMAT(1X,23HEXECUTION TERMINATED;  ,20HAE.GE.PRIMARY ENERGY)
	STOP
280	CONTINUE
	WRITE(5,290)
290	FORMAT(1X,23HEXECUTION TERMINATED;  ,21HNUMBER OF MEDIA.GT.10)        
	STOP
	END
C===============================================================-PREPAR
	SUBROUTINE ELSS_PREPAR
C===============================================================-PREPAR
C
C	***** CALCULATES THE MEDIUM DEPENDENT CONSTANTS
C
C======================================================
	REAL VDU(6)
	CHARACTER*4 NDU(6),NUN
	COMMON/ELSS_CUTOFF/AE,AP,ELM, TE
        COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
        COMMON/ELSS_MEDDAT/NCOM(10),ZZ(10,10),AA(10,10),WW(10,10)
        COMMON/ELSS_CROSEC/SBR(10,2),SMO(10),SBH(10),SAN(10),
     ,                SPH(10,3),SCO(10),SPA(10),SPN(10)
        COMMON/ELSS_PBRHLP/DBH(10),DLP(10),ALFP(10),ALFB(10),AP1(10),
     ,        AP2(10),AB1(10),COR(10),SL1(10),SL2(10),W0(10),W0L(10)
        COMMON/ELSS_REJFUN/A1(10),A2(10),B1(10),B2(10),
     ,                C1(10),C2(10),DM(10),EM(10)
        COMMON/ELSS_ILSHLP/EIP(10),EPF(10),GAS(10),G0S(10),
     ,                G1S(10),X1S(10),AST(10),BI(10),BP(10)
        COMMON/ELSS_DEDXTB/XSI(10),DEDXN(101,10),DEDXP(101,10)
        COMMON/ELSS_MLSHLP/BC(10),XCC(10),EMSCT
        COMMON/ELSS_DISUNI/NUN,DUN
        COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA NDU/'MM  ','CM  ','M   ','KM  ','RL  ','GR  '/
	DATA VDU/1.0E+01,1.0E+00,1.0E-02,1.0E-05,0.0E+00,0.0E+00/
	DATA NUNIT/6/
	DATA PI,ALF,REJLP/3.1415927,137.03604,1.05/
	DATA R02NA,RL20NA,R0ALF2/0.047819701,0.9990048E-08,0.5291771E-08/
C
C	SET DISTANCE UNIT
C
	NUMUNI=2
	DO 10 I=1,NUNIT
	IF(NUN.EQ.NDU(I)) NUMUNI=I
10	CONTINUE
C
C	ACCUMULATE SOME MEDIUM DEPENDENT SUMS.
C
	DO 30 IMED=1,NMED
	NC=NCOM(IMED)
	WA=0.
	SZ=0.
	ZB=0.
	ZT=0.
	ZF=0.
	ZS=0.
	ZE=0.
	ZX=0.
	ZC=0.
	SZI=0.
	DO 20 K=1,NC
	ZK=ZZ(K,IMED)
	AK=AA(K,IMED)
	WK=WW(K,IMED)
	WZZXSI=WK*ZK*(ZK+ELSS_XSIF(ZK))
	WA=WA+WK*AK
	SZ=SZ+WK*ZK
	SZI=SZI+WK*ZK*ALOG(ELSS_POTION(ZK))
	ZB=ZB-WZZXSI*ALOG(ZK)/3.
	ZT=ZT+WZZXSI
	ZF=ZF+WZZXSI*ELSS_FCOULC(ZK)
	ZS=ZS+WK*ZK*(ZK+1.)
	ZC=ZC+WZZXSI*SQRT(ZK)
	ZE=ZE-2.*WK*ZK*(ZK+1.)*ALOG(ZK)/3.
	ZX=ZX+WK*ZK*(ZK+1.)*ALOG(1.+1.7859E-04*ZK**2)
20	CONTINUE
	ZG=ZB/ZT
	ZA=5.21575*ZT
	ZV=(ZB-ZF)/ZT
C
	X0CM=ALF*WA/(4.*R02NA*RHO(IMED)*(ZA+ZB-ZF))
	VDU(5)=1./X0CM
	VDU(6)=RHO(IMED)
	DUN=VDU(NUMUNI)
	EDEN=RHO(IMED)*SZ/WA
	XSI(IMED)=(2.*PI*R02NA*EDEN*ELM)/DUN
	COR(IMED)=3.*ELM*ZC/(ZT*SQRT(ALF))
	BC(IMED)=(6702.2944*RHO(IMED)*ZS*EXP((ZE-ZX)/ZS)/WA)/DUN
	XCC(IMED)=(SQRT(4.*PI*R02NA*ZS*RHO(IMED)/WA)*ELM)/SQRT(DUN)
	EMSCT=ELM*SQRT(4.*PI*ALF)
	X0(IMED)=X0CM*DUN
	W0(IMED)=SQRT(RL20NA*EDEN/PI)
	W0L(IMED)=ALOG((1.+W0(IMED)**2)/(W0(IMED)**2))
	DBH(IMED)=100.*ELM*EXP(ZG)
	DLP(IMED)=ELM*X0CM/(32.*PI*R0ALF2)
	SL1(IMED)=2.*EXP(-4.*(ZA+ZB)/ZT)
	SL2(IMED)=1./ALOG(SL1(IMED))
	EIP(IMED)=EXP(SZI/SZ)
	EPF(IMED)=W0(IMED)*ELM
	BI(IMED)=ALOG(2.*(ELM/EIP(IMED))**2)
	BP(IMED)=ALOG(2.*(ELM/EPF(IMED))**2)
C
	AP1(IMED)=1./9.+1./(108.*(5.21575+ZV))
	AP2(IMED)=2./3.-1./(36.0*(5.21575+ZV))
	AB1(IMED)=4./3.+1./(9.00*(5.21575+ZV))
	ALFP(IMED)=AP2(IMED)/(AP1(IMED)+AP2(IMED))
	ALFB(IMED)=1./AB1(IMED)
	SBR(IMED,1)=(0.5*REJLP*AB1(IMED)*W0L(IMED)/X0CM)/DUN
	SBR(IMED,2)=(0.5*REJLP*AB1(IMED)*W0L(IMED)*COR(IMED)/X0CM)/DUN
	SMO(IMED)=((9./4.)*2.*PI*R02NA*EDEN*ELM/TE)/DUN
	SBH(IMED)=(2.*PI*R02NA*EDEN*ELM/TE)/DUN
	SAN(IMED)=(PI*R02NA*EDEN)/DUN
	SPA(IMED)=(REJLP*(AP1(IMED)+AP2(IMED))/X0CM)/DUN
	SCO(IMED)=(PI*R02NA*EDEN)/DUN
	CALL ELSS_PHOT0(IMED)
	CALL ELSS_DENS0(IMED)
	CALL ELSS_ILOS0(IMED)
C
	DEN=2./3.+8.*(5.21575+ZV)
	A1(IMED)=8.*ZV/DEN
	A2(IMED)=1./DEN
	DEN=-2./3.+16.*(5.21575+ZV)
	C1(IMED)=16.*ZV/DEN
	C2(IMED)=1./DEN
	DEN=4.*(5.21575+ZV)
	B1(IMED)=4.*ZV/DEN
	B2(IMED)=1./DEN
	DM(IMED)=EXP((20.514+4.*ZV)/4.278)-0.952
	EM(IMED)=4.*DBH(IMED)/DM(IMED)
30	CONTINUE
	RETURN
	END
C================================================================-PHOT0
	SUBROUTINE ELSS_PHOT0(IM)
C================================================================-PHOT0
C
C	COMPUTES SOME CONSTANTS NEEDED FOR PHOTOELECTRIC
C	ABSORPTION CROSS SECTION CALCULATION IN MEDIUM 'IM'
C
C==========================================================
	REAL B0(15),B1(15),B2(15),CC(15)
	COMMON/ELSS_CUTOFF/AE,AP,ELM,TE
        COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
        COMMON/ELSS_MEDDAT/NCOM(10),ZZ(10,10),AA(10,10),WW(10,10)
        COMMON/ELSS_CROSEC/SBR(10,2),SMO(10),SBH(10),SAN(10),
     ,                SPH(10,3),SCO(10),SPA(10),SPN(10)
	COMMON/ELSS_PHOHLP/EKPH(10)
        COMMON/ELSS_DISUNI/NUN,DUN
        COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA B0/1.008,0.856,0.704,0.604,0.552,
     ,		0.455,0.402,0.358,0.323,0.293,
     ,		0.268,0.248,0.232,0.218,0.207/
	DATA B1/1.926,1.786,1.647,1.547,1.460,
     ,		1.392,1.339,1.297,1.265,1.247,
     ,		1.234,1.234,1.243,1.263,1.299/
	DATA B2/2.107,1.849,1.592,1.411,1.258,
     ,		1.114,0.985,0.866,0.753,0.636,
     ,		0.528,0.407,0.278,0.134,-.041/
	DATA CC/1.065,1.072,1.079,1.086,1.092,
     ,		1.097,1.102,1.108,1.115,1.124,
     ,		1.134,1.148,1.162,1.181,1.201/
C
	SPH(IM,1)=0.
	SPH(IM,2)=0.
	SPH(IM,3)=0.
	EKPH(IM) =0.
	IF(IM.LE.0) RETURN
	BET0=0.
	BET1=0.
	BET2=0.
	WA  =0.
	SSS =0.
	EKE =0.
	G   =AP/ELM
	NC  =NCOM(IM)
	DO 10 K=1,NC
	ZK=ZZ(K,IM)
	AK=AA(K,IM)
	WK=WW(K,IM)
	WA=WA+WK*AK
	AL=ZK/137.03604
	JJ=INT(20.*AL)+1
	ALF=20.*AL-FLOAT(JJ-1)
	BB0=(1.-ALF)*B0(JJ)+ALF*B0(JJ+1)
	BB1=(1.-ALF)*B1(JJ)+ALF*B1(JJ+1)
	BB2=(1.-ALF)*B2(JJ)+ALF*B2(JJ+1)
	CCC=(1.-ALF)*CC(JJ)+ALF*CC(JJ+1)	
	SG0=0.60092008*RHO(IM)*WK*CCC*ZK*AL**4
	SIG=SG0*(BB0+(BB1+BB2/G)/G)/G
	SSS=SSS+WK*SIG
	EKE=EKE+WK*SIG*SQRT(1.-AL*AL)
	BET0=BET0+BB0*SG0
	BET1=BET1+BB1*SG0
	BET2=BET2+BB2*SG0
10	CONTINUE
	SPH(IM,1)=BET0/(DUN*WA)
	SPH(IM,2)=BET1/(DUN*WA)
	SPH(IM,3)=BET2/(DUN*WA)
	EKPH(IM) =ELM*EKE/SSS
	RETURN
	END
C================================================================-DENS0
	SUBROUTINE ELSS_DENS0(IM)
C================================================================-DENS0
C
C	COMPUTES THE DENSITY EFFECT PARAMETERS FOR MEDIUM 'IM'
C	USING THE GENERAL FORMULAE SUGGESTED BY
C	STERNHEIMER AND PEIERLS. PHYS. REV. , 3B, 3681 (1971)
C
C==============================================================
	CHARACTER*4 NAME,NAM1,NAM2
        COMMON/ELSS_MEDIUM/NMED,NAME(10),RHO(10),X0(10),MED(1000)
        COMMON/ELSS_ILSHLP/EIP(10),EPF(10),GAS(10),G0S(10),
     ,                G1S(10),X1S(10),AST(10),BI(10),BP(10)
        COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
C
	DATA NAM1,NAM2,TWLN10/'AIR ','MWPC',4.605170/
C
	IF(IM.LE.0) RETURN
	EI=EIP(IM)
	EP=EPF(IM)
	CC=2.*ALOG(EI/EP)+1.
	XAS=CC/TWLN10
	IF(NAME(IM).EQ.NAM1.OR.NAME(IM).EQ.NAM2) GO TO 20
C
C	COMPUTE STERNHEIMER PARAMETERS FOR SOLIDS AND LIQUIDS
C
	IF(EI.GE.1.0E-04) GO TO 10
	X1S(IM)=2.0
	IF(CC.LT.3.681) X0S=0.200
	IF(CC.GE.3.681) X0S=0.326*CC-1.
	GO TO 40
10	CONTINUE
	X1S(IM)=3.0
	IF(CC.LT.5.215) X0S=0.200
	IF(CC.GE.5.215) X0S=0.326*CC-1.5
	GO TO 40
C
C	COMPUTE STERNHEIMER PARAMETERS FOR GASES
C
20	CONTINUE
	IF(CC.GE.12.25) GO TO 30
	X1S(IM)=4.0
	IF(CC.LT.10.0                ) X0S=1.6
	IF(CC.GE.10.0.AND.CC.LT.10.5 ) X0S=1.7
	IF(CC.GE.10.5.AND.CC.LT.11.0 ) X0S=1.8
	IF(CC.GE.11.0.AND.CC.LT.11.5 ) X0S=1.9
	IF(CC.GE.11.5.AND.CC.LT.12.25) X0S=2.0
	GO TO 40
30	CONTINUE
	X1S(IM)=5.0
	IF(CC.LT.13.804) X0S=2.000
	IF(CC.GE.13.804) X0S=0.326*CC-2.5
C
C	COMPUTE CORRESPONDING LORENTZ FACTORS
C
40	CONTINUE
	GAS(IM)=SQRT(10.**(XAS+XAS)+1.)
	G0S(IM)=SQRT(10.**(X0S+X0S)+1.)
	G1S(IM)=SQRT(10.**(2.*X1S(IM))+1.)
	AST(IM)=TWLN10*(XAS-X0S)/((X1S(IM)-X0S)**3)
	RETURN
	END
C================================================================-ILOS0
	SUBROUTINE ELSS_ILOS0(IM)
C================================================================-ILOS0
C
C	TABULATES DEDX FOR ELECTRONS AND POSITRONS
C	IN THE ENERGY RANGE AE - 100.*AE
C
C=================================================
	COMMON/ELSS_CUTOFF/AE,AP,ELM, TE
        COMMON/ELSS_PARINI/IQI,IRI,WTI,EI,TOFI,XI,YI,ZI,UI,VI,WI,
     ,                NEVREQ,NEVSIM,NEVSAV
        COMMON/ELSS_DEDXTB/XSI(10),DEDXN(101,10),DEDXP(101,10)
        COMMON/ELSS_SYSLUN/ILP,ICR,ICP,IDP,IMT
	DATA NTAB,MODE/100,0/
C
	IF(IM.LE.0) RETURN
	DO 10 IND=1,NTAB
	E0=AE*FLOAT(IND)
	DEDXN(IND,IM)=ELSS_TDEDXI(E0,TE,-1,IM,MODE)	
	DEDXP(IND,IM)=ELSS_TDEDXI(E0,TE,+1,IM,MODE)
10	CONTINUE
	IND=NTAB+1
	E0=EI
	DEDXN(IND,IM)=ELSS_TDEDXI(E0,TE,-1,IM,MODE)
	DEDXP(IND,IM)=ELSS_TDEDXI(E0,TE,+1,IM,MODE)
	RETURN
	END
C===============================================================-POTION
	FUNCTION ELSS_POTION(Z)
C===============================================================-POTION
C
C	CALCULATES THE AVERAGE IONIZATION ENERGY (MEV)
C
C=====================================================
	REAL ADJI(12)
	DATA ADJI/18.7,42.,38.,60.,73.,78.,
     ,		  85.,89.,117.,131.,143.,156./
C
	IF(Z.LE.12.) GO TO 10
	ELSS_POTION=Z*(9.76+58.8*Z**(-1.19))*1.E-06
	RETURN
10	CONTINUE
	ELSS_POTION=ADJI(INT(Z))*1.E-06
	RETURN
	END
C===============================================================-FCOULC
	FUNCTION ELSS_FCOULC(Z)
C===============================================================-FCOULC
C
C      ***** CALCULATES THE COULOMB CORRECTION TERM
C
C===================================================
	A=Z/137.03604
	A=A*A
	ELSS_FCOULC=A*(1./(1.+A)+0.20206-A*(0.0369-A*(0.0083+0.002*A)))
	RETURN
	END
C=================================================================-XSIF
	FUNCTION ELSS_XSIF(Z)
C=================================================================-XSIF
C
C	CALCULATES XSI(Z) NEEDED FOR
C	PAIR PRODUCTION & BREMSSTRAHLUNG
C
C=======================================
	REAL RADL1(4),RADL2(4)
	DATA RADL1/6.144,5.621,5.805,5.924/
	DATA RADL2/5.310,4.790,4.740,4.710/
C
	ELSS_XSIF=0.
	IF(Z.LE.0.) RETURN
	IF(Z.GT.4 ) GO TO 10
C
	IZ=INT(Z)
	TERM1=RADL1(IZ)
	TERM2=RADL2(IZ)-ELSS_FCOULC(Z)
	GO TO 20
C
10	CONTINUE
	ZLN=ALOG(Z)
	TERM1=7.08506-2.*ZLN/3.
	TERM2=5.21575-ZLN/3.-ELSS_FCOULC(Z)
C
20	CONTINUE
	ELSS_XSIF=TERM1/TERM2
	RETURN
	END
C*==============================================================-RANINI
	SUBROUTINE RANINI(NUMODD)
C*==============================================================-RANINI
	COMMON/rnseed/iseed
	iseed = numodd
	RETURN
	END
C*==============================================================-RANDOM
	FUNCTION RANDOM(DUMMY)
C*==============================================================-RANDOM
	COMMON/rnseed/iseed
10	CONTINUE
	RANDOM = SSRAN(iseed)
	IF(RANDOM.NE.0.) RETURN
	GO TO 10
	END
C======================================================================
      FUNCTION SSRAN(IDUM)
C----------------------------------------------------------------------
C-
C- Purpose and Methods : Flat Random Numbers (from Numerical Recipes:"RAN2").
C-
C----------------------------------------------------------------------
      IMPLICIT NONE
C----------------------------------------------------------------------
C
      SAVE
C
C Function parameters
      INTEGER IDUM
      REAL    SSRAN
C
C Local parameters
      INTEGER M, IA, IC
      REAL RM
      PARAMETER (M=714025, IA=1366, IC=150889, RM=1.4005112E-6)
C
C Local variables
      INTEGER J, IY, IFF, IR(97)
      DATA IFF /0/
C
C
      IF(IDUM.LT.0 .OR. IFF.EQ.0) THEN
        IFF = 1
        IDUM = MOD(IC-IDUM,M)
        DO 11 J=1,97
          IDUM = MOD(IA*IDUM+IC,M)
          IR(J) = IDUM
 11     CONTINUE
        IDUM = MOD(IA*IDUM+IC,M)
        IY = IDUM
      ENDIF
C
      J = 1 + (97*IY)/M
      IF(J.GT.97 .OR. J.LT.1) PAUSE
      IY   = IR(J)
      SSRAN = IY*RM
      IDUM = MOD(IA*IDUM+IC,M)
      IR(J)= IDUM
C
      RETURN
      END
