/*
	A basic extension of the java.awt.Frame class
 */

package clonjava;

import java.awt.*;

import symantec.itools.awt.WrappingLabel;
public class HelpWindow extends Frame
{   private Alarm parent;
	
	private MyErrorClass error = new MyErrorClass();
	public HelpWindow()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setVisible(false);
		setSize(444,356);
		setFont(new Font("Serif", Font.BOLD, 14));
		setBackground(new Color(-1838165));
		helpText = new symantec.itools.awt.WrappingLabel();
		helpText.setBounds(36,132,360,179);
		add(helpText);
		dismiss = new java.awt.Button();
		dismiss.setLabel("Dismiss");
		dismiss.setBounds(228,324,192,24);
		dismiss.setBackground(new Color(12632256));
		add(dismiss);
		acknowledge = new java.awt.Button();
		acknowledge.setLabel("Acknowledge Error");
		acknowledge.setBounds(12,324,192,24);
		acknowledge.setBackground(new Color(12632256));
		add(acknowledge);
		label1 = new java.awt.Label("Message:");
		label1.setBounds(36,72,84,44);
		add(label1);
		messageText = new java.awt.Label("");
		messageText.setBounds(132,72,268,44);
		add(messageText);
		label3 = new java.awt.Label("ID");
		label3.setBounds(264,12,32,44);
		add(label3);
		systemText = new java.awt.Label(" ");
		systemText.setBounds(128,12,124,44);
		add(systemText);
		idText = new java.awt.Label("");
		idText.setBounds(312,12,84,44);
		add(idText);
		label5 = new java.awt.Label("System:");
		label5.setBounds(36,12,84,44);
		add(label5);
		setTitle("Alarm Help");
		//}}

		//{{INIT_MENUS
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		dismiss.addActionListener(lSymAction);
		acknowledge.addActionListener(lSymAction);
		//}}
	}
    public synchronized void setHelpText(String s){
       try{ helpText.setText(s);
       }catch(Exception e){System.out.println(e);}
    }
	public HelpWindow(Alarm a, String title,MyErrorClass er)
	{
		this();
		parent = a;
		error = er;
		if(error.ack){
		    acknowledge.setEnabled(false);
		}else{
		    acknowledge.setEnabled(true);
		}
		
		try{helpText.setText(title);
		    messageText.setText(error.message);
		    idText.setText((new Integer(error.alarmID)).toString());
		    systemText.setText(error.system);
	    }catch(Exception e){System.out.println(e);}
	}

    public void AcknowledgeAlarm(){
        acknowledge.setEnabled(false);
        parent.AcknowledgeAlarm(error.system,error.alarmID,error.tableRow);
        
        
    }
    /**
     * Shows or hides the component depending on the boolean flag b.
     * @param b  if true, show the component; otherwise, hide the component.
     * @see java.awt.Component#isVisible
     */
    public void setVisible(boolean b)
	{
		if(b)
		{
			setLocation(50, 50);
		}
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new HelpWindow()).setVisible(true);
	}
	
	public void addNotify()
	{
	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();
	    
		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

    // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	//{{DECLARE_CONTROLS
	symantec.itools.awt.WrappingLabel helpText;
	java.awt.Button dismiss;
	java.awt.Button acknowledge;
	java.awt.Label label1;
	java.awt.Label messageText;
	java.awt.Label label3;
	java.awt.Label systemText;
	java.awt.Label idText;
	java.awt.Label label5;
	//}}

	//{{DECLARE_MENUS
	//}}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == HelpWindow.this)
				Frame1_WindowClosing(event);
		}
	}
	class SymAction implements java.awt.event.ActionListener{
	 public void actionPerformed(java.awt.event.ActionEvent e){
	    
	    Object object = e.getSource();
	    if (object == dismiss){
	        dispose();
	    }else if(object == acknowledge){
	        AcknowledgeAlarm();
	    }
	         
	    
	 }
	}
	
	void Frame1_WindowClosing(java.awt.event.WindowEvent event)
	{
		setVisible(false);		 // hide the Frame
	}
}
