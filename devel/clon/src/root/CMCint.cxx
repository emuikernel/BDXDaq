//
// File generated by rootcint at Wed Sep  3 12:55:32 2008

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif
#include "CMCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TCollectionProxy.h"
#include "TIsAProxy.h"
// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void CMVirtualDisplay_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_CMVirtualDisplay(void *p);
   static void deleteArray_CMVirtualDisplay(void *p);
   static void destruct_CMVirtualDisplay(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMVirtualDisplay*)
   {
      ::CMVirtualDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMVirtualDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMVirtualDisplay", ::CMVirtualDisplay::Class_Version(), "CMVirtualDisplay.h", 16,
                  typeid(::CMVirtualDisplay), DefineBehavior(ptr, ptr),
                  &::CMVirtualDisplay::Dictionary, isa_proxy, 0,
                  sizeof(::CMVirtualDisplay) );
      instance.SetDelete(&delete_CMVirtualDisplay);
      instance.SetDeleteArray(&deleteArray_CMVirtualDisplay);
      instance.SetDestructor(&destruct_CMVirtualDisplay);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMVirtualDisplay*)
   {
      return GenerateInitInstanceLocal((::CMVirtualDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMVirtualDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMDaq_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_CMDaq(void *p);
   static void deleteArray_CMDaq(void *p);
   static void destruct_CMDaq(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMDaq*)
   {
      ::CMDaq *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMDaq >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMDaq", ::CMDaq::Class_Version(), "CMDaq.h", 26,
                  typeid(::CMDaq), DefineBehavior(ptr, ptr),
                  &::CMDaq::Dictionary, isa_proxy, 0,
                  sizeof(::CMDaq) );
      instance.SetDelete(&delete_CMDaq);
      instance.SetDeleteArray(&deleteArray_CMDaq);
      instance.SetDestructor(&destruct_CMDaq);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMDaq*)
   {
      return GenerateInitInstanceLocal((::CMDaq*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMDaq*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMEpics_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CMEpics(void *p = 0);
   static void *newArray_CMEpics(Long_t size, void *p);
   static void delete_CMEpics(void *p);
   static void deleteArray_CMEpics(void *p);
   static void destruct_CMEpics(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMEpics*)
   {
      ::CMEpics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMEpics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMEpics", ::CMEpics::Class_Version(), "CMEpics.h", 16,
                  typeid(::CMEpics), DefineBehavior(ptr, ptr),
                  &::CMEpics::Dictionary, isa_proxy, 0,
                  sizeof(::CMEpics) );
      instance.SetNew(&new_CMEpics);
      instance.SetNewArray(&newArray_CMEpics);
      instance.SetDelete(&delete_CMEpics);
      instance.SetDeleteArray(&deleteArray_CMEpics);
      instance.SetDestructor(&destruct_CMEpics);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMEpics*)
   {
      return GenerateInitInstanceLocal((::CMEpics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMEpics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMInputDialog_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void CMInputDialog_Dictionary();
   static void delete_CMInputDialog(void *p);
   static void deleteArray_CMInputDialog(void *p);
   static void destruct_CMInputDialog(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMInputDialog*)
   {
      ::CMInputDialog *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CMInputDialog),0);
      static ::ROOT::TGenericClassInfo 
         instance("CMInputDialog", "CMInputDialog.h", 47,
                  typeid(::CMInputDialog), DefineBehavior(ptr, ptr),
                  0, &CMInputDialog_Dictionary, isa_proxy, 0,
                  sizeof(::CMInputDialog) );
      instance.SetDelete(&delete_CMInputDialog);
      instance.SetDeleteArray(&deleteArray_CMInputDialog);
      instance.SetDestructor(&destruct_CMInputDialog);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMInputDialog*)
   {
      return GenerateInitInstanceLocal((::CMInputDialog*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMInputDialog*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CMInputDialog_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CMInputDialog*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void CMDisplay_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CMDisplay(void *p = 0);
   static void *newArray_CMDisplay(Long_t size, void *p);
   static void delete_CMDisplay(void *p);
   static void deleteArray_CMDisplay(void *p);
   static void destruct_CMDisplay(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMDisplay*)
   {
      ::CMDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMDisplay", ::CMDisplay::Class_Version(), "CMDisplay.h", 29,
                  typeid(::CMDisplay), DefineBehavior(ptr, ptr),
                  &::CMDisplay::Dictionary, isa_proxy, 0,
                  sizeof(::CMDisplay) );
      instance.SetNew(&new_CMDisplay);
      instance.SetNewArray(&newArray_CMDisplay);
      instance.SetDelete(&delete_CMDisplay);
      instance.SetDeleteArray(&deleteArray_CMDisplay);
      instance.SetDestructor(&destruct_CMDisplay);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMDisplay*)
   {
      return GenerateInitInstanceLocal((::CMDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMClient_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CMClient(void *p = 0);
   static void *newArray_CMClient(Long_t size, void *p);
   static void delete_CMClient(void *p);
   static void deleteArray_CMClient(void *p);
   static void destruct_CMClient(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMClient*)
   {
      ::CMClient *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMClient >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMClient", ::CMClient::Class_Version(), "CMClient.h", 18,
                  typeid(::CMClient), DefineBehavior(ptr, ptr),
                  &::CMClient::Dictionary, isa_proxy, 0,
                  sizeof(::CMClient) );
      instance.SetNew(&new_CMClient);
      instance.SetNewArray(&newArray_CMClient);
      instance.SetDelete(&delete_CMClient);
      instance.SetDeleteArray(&deleteArray_CMClient);
      instance.SetDestructor(&destruct_CMClient);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMClient*)
   {
      return GenerateInitInstanceLocal((::CMClient*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMClient*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMPolar_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CMPolar(void *p = 0);
   static void *newArray_CMPolar(Long_t size, void *p);
   static void delete_CMPolar(void *p);
   static void deleteArray_CMPolar(void *p);
   static void destruct_CMPolar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMPolar*)
   {
      ::CMPolar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMPolar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMPolar", ::CMPolar::Class_Version(), "CMPolar.h", 26,
                  typeid(::CMPolar), DefineBehavior(ptr, ptr),
                  &::CMPolar::Dictionary, isa_proxy, 0,
                  sizeof(::CMPolar) );
      instance.SetNew(&new_CMPolar);
      instance.SetNewArray(&newArray_CMPolar);
      instance.SetDelete(&delete_CMPolar);
      instance.SetDeleteArray(&deleteArray_CMPolar);
      instance.SetDestructor(&destruct_CMPolar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMPolar*)
   {
      return GenerateInitInstanceLocal((::CMPolar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMPolar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMTline_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CMTline(void *p = 0);
   static void *newArray_CMTline(Long_t size, void *p);
   static void delete_CMTline(void *p);
   static void deleteArray_CMTline(void *p);
   static void destruct_CMTline(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMTline*)
   {
      ::CMTline *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMTline >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMTline", ::CMTline::Class_Version(), "CMTline.h", 32,
                  typeid(::CMTline), DefineBehavior(ptr, ptr),
                  &::CMTline::Dictionary, isa_proxy, 0,
                  sizeof(::CMTline) );
      instance.SetNew(&new_CMTline);
      instance.SetNewArray(&newArray_CMTline);
      instance.SetDelete(&delete_CMTline);
      instance.SetDeleteArray(&deleteArray_CMTline);
      instance.SetDestructor(&destruct_CMTline);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMTline*)
   {
      return GenerateInitInstanceLocal((::CMTline*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMTline*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMHbook_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CMHbook(void *p = 0);
   static void *newArray_CMHbook(Long_t size, void *p);
   static void delete_CMHbook(void *p);
   static void deleteArray_CMHbook(void *p);
   static void destruct_CMHbook(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMHbook*)
   {
      ::CMHbook *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMHbook >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMHbook", ::CMHbook::Class_Version(), "CMHbook.h", 24,
                  typeid(::CMHbook), DefineBehavior(ptr, ptr),
                  &::CMHbook::Dictionary, isa_proxy, 0,
                  sizeof(::CMHbook) );
      instance.SetNew(&new_CMHbook);
      instance.SetNewArray(&newArray_CMHbook);
      instance.SetDelete(&delete_CMHbook);
      instance.SetDeleteArray(&deleteArray_CMHbook);
      instance.SetDestructor(&destruct_CMHbook);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMHbook*)
   {
      return GenerateInitInstanceLocal((::CMHbook*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMHbook*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TestMainFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TestMainFrame(void *p);
   static void deleteArray_TestMainFrame(void *p);
   static void destruct_TestMainFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TestMainFrame*)
   {
      ::TestMainFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TestMainFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TestMainFrame", ::TestMainFrame::Class_Version(), "CMMenu.h", 38,
                  typeid(::TestMainFrame), DefineBehavior(ptr, ptr),
                  &::TestMainFrame::Dictionary, isa_proxy, 0,
                  sizeof(::TestMainFrame) );
      instance.SetDelete(&delete_TestMainFrame);
      instance.SetDeleteArray(&deleteArray_TestMainFrame);
      instance.SetDestructor(&destruct_TestMainFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TestMainFrame*)
   {
      return GenerateInitInstanceLocal((::TestMainFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TestMainFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMViewer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CMViewer(void *p = 0);
   static void *newArray_CMViewer(Long_t size, void *p);
   static void delete_CMViewer(void *p);
   static void deleteArray_CMViewer(void *p);
   static void destruct_CMViewer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMViewer*)
   {
      ::CMViewer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMViewer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMViewer", ::CMViewer::Class_Version(), "CMViewer.h", 30,
                  typeid(::CMViewer), DefineBehavior(ptr, ptr),
                  &::CMViewer::Dictionary, isa_proxy, 0,
                  sizeof(::CMViewer) );
      instance.SetNew(&new_CMViewer);
      instance.SetNewArray(&newArray_CMViewer);
      instance.SetDelete(&delete_CMViewer);
      instance.SetDeleteArray(&deleteArray_CMViewer);
      instance.SetDestructor(&destruct_CMViewer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMViewer*)
   {
      return GenerateInitInstanceLocal((::CMViewer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMViewer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMHist_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CMHist(void *p = 0);
   static void *newArray_CMHist(Long_t size, void *p);
   static void delete_CMHist(void *p);
   static void deleteArray_CMHist(void *p);
   static void destruct_CMHist(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMHist*)
   {
      ::CMHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMHist", ::CMHist::Class_Version(), "CMHist.h", 29,
                  typeid(::CMHist), DefineBehavior(ptr, ptr),
                  &::CMHist::Dictionary, isa_proxy, 0,
                  sizeof(::CMHist) );
      instance.SetNew(&new_CMHist);
      instance.SetNewArray(&newArray_CMHist);
      instance.SetDelete(&delete_CMHist);
      instance.SetDeleteArray(&deleteArray_CMHist);
      instance.SetDestructor(&destruct_CMHist);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMHist*)
   {
      return GenerateInitInstanceLocal((::CMHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMSpars_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CMSpars(void *p = 0);
   static void *newArray_CMSpars(Long_t size, void *p);
   static void delete_CMSpars(void *p);
   static void deleteArray_CMSpars(void *p);
   static void destruct_CMSpars(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMSpars*)
   {
      ::CMSpars *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMSpars >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMSpars", ::CMSpars::Class_Version(), "CMSpars.h", 27,
                  typeid(::CMSpars), DefineBehavior(ptr, ptr),
                  &::CMSpars::Dictionary, isa_proxy, 0,
                  sizeof(::CMSpars) );
      instance.SetNew(&new_CMSpars);
      instance.SetNewArray(&newArray_CMSpars);
      instance.SetDelete(&delete_CMSpars);
      instance.SetDeleteArray(&deleteArray_CMSpars);
      instance.SetDestructor(&destruct_CMSpars);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMSpars*)
   {
      return GenerateInitInstanceLocal((::CMSpars*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMSpars*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CMTestSetup_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CMTestSetup(void *p = 0);
   static void *newArray_CMTestSetup(Long_t size, void *p);
   static void delete_CMTestSetup(void *p);
   static void deleteArray_CMTestSetup(void *p);
   static void destruct_CMTestSetup(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CMTestSetup*)
   {
      ::CMTestSetup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CMTestSetup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CMTestSetup", ::CMTestSetup::Class_Version(), "CMTestSetup.h", 110,
                  typeid(::CMTestSetup), DefineBehavior(ptr, ptr),
                  &::CMTestSetup::Dictionary, isa_proxy, 0,
                  sizeof(::CMTestSetup) );
      instance.SetNew(&new_CMTestSetup);
      instance.SetNewArray(&newArray_CMTestSetup);
      instance.SetDelete(&delete_CMTestSetup);
      instance.SetDeleteArray(&deleteArray_CMTestSetup);
      instance.SetDestructor(&destruct_CMTestSetup);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CMTestSetup*)
   {
      return GenerateInitInstanceLocal((::CMTestSetup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CMTestSetup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *CMVirtualDisplay::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMVirtualDisplay::Class_Name()
{
   return "CMVirtualDisplay";
}

//______________________________________________________________________________
const char *CMVirtualDisplay::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMVirtualDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMVirtualDisplay::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMVirtualDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMVirtualDisplay::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMVirtualDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMVirtualDisplay::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMVirtualDisplay*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMDaq::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMDaq::Class_Name()
{
   return "CMDaq";
}

//______________________________________________________________________________
const char *CMDaq::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMDaq*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMDaq::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMDaq*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMDaq::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMDaq*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMDaq::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMDaq*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMEpics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMEpics::Class_Name()
{
   return "CMEpics";
}

//______________________________________________________________________________
const char *CMEpics::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMEpics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMEpics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMEpics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMEpics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMEpics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMEpics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMEpics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMDisplay::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMDisplay::Class_Name()
{
   return "CMDisplay";
}

//______________________________________________________________________________
const char *CMDisplay::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMDisplay::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMDisplay::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMDisplay::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMDisplay*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMClient::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMClient::Class_Name()
{
   return "CMClient";
}

//______________________________________________________________________________
const char *CMClient::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMClient*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMClient::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMClient*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMClient::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMClient*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMClient::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMClient*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMPolar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMPolar::Class_Name()
{
   return "CMPolar";
}

//______________________________________________________________________________
const char *CMPolar::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMPolar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMPolar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMPolar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMPolar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMPolar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMPolar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMPolar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMTline::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMTline::Class_Name()
{
   return "CMTline";
}

//______________________________________________________________________________
const char *CMTline::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMTline*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMTline::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMTline*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMTline::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMTline*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMTline::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMTline*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMHbook::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMHbook::Class_Name()
{
   return "CMHbook";
}

//______________________________________________________________________________
const char *CMHbook::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMHbook*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMHbook::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMHbook*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMHbook::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMHbook*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMHbook::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMHbook*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TestMainFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TestMainFrame::Class_Name()
{
   return "TestMainFrame";
}

//______________________________________________________________________________
const char *TestMainFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TestMainFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TestMainFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TestMainFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TestMainFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TestMainFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TestMainFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TestMainFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMViewer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMViewer::Class_Name()
{
   return "CMViewer";
}

//______________________________________________________________________________
const char *CMViewer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMViewer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMViewer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMViewer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMViewer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMViewer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMViewer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMViewer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMHist::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMHist::Class_Name()
{
   return "CMHist";
}

//______________________________________________________________________________
const char *CMHist::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMHist::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMHist::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMHist::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMHist*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMSpars::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMSpars::Class_Name()
{
   return "CMSpars";
}

//______________________________________________________________________________
const char *CMSpars::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMSpars*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMSpars::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMSpars*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMSpars::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMSpars*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMSpars::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMSpars*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CMTestSetup::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CMTestSetup::Class_Name()
{
   return "CMTestSetup";
}

//______________________________________________________________________________
const char *CMTestSetup::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMTestSetup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CMTestSetup::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CMTestSetup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CMTestSetup::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMTestSetup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CMTestSetup::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CMTestSetup*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void CMDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMDisplay.

   CMVirtualDisplay::Streamer(R__b);
}

//______________________________________________________________________________
void CMDisplay::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMDisplay.
      TClass *R__cl = ::CMDisplay::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "dtext[10]", dtext);
      R__insp.Inspect(R__cl, R__parent, "*diamond", &diamond);
      R__insp.Inspect(R__cl, R__parent, "m_DrawAllViews", &m_DrawAllViews);
      R__insp.Inspect(R__cl, R__parent, "m_DrawParticles", &m_DrawParticles);
      R__insp.Inspect(R__cl, R__parent, "m_DrawClusters", &m_DrawClusters);
      R__insp.Inspect(R__cl, R__parent, "m_PTcut", &m_PTcut);
      R__insp.Inspect(R__cl, R__parent, "m_PTcutEGMUNU", &m_PTcutEGMUNU);
      R__insp.Inspect(R__cl, R__parent, "m_Rin", &m_Rin);
      R__insp.Inspect(R__cl, R__parent, "m_Rout", &m_Rout);
      R__insp.Inspect(R__cl, R__parent, "m_Zin", &m_Zin);
      R__insp.Inspect(R__cl, R__parent, "m_Zout", &m_Zout);
      R__insp.Inspect(R__cl, R__parent, "m_Theta", &m_Theta);
      R__insp.Inspect(R__cl, R__parent, "m_Phi", &m_Phi);
      R__insp.Inspect(R__cl, R__parent, "*m_Canvas", &m_Canvas);
      R__insp.Inspect(R__cl, R__parent, "*m_StatPad", &m_StatPad);
      R__insp.Inspect(R__cl, R__parent, "*m_Buttons", &m_Buttons);
      R__insp.Inspect(R__cl, R__parent, "*m_Pad", &m_Pad);
      R__insp.Inspect(R__cl, R__parent, "*m_Brik", &m_Brik);
      R__insp.Inspect(R__cl, R__parent, "*m_Tubin", &m_Tubin);
      R__insp.Inspect(R__cl, R__parent, "*m_Tubout", &m_Tubout);
      R__insp.Inspect(R__cl, R__parent, "*m_Nodin", &m_Nodin);
      R__insp.Inspect(R__cl, R__parent, "*m_Nodsda", &m_Nodsda);
      R__insp.Inspect(R__cl, R__parent, "*m_Fruits", &m_Fruits);
      R__insp.Inspect(R__cl, R__parent, "*m_Daq", &m_Daq);
      R__insp.Inspect(R__cl, R__parent, "*m_Epics", &m_Epics);
      R__insp.Inspect(R__cl, R__parent, "*m_Display", &m_Display);
      CMVirtualDisplay::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CMDisplay(void *p) {
      return  p ? new(p) ::CMDisplay : new ::CMDisplay;
   }
   static void *newArray_CMDisplay(Long_t nElements, void *p) {
      return p ? new(p) ::CMDisplay[nElements] : new ::CMDisplay[nElements];
   }
   // Wrapper around operator delete
   static void delete_CMDisplay(void *p) {
      delete ((::CMDisplay*)p);
   }
   static void deleteArray_CMDisplay(void *p) {
      delete [] ((::CMDisplay*)p);
   }
   static void destruct_CMDisplay(void *p) {
      typedef ::CMDisplay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMDisplay

//______________________________________________________________________________
void CMVirtualDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMVirtualDisplay.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void CMVirtualDisplay::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMVirtualDisplay.
      TClass *R__cl = ::CMVirtualDisplay::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_CMVirtualDisplay(void *p) {
      delete ((::CMVirtualDisplay*)p);
   }
   static void deleteArray_CMVirtualDisplay(void *p) {
      delete [] ((::CMVirtualDisplay*)p);
   }
   static void destruct_CMVirtualDisplay(void *p) {
      typedef ::CMVirtualDisplay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMVirtualDisplay

//______________________________________________________________________________
void CMDaq::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMDaq.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void CMDaq::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMDaq.
      TClass *R__cl = ::CMDaq::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "downloaded", &downloaded);
      R__insp.Inspect(R__cl, R__parent, "prestarted", &prestarted);
      R__insp.Inspect(R__cl, R__parent, "active", &active);
      R__insp.Inspect(R__cl, R__parent, "ended", &ended);
      R__insp.Inspect(R__cl, R__parent, "filename[1024]", filename);
      R__insp.Inspect(R__cl, R__parent, "*m_Display", &m_Display);
      R__insp.Inspect(R__cl, R__parent, "fLoop", &fLoop);
      R__insp.Inspect(R__cl, R__parent, "nev", &nev);
      R__insp.Inspect(R__cl, R__parent, "newdstfile", &newdstfile);
      R__insp.Inspect(R__cl, R__parent, "forcestop", &forcestop);
      R__insp.Inspect(R__cl, R__parent, "*m_Pad", &m_Pad);
      R__insp.Inspect(R__cl, R__parent, "nclient", &nclient);
      R__insp.Inspect(R__cl, R__parent, "clientActive[2]", clientActive);
      R__insp.Inspect(R__cl, R__parent, "*m_Client[2]", &m_Client);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_CMDaq(void *p) {
      delete ((::CMDaq*)p);
   }
   static void deleteArray_CMDaq(void *p) {
      delete [] ((::CMDaq*)p);
   }
   static void destruct_CMDaq(void *p) {
      typedef ::CMDaq current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMDaq

//______________________________________________________________________________
void CMClient::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMClient.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void CMClient::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMClient.
      TClass *R__cl = ::CMClient::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*m_Pad", &m_Pad);
      R__insp.Inspect(R__cl, R__parent, "*m_StatPad", &m_StatPad);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CMClient(void *p) {
      return  p ? new(p) ::CMClient : new ::CMClient;
   }
   static void *newArray_CMClient(Long_t nElements, void *p) {
      return p ? new(p) ::CMClient[nElements] : new ::CMClient[nElements];
   }
   // Wrapper around operator delete
   static void delete_CMClient(void *p) {
      delete ((::CMClient*)p);
   }
   static void deleteArray_CMClient(void *p) {
      delete [] ((::CMClient*)p);
   }
   static void destruct_CMClient(void *p) {
      typedef ::CMClient current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMClient

//______________________________________________________________________________
void CMEpics::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMEpics.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void CMEpics::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMEpics.
      TClass *R__cl = ::CMEpics::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "nev", &nev);
      R__insp.Inspect(R__cl, R__parent, "*m_Pad", &m_Pad);
      R__insp.Inspect(R__cl, R__parent, "*m_Epics", &m_Epics);
      R__insp.Inspect(R__cl, R__parent, "*tmpfile", &tmpfile);
      R__insp.Inspect(R__cl, R__parent, "*m_PMTL", &m_PMTL);
      R__insp.Inspect(R__cl, R__parent, "*m_PMTR", &m_PMTR);
      R__insp.Inspect(R__cl, R__parent, "*m_QUAD1", &m_QUAD1);
      R__insp.Inspect(R__cl, R__parent, "*m_QUAD2", &m_QUAD2);
      R__insp.Inspect(R__cl, R__parent, "*m_MAGN", &m_MAGN);
      R__insp.Inspect(R__cl, R__parent, "*m_TARGL", &m_TARGL);
      R__insp.Inspect(R__cl, R__parent, "*m_TARGR", &m_TARGR);
      R__insp.Inspect(R__cl, R__parent, "*m_ALL", &m_ALL);
      R__insp.Inspect(R__cl, R__parent, "*tt[7]", &tt);
      R__insp.Inspect(R__cl, R__parent, "pmtl_nom", &pmtl_nom);
      R__insp.Inspect(R__cl, R__parent, "pmtl_mes", &pmtl_mes);
      R__insp.Inspect(R__cl, R__parent, "pmtl_dev", &pmtl_dev);
      R__insp.Inspect(R__cl, R__parent, "pmtr_nom", &pmtr_nom);
      R__insp.Inspect(R__cl, R__parent, "pmtr_mes", &pmtr_mes);
      R__insp.Inspect(R__cl, R__parent, "pmtr_dev", &pmtr_dev);
      R__insp.Inspect(R__cl, R__parent, "beam_energy", &beam_energy);
      R__insp.Inspect(R__cl, R__parent, "quad1_nom", &quad1_nom);
      R__insp.Inspect(R__cl, R__parent, "quad1_mes", &quad1_mes);
      R__insp.Inspect(R__cl, R__parent, "quad1_dev", &quad1_dev);
      R__insp.Inspect(R__cl, R__parent, "quad2_nom", &quad2_nom);
      R__insp.Inspect(R__cl, R__parent, "quad2_mes", &quad2_mes);
      R__insp.Inspect(R__cl, R__parent, "quad2_dev", &quad2_dev);
      R__insp.Inspect(R__cl, R__parent, "magn_nom", &magn_nom);
      R__insp.Inspect(R__cl, R__parent, "magn_mes", &magn_mes);
      R__insp.Inspect(R__cl, R__parent, "magn_dev", &magn_dev);
      R__insp.Inspect(R__cl, R__parent, "targl_nom", &targl_nom);
      R__insp.Inspect(R__cl, R__parent, "targl_mes", &targl_mes);
      R__insp.Inspect(R__cl, R__parent, "targl_dev", &targl_dev);
      R__insp.Inspect(R__cl, R__parent, "targr_nom", &targr_nom);
      R__insp.Inspect(R__cl, R__parent, "targr_mes", &targr_mes);
      R__insp.Inspect(R__cl, R__parent, "targr_dev", &targr_dev);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CMEpics(void *p) {
      return  p ? new(p) ::CMEpics : new ::CMEpics;
   }
   static void *newArray_CMEpics(Long_t nElements, void *p) {
      return p ? new(p) ::CMEpics[nElements] : new ::CMEpics[nElements];
   }
   // Wrapper around operator delete
   static void delete_CMEpics(void *p) {
      delete ((::CMEpics*)p);
   }
   static void deleteArray_CMEpics(void *p) {
      delete [] ((::CMEpics*)p);
   }
   static void destruct_CMEpics(void *p) {
      typedef ::CMEpics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMEpics

//______________________________________________________________________________
void CMPolar::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMPolar.

   CMClient::Streamer(R__b);
}

//______________________________________________________________________________
void CMPolar::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMPolar.
      TClass *R__cl = ::CMPolar::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "nev", &nev);
      R__insp.Inspect(R__cl, R__parent, "nevent_stat", &nevent_stat);
      R__insp.Inspect(R__cl, R__parent, "*pad1", &pad1);
      R__insp.Inspect(R__cl, R__parent, "*pad2", &pad2);
      R__insp.Inspect(R__cl, R__parent, "*pad3", &pad3);
      R__insp.Inspect(R__cl, R__parent, "*pad4", &pad4);
      R__insp.Inspect(R__cl, R__parent, "*pad5", &pad5);
      R__insp.Inspect(R__cl, R__parent, "*pad6", &pad6);
      R__insp.Inspect(R__cl, R__parent, "*pad7", &pad7);
      R__insp.Inspect(R__cl, R__parent, "*pad8", &pad8);
      R__insp.Inspect(R__cl, R__parent, "*tdc1", &tdc1);
      R__insp.Inspect(R__cl, R__parent, "*adc1", &adc1);
      R__insp.Inspect(R__cl, R__parent, "*tdc2", &tdc2);
      R__insp.Inspect(R__cl, R__parent, "*adc2", &adc2);
      R__insp.Inspect(R__cl, R__parent, "*adc3", &adc3);
      R__insp.Inspect(R__cl, R__parent, "*adc4", &adc4);
      R__insp.Inspect(R__cl, R__parent, "*tdc1adc1", &tdc1adc1);
      R__insp.Inspect(R__cl, R__parent, "*tdc2adc2", &tdc2adc2);
      R__insp.Inspect(R__cl, R__parent, "*adc1adc2", &adc1adc2);
      R__insp.Inspect(R__cl, R__parent, "*scal[12]", &scal);
      R__insp.Inspect(R__cl, R__parent, "adc[32]", adc);
      R__insp.Inspect(R__cl, R__parent, "tdc[32]", tdc);
      R__insp.Inspect(R__cl, R__parent, "old_asym", &old_asym);
      R__insp.Inspect(R__cl, R__parent, "scaler[32]", scaler);
      R__insp.Inspect(R__cl, R__parent, "oldscaler[32]", oldscaler);
      R__insp.Inspect(R__cl, R__parent, "s_1[4][10000]", s_1);
      R__insp.Inspect(R__cl, R__parent, "s_2[4][10000]", s_2);
      R__insp.Inspect(R__cl, R__parent, "scaler_h[32]", scaler_h);
      R__insp.Inspect(R__cl, R__parent, "scaler_hbar[32]", scaler_hbar);
      R__insp.Inspect(R__cl, R__parent, "HLSscaler[32][32]", HLSscaler);
      R__insp.Inspect(R__cl, R__parent, "overflow[32]", overflow);
      R__insp.Inspect(R__cl, R__parent, "scaler2[4]", scaler2);
      CMClient::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CMPolar(void *p) {
      return  p ? new(p) ::CMPolar : new ::CMPolar;
   }
   static void *newArray_CMPolar(Long_t nElements, void *p) {
      return p ? new(p) ::CMPolar[nElements] : new ::CMPolar[nElements];
   }
   // Wrapper around operator delete
   static void delete_CMPolar(void *p) {
      delete ((::CMPolar*)p);
   }
   static void deleteArray_CMPolar(void *p) {
      delete [] ((::CMPolar*)p);
   }
   static void destruct_CMPolar(void *p) {
      typedef ::CMPolar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMPolar

//______________________________________________________________________________
void CMHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMHist.

   CMClient::Streamer(R__b);
}

//______________________________________________________________________________
void CMHist::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMHist.
      TClass *R__cl = ::CMHist::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "ntimeline", &ntimeline);
      R__insp.Inspect(R__cl, R__parent, "*viewer", &viewer);
      R__insp.Inspect(R__cl, R__parent, "nview", &nview);
      R__insp.Inspect(R__cl, R__parent, "iview", &iview);
      R__insp.Inspect(R__cl, R__parent, "filename[1000]", filename);
      R__insp.Inspect(R__cl, R__parent, "callprlib", &callprlib);
      R__insp.Inspect(R__cl, R__parent, "calltrlib", &calltrlib);
      R__insp.Inspect(R__cl, R__parent, "downloaded", &downloaded);
      R__insp.Inspect(R__cl, R__parent, "prestarted", &prestarted);
      R__insp.Inspect(R__cl, R__parent, "*fMenu", &fMenu);
      R__insp.Inspect(R__cl, R__parent, "*fDialog", &fDialog);
      R__insp.Inspect(R__cl, R__parent, "*fMsg", &fMsg);
      R__insp.Inspect(R__cl, R__parent, "*fSlider", &fSlider);
      R__insp.Inspect(R__cl, R__parent, "nevents", &nevents);
      R__insp.Inspect(R__cl, R__parent, "nevents1", &nevents1);
      R__insp.Inspect(R__cl, R__parent, "time0", &time0);
      R__insp.Inspect(R__cl, R__parent, "rate", &rate);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc1[16]", &m_Arc1);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc11", &m_Arc11);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc12", &m_Arc12);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc13", &m_Arc13);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc14", &m_Arc14);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc2", &m_Arc2);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc3", &m_Arc3);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc4", &m_Arc4);
      R__insp.Inspect(R__cl, R__parent, "*hbook", &hbook);
      CMClient::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CMHist(void *p) {
      return  p ? new(p) ::CMHist : new ::CMHist;
   }
   static void *newArray_CMHist(Long_t nElements, void *p) {
      return p ? new(p) ::CMHist[nElements] : new ::CMHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_CMHist(void *p) {
      delete ((::CMHist*)p);
   }
   static void deleteArray_CMHist(void *p) {
      delete [] ((::CMHist*)p);
   }
   static void destruct_CMHist(void *p) {
      typedef ::CMHist current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMHist

//______________________________________________________________________________
void CMHbook::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMHbook.

   ::Error("CMHbook::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void CMHbook::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMHbook.
      TClass *R__cl = ::CMHbook::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "histi[2000]", histi);
      R__insp.Inspect(R__cl, R__parent, "histf[2000]", histf);
      R__insp.Inspect(R__cl, R__parent, "*tline[2000]", &tline);
      R__insp.Inspect(R__cl, R__parent, "tlinebin[2000][10]", tlinebin);
      R__insp.Inspect(R__cl, R__parent, "tlinenormbin[2000][10]", tlinenormbin);
      R__insp.Inspect(R__cl, R__parent, "*pads[2000]", &pads);
      R__insp.Inspect(R__cl, R__parent, "prompt[2000]", prompt);
      R__insp.Inspect(R__cl, R__parent, "*hist1[2000]", &hist1);
      R__insp.Inspect(R__cl, R__parent, "*hist2[2000]", &hist2);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CMHbook(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CMHbook : new ::CMHbook;
   }
   static void *newArray_CMHbook(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CMHbook[nElements] : new ::CMHbook[nElements];
   }
   // Wrapper around operator delete
   static void delete_CMHbook(void *p) {
      delete ((::CMHbook*)p);
   }
   static void deleteArray_CMHbook(void *p) {
      delete [] ((::CMHbook*)p);
   }
   static void destruct_CMHbook(void *p) {
      typedef ::CMHbook current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMHbook

//______________________________________________________________________________
void CMSpars::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMSpars.

   CMClient::Streamer(R__b);
}

//______________________________________________________________________________
void CMSpars::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMSpars.
      TClass *R__cl = ::CMSpars::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*hbook", &hbook);
      R__insp.Inspect(R__cl, R__parent, "*viewer", &viewer);
      R__insp.Inspect(R__cl, R__parent, "filename[1000]", filename);
      R__insp.Inspect(R__cl, R__parent, "callprlib", &callprlib);
      R__insp.Inspect(R__cl, R__parent, "calltrlib", &calltrlib);
      R__insp.Inspect(R__cl, R__parent, "downloaded", &downloaded);
      R__insp.Inspect(R__cl, R__parent, "prestarted", &prestarted);
      R__insp.Inspect(R__cl, R__parent, "nevents", &nevents);
      R__insp.Inspect(R__cl, R__parent, "nevents1", &nevents1);
      R__insp.Inspect(R__cl, R__parent, "time0", &time0);
      R__insp.Inspect(R__cl, R__parent, "rate", &rate);
      R__insp.Inspect(R__cl, R__parent, "nview", &nview);
      R__insp.Inspect(R__cl, R__parent, "iview", &iview);
      R__insp.Inspect(R__cl, R__parent, "nmap", &nmap);
      R__insp.Inspect(R__cl, R__parent, "imap", &imap);
      R__insp.Inspect(R__cl, R__parent, "maptype[100][10]", maptype);
      R__insp.Inspect(R__cl, R__parent, "mapname[100][100]", mapname);
      R__insp.Inspect(R__cl, R__parent, "setname[100][100]", setname);
      R__insp.Inspect(R__cl, R__parent, "subsetname[100][100]", subsetname);
      R__insp.Inspect(R__cl, R__parent, "dim[100]", dim);
      R__insp.Inspect(R__cl, R__parent, "histid[100]", histid);
      R__insp.Inspect(R__cl, R__parent, "nbin[100]", nbin);
      R__insp.Inspect(R__cl, R__parent, "xmin[100]", xmin);
      R__insp.Inspect(R__cl, R__parent, "xmax[100]", xmax);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc11", &m_Arc11);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc12", &m_Arc12);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc13", &m_Arc13);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc14", &m_Arc14);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc2", &m_Arc2);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc3", &m_Arc3);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc4", &m_Arc4);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc5", &m_Arc5);
      R__insp.Inspect(R__cl, R__parent, "*fDialog1", &fDialog1);
      R__insp.Inspect(R__cl, R__parent, "*fDialog2", &fDialog2);
      R__insp.Inspect(R__cl, R__parent, "cratename[256]", cratename);
      CMClient::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CMSpars(void *p) {
      return  p ? new(p) ::CMSpars : new ::CMSpars;
   }
   static void *newArray_CMSpars(Long_t nElements, void *p) {
      return p ? new(p) ::CMSpars[nElements] : new ::CMSpars[nElements];
   }
   // Wrapper around operator delete
   static void delete_CMSpars(void *p) {
      delete ((::CMSpars*)p);
   }
   static void deleteArray_CMSpars(void *p) {
      delete [] ((::CMSpars*)p);
   }
   static void destruct_CMSpars(void *p) {
      typedef ::CMSpars current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMSpars

//______________________________________________________________________________
void CMTestSetup::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMTestSetup.

   CMClient::Streamer(R__b);
}

//______________________________________________________________________________
void CMTestSetup::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMTestSetup.
      TClass *R__cl = ::CMTestSetup::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*hbook", &hbook);
      R__insp.Inspect(R__cl, R__parent, "ntimeline", &ntimeline);
      R__insp.Inspect(R__cl, R__parent, "*viewer", &viewer);
      R__insp.Inspect(R__cl, R__parent, "nview", &nview);
      R__insp.Inspect(R__cl, R__parent, "iview", &iview);
      R__insp.Inspect(R__cl, R__parent, "filename[1000]", filename);
      R__insp.Inspect(R__cl, R__parent, "call1", &call1);
      R__insp.Inspect(R__cl, R__parent, "call2", &call2);
      R__insp.Inspect(R__cl, R__parent, "downloaded", &downloaded);
      R__insp.Inspect(R__cl, R__parent, "prestarted", &prestarted);
      R__insp.Inspect(R__cl, R__parent, "active", &active);
      R__insp.Inspect(R__cl, R__parent, "ended", &ended);
      R__insp.Inspect(R__cl, R__parent, "*fDialog", &fDialog);
      R__insp.Inspect(R__cl, R__parent, "slot", &slot);
      R__insp.Inspect(R__cl, R__parent, "nevents", &nevents);
      R__insp.Inspect(R__cl, R__parent, "nevents1", &nevents1);
      R__insp.Inspect(R__cl, R__parent, "time0", &time0);
      R__insp.Inspect(R__cl, R__parent, "rate", &rate);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc1[16]", &m_Arc1);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc11", &m_Arc11);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc12", &m_Arc12);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc13", &m_Arc13);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc14", &m_Arc14);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc2", &m_Arc2);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc3", &m_Arc3);
      R__insp.Inspect(R__cl, R__parent, "*m_Arc4", &m_Arc4);
      CMClient::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CMTestSetup(void *p) {
      return  p ? new(p) ::CMTestSetup : new ::CMTestSetup;
   }
   static void *newArray_CMTestSetup(Long_t nElements, void *p) {
      return p ? new(p) ::CMTestSetup[nElements] : new ::CMTestSetup[nElements];
   }
   // Wrapper around operator delete
   static void delete_CMTestSetup(void *p) {
      delete ((::CMTestSetup*)p);
   }
   static void deleteArray_CMTestSetup(void *p) {
      delete [] ((::CMTestSetup*)p);
   }
   static void destruct_CMTestSetup(void *p) {
      typedef ::CMTestSetup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMTestSetup

namespace ROOT {
   // Wrapper around operator delete
   static void delete_CMInputDialog(void *p) {
      delete ((::CMInputDialog*)p);
   }
   static void deleteArray_CMInputDialog(void *p) {
      delete [] ((::CMInputDialog*)p);
   }
   static void destruct_CMInputDialog(void *p) {
      typedef ::CMInputDialog current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMInputDialog

//______________________________________________________________________________
void CMViewer::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMViewer.

   ::Error("CMViewer::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void CMViewer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMViewer.
      TClass *R__cl = ::CMViewer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "nview", &nview);
      R__insp.Inspect(R__cl, R__parent, "nh[16]", nh);
      R__insp.Inspect(R__cl, R__parent, "nv[16]", nv);
      R__insp.Inspect(R__cl, R__parent, "ids[16][6][6]", ids);
      R__insp.Inspect(R__cl, R__parent, "key[16][6][6]", key);
      R__insp.Inspect(R__cl, R__parent, "*pad[16][6][6]", &pad);
      R__insp.Inspect(R__cl, R__parent, "filename[1000]", filename);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CMViewer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CMViewer : new ::CMViewer;
   }
   static void *newArray_CMViewer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CMViewer[nElements] : new ::CMViewer[nElements];
   }
   // Wrapper around operator delete
   static void delete_CMViewer(void *p) {
      delete ((::CMViewer*)p);
   }
   static void deleteArray_CMViewer(void *p) {
      delete [] ((::CMViewer*)p);
   }
   static void destruct_CMViewer(void *p) {
      typedef ::CMViewer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMViewer

//______________________________________________________________________________
void CMTline::Streamer(TBuffer &R__b)
{
   // Stream an object of class CMTline.

   ::Error("CMTline::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void CMTline::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CMTline.
      TClass *R__cl = ::CMTline::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "grname[1000]", grname);
      R__insp.Inspect(R__cl, R__parent, "*pad", &pad);
      R__insp.Inspect(R__cl, R__parent, "ngraph", &ngraph);
      R__insp.Inspect(R__cl, R__parent, "igraph", &igraph);
      R__insp.Inspect(R__cl, R__parent, "*hist", &hist);
      R__insp.Inspect(R__cl, R__parent, "*Pline[10]", &Pline);
      R__insp.Inspect(R__cl, R__parent, "colortable[10]", colortable);
      R__insp.Inspect(R__cl, R__parent, "grminalarm[10]", grminalarm);
      R__insp.Inspect(R__cl, R__parent, "grmaxalarm[10]", grmaxalarm);
      R__insp.Inspect(R__cl, R__parent, "gralarmbeep[10]", gralarmbeep);
      R__insp.Inspect(R__cl, R__parent, "npoints[10]", npoints);
      R__insp.Inspect(R__cl, R__parent, "times[10][7200]", times);
      R__insp.Inspect(R__cl, R__parent, "graph[10][7200]", graph);
      R__insp.Inspect(R__cl, R__parent, "current_time", &current_time);
      R__insp.Inspect(R__cl, R__parent, "timeinterval", &timeinterval);
      R__insp.Inspect(R__cl, R__parent, "minlimit", &minlimit);
      R__insp.Inspect(R__cl, R__parent, "maxlimit", &maxlimit);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CMTline(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CMTline : new ::CMTline;
   }
   static void *newArray_CMTline(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CMTline[nElements] : new ::CMTline[nElements];
   }
   // Wrapper around operator delete
   static void delete_CMTline(void *p) {
      delete ((::CMTline*)p);
   }
   static void deleteArray_CMTline(void *p) {
      delete [] ((::CMTline*)p);
   }
   static void destruct_CMTline(void *p) {
      typedef ::CMTline current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CMTline

//______________________________________________________________________________
void TestMainFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TestMainFrame.

   TGMainFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TestMainFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TestMainFrame.
      TClass *R__cl = ::TestMainFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fStatusFrame", &fStatusFrame);
      R__insp.Inspect(R__cl, R__parent, "*fCanvasWindow", &fCanvasWindow);
      R__insp.Inspect(R__cl, R__parent, "*fContainer", &fContainer);
      R__insp.Inspect(R__cl, R__parent, "*fTestText", &fTestText);
      R__insp.Inspect(R__cl, R__parent, "*fTestButton", &fTestButton);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__parent, "*fMenuFile", &fMenuFile);
      R__insp.Inspect(R__cl, R__parent, "*fMenuTest", &fMenuTest);
      R__insp.Inspect(R__cl, R__parent, "*fMenuHelp", &fMenuHelp);
      R__insp.Inspect(R__cl, R__parent, "*fCascadeMenu", &fCascadeMenu);
      R__insp.Inspect(R__cl, R__parent, "*fCascade1Menu", &fCascade1Menu);
      R__insp.Inspect(R__cl, R__parent, "*fCascade2Menu", &fCascade2Menu);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarLayout", &fMenuBarLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarItemLayout", &fMenuBarItemLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarHelpLayout", &fMenuBarHelpLayout);
      TGMainFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TestMainFrame(void *p) {
      delete ((::TestMainFrame*)p);
   }
   static void deleteArray_TestMainFrame(void *p) {
      delete [] ((::TestMainFrame*)p);
   }
   static void destruct_TestMainFrame(void *p) {
      typedef ::TestMainFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TestMainFrame

/********************************************************
* CMCint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableCMCint();

extern "C" void G__set_cpp_environmentCMCint() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("CMDisplay.h");
  G__add_compiledheader("CMVirtualDisplay.h");
  G__add_compiledheader("CMDaq.h");
  G__add_compiledheader("CMEpics.h");
  G__add_compiledheader("CMClient.h");
  G__add_compiledheader("CMPolar.h");
  G__add_compiledheader("CMHist.h");
  G__add_compiledheader("CMCalibMenu.h");
  G__add_compiledheader("CMSpars.h");
  G__add_compiledheader("CMSparsMenu.h");
  G__add_compiledheader("CMSparsMenuCrate.h");
  G__add_compiledheader("CMMenu.h");
  G__add_compiledheader("CMHbook.h");
  G__add_compiledheader("CMViewer.h");
  G__add_compiledheader("CMTline.h");
  G__add_compiledheader("CMTestSetup.h");
  G__add_compiledheader("CMInputDialog.h");
  G__add_compiledheader("uthbook.h");
  G__add_compiledheader("uthbook_fun.h");
  G__cpp_reset_tagtableCMCint();
}
#include <new>
extern "C" int G__cpp_dllrevCMCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CMVirtualDisplay */
static int G__CMCint_180_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CMVirtualDisplay*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CMVirtualDisplay*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMVirtualDisplay*) G__getstructoffset())->DisplayButtons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMVirtualDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMVirtualDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMVirtualDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMVirtualDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMVirtualDisplay*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMVirtualDisplay*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMVirtualDisplay*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMVirtualDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMVirtualDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMVirtualDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMVirtualDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_180_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMVirtualDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMVirtualDisplay G__TCMVirtualDisplay;
static int G__CMCint_180_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMVirtualDisplay*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMVirtualDisplay*) (soff+(sizeof(CMVirtualDisplay)*i)))->~G__TCMVirtualDisplay();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMVirtualDisplay*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMVirtualDisplay*) (soff))->~G__TCMVirtualDisplay();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_180_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMVirtualDisplay* dest = (CMVirtualDisplay*) G__getstructoffset();
   *dest = *(CMVirtualDisplay*) libp->para[0].ref;
   const CMVirtualDisplay& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMDaq */
static int G__CMCint_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMDaq* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CMDaq((Option_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) CMDaq((Option_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMDaq);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->Download();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMDaq*) G__getstructoffset())->Prestart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMDaq*) G__getstructoffset())->Pause());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMDaq*) G__getstructoffset())->Resume());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMDaq*) G__getstructoffset())->Start());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->Stop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->SetFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->GetFile((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->DstOpen();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->DstClose();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMDaq*) G__getstructoffset())->NewEvent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMDaq*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CMDaq*) G__getstructoffset())->ChangeClient((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CMDaq*) G__getstructoffset())->ChangeClient();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CMDaq*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CMDaq*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->Loop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMDaq*) G__getstructoffset())->InitET());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CMDaq*) G__getstructoffset())->AddClient((CMClient*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CMDaq*) G__getstructoffset())->AddClient();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CMDaq*) G__getstructoffset())->RemoveClient((CMClient*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CMDaq*) G__getstructoffset())->RemoveClient();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CMDaq*) G__getstructoffset())->Display());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMDaq::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMDaq::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMDaq::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMDaq::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMDaq*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDaq*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMDaq::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMDaq::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMDaq::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_189_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMDaq::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_189_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMDaq* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMDaq(*(CMDaq*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMDaq);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMDaq G__TCMDaq;
static int G__CMCint_189_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMDaq*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMDaq*) (soff+(sizeof(CMDaq)*i)))->~G__TCMDaq();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMDaq*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMDaq*) (soff))->~G__TCMDaq();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_189_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMDaq* dest = (CMDaq*) G__getstructoffset();
   *dest = *(CMDaq*) libp->para[0].ref;
   const CMDaq& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMEpics */
static int G__CMCint_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMEpics* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMEpics((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CMEpics((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMEpics[n];
       } else {
         p = new((void*) gvp) CMEpics[n];
       }
     } else {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMEpics;
       } else {
         p = new((void*) gvp) CMEpics;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMEpics);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMEpics*) G__getstructoffset())->DisplayStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((CMEpics*) G__getstructoffset())->SetValue((Option_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CMEpics*) G__getstructoffset())->SetValue((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CMEpics*) G__getstructoffset())->SetValue();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((CMEpics*) G__getstructoffset())->GetValue((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((CMEpics*) G__getstructoffset())->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMEpics*) G__getstructoffset())->Status();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMEpics*) G__getstructoffset())->GetQuadCurrents();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMEpics*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CMEpics*) G__getstructoffset())->Epics());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMEpics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMEpics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMEpics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMEpics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMEpics*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMEpics*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMEpics*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMEpics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMEpics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMEpics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMEpics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_190_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMEpics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_190_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMEpics* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMEpics(*(CMEpics*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMEpics);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMEpics G__TCMEpics;
static int G__CMCint_190_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMEpics*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMEpics*) (soff+(sizeof(CMEpics)*i)))->~G__TCMEpics();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMEpics*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMEpics*) (soff))->~G__TCMEpics();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_190_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMEpics* dest = (CMEpics*) G__getstructoffset();
   *dest = *(CMEpics*) libp->para[0].ref;
   const CMEpics& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMInputDialog */
static int G__CMCint_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMInputDialog* p = NULL;
   long gvp = G__getgvp();
   //m: 3
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CMInputDialog(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) CMInputDialog(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMInputDialog);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMInputDialog*) G__getstructoffset())->ProcessMessage((Long_t) G__int(libp->para[0]), (Long_t) G__int(libp->para[1])
, (Long_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMInputDialog* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMInputDialog(*(CMInputDialog*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMInputDialog);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMInputDialog G__TCMInputDialog;
static int G__CMCint_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMInputDialog*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMInputDialog*) (soff+(sizeof(CMInputDialog)*i)))->~G__TCMInputDialog();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMInputDialog*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMInputDialog*) (soff))->~G__TCMInputDialog();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMInputDialog* dest = (CMInputDialog*) G__getstructoffset();
   *dest = *(CMInputDialog*) libp->para[0].ref;
   const CMInputDialog& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMDisplay */
static int G__CMCint_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMDisplay* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMDisplay[n];
     } else {
       p = new((void*) gvp) CMDisplay[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMDisplay;
     } else {
       p = new((void*) gvp) CMDisplay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMDisplay);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMDisplay* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CMDisplay((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) CMDisplay((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMDisplay);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CMDisplay*) G__getstructoffset())->Display());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CMDisplay*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CMDisplay*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->DisplayButtons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->VoltageOn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->VoltageOff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->MoveTarget((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->Download();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->Prestart();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->Pause();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->Resume();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->StartLoop((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->StopLoop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->Event();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->FileSelect();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->ChangeClient();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->SetTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((CMDisplay*) G__getstructoffset())->OpenFileDialog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((CMDisplay*) G__getstructoffset())->SaveFileDialog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((CMDisplay*) G__getstructoffset())->GetStringDialog((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMDisplay*) G__getstructoffset())->GetIntegerDialog((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CMDisplay*) G__getstructoffset())->GetFloatDialog((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CMDisplay*) G__getstructoffset())->AllViews());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CMDisplay*) G__getstructoffset())->DrawClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CMDisplay*) G__getstructoffset())->DrawParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CMDisplay*) G__getstructoffset())->Nodin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CMDisplay*) G__getstructoffset())->Tubin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CMDisplay*) G__getstructoffset())->Nodsda());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CMDisplay*) G__getstructoffset())->Brik());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CMDisplay*) G__getstructoffset())->Pad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CMDisplay*) G__getstructoffset())->StatPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CMDisplay*) G__getstructoffset())->SetDaq((CMDaq*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CMDisplay*) G__getstructoffset())->SetDaq();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CMDisplay*) G__getstructoffset())->SetEpics((CMEpics*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CMDisplay*) G__getstructoffset())->SetEpics();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMDisplay*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_192_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_192_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMDisplay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMDisplay(*(CMDisplay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMDisplay);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMDisplay G__TCMDisplay;
static int G__CMCint_192_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMDisplay*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMDisplay*) (soff+(sizeof(CMDisplay)*i)))->~G__TCMDisplay();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMDisplay*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMDisplay*) (soff))->~G__TCMDisplay();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_192_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMDisplay* dest = (CMDisplay*) G__getstructoffset();
   *dest = *(CMDisplay*) libp->para[0].ref;
   const CMDisplay& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMClient */
static int G__CMCint_542_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMClient* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMClient((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CMClient((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMClient[n];
       } else {
         p = new((void*) gvp) CMClient[n];
       }
     } else {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMClient;
       } else {
         p = new((void*) gvp) CMClient;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMClient);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMClient*) G__getstructoffset())->Download();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMClient*) G__getstructoffset())->Prestart((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMClient*) G__getstructoffset())->Go((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMClient*) G__getstructoffset())->End((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMClient*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMClient*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMClient*) G__getstructoffset())->Event((Int_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMClient::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMClient::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMClient::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMClient::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMClient*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMClient*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMClient*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMClient*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMClient::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMClient::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMClient::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_542_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMClient::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_542_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMClient* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMClient(*(CMClient*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMClient);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMClient G__TCMClient;
static int G__CMCint_542_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMClient*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMClient*) (soff+(sizeof(CMClient)*i)))->~G__TCMClient();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMClient*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMClient*) (soff))->~G__TCMClient();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_542_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMClient* dest = (CMClient*) G__getstructoffset();
   *dest = *(CMClient*) libp->para[0].ref;
   const CMClient& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMPolar */
static int G__CMCint_543_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMPolar* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMPolar((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CMPolar((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMPolar[n];
       } else {
         p = new((void*) gvp) CMPolar[n];
       }
     } else {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMPolar;
       } else {
         p = new((void*) gvp) CMPolar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMPolar);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMPolar*) G__getstructoffset())->Download();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMPolar*) G__getstructoffset())->Prestart((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMPolar*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMPolar*) G__getstructoffset())->Hist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMPolar*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMPolar*) G__getstructoffset())->Event((Int_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMPolar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMPolar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMPolar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMPolar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMPolar*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMPolar*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMPolar*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMPolar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMPolar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMPolar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMPolar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_543_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMPolar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_543_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMPolar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMPolar(*(CMPolar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMPolar);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMPolar G__TCMPolar;
static int G__CMCint_543_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMPolar*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMPolar*) (soff+(sizeof(CMPolar)*i)))->~G__TCMPolar();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMPolar*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMPolar*) (soff))->~G__TCMPolar();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_543_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMPolar* dest = (CMPolar*) G__getstructoffset();
   *dest = *(CMPolar*) libp->para[0].ref;
   const CMPolar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMTline */
static int G__CMCint_547_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMTline* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMTline((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CMTline((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMTline[n];
       } else {
         p = new((void*) gvp) CMTline[n];
       }
     } else {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMTline;
       } else {
         p = new((void*) gvp) CMTline;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMTline);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTline*) G__getstructoffset())->SetPadAddress((TPad*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTline*) G__getstructoffset())->SetTimeInterval((ULong_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMTline*) G__getstructoffset())->AddGraph());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTline*) G__getstructoffset())->SetAlarmBeep((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTline*) G__getstructoffset())->SetAlarmLimits((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTline*) G__getstructoffset())->AddPointToGraph((Int_t) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTline*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMTline::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMTline::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMTline::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMTline::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMTline*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTline*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTline*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTline*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMTline::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMTline::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMTline::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_547_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMTline::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_547_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMTline* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMTline(*(CMTline*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMTline);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMTline G__TCMTline;
static int G__CMCint_547_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMTline*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMTline*) (soff+(sizeof(CMTline)*i)))->~G__TCMTline();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMTline*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMTline*) (soff))->~G__TCMTline();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_547_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMTline* dest = (CMTline*) G__getstructoffset();
   *dest = *(CMTline*) libp->para[0].ref;
   const CMTline& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMHbook */
static int G__CMCint_548_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMHbook* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMHbook[n];
     } else {
       p = new((void*) gvp) CMHbook[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMHbook;
     } else {
       p = new((void*) gvp) CMHbook;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMHbook);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHbook*) G__getstructoffset())->Clean();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHbook*) G__getstructoffset())->SetListOfPads((TPad**) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHbook*) G__getstructoffset())->SetPadAddress((Int_t) G__int(libp->para[0]), (TPad*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHbook*) G__getstructoffset())->SetPromptFlag((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHbook*) G__getstructoffset())->CreateTMLN((Int_t) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHbook*) G__getstructoffset())->SetTMLNPad((Int_t) G__int(libp->para[0]), (TPad*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHbook*) G__getstructoffset())->SetTMLNGraph((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMHbook*) G__getstructoffset())->BosToRoot((Int_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMHbook*) G__getstructoffset())->HisToRoot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMHbook::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMHbook::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMHbook::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMHbook::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMHbook*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHbook*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHbook*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHbook*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMHbook::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMHbook::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMHbook::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_548_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMHbook::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_548_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMHbook* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMHbook(*(CMHbook*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMHbook);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMHbook G__TCMHbook;
static int G__CMCint_548_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMHbook*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMHbook*) (soff+(sizeof(CMHbook)*i)))->~G__TCMHbook();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMHbook*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMHbook*) (soff))->~G__TCMHbook();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_548_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMHbook* dest = (CMHbook*) G__getstructoffset();
   *dest = *(CMHbook*) libp->para[0].ref;
   const CMHbook& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TestMainFrame */
static int G__CMCint_710_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TestMainFrame* p = NULL;
   long gvp = G__getgvp();
   //m: 3
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TestMainFrame(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TestMainFrame(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_TestMainFrame);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TestMainFrame*) G__getstructoffset())->CloseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TestMainFrame*) G__getstructoffset())->ProcessMessage((Long_t) G__int(libp->para[0]), (Long_t) G__int(libp->para[1])
, (Long_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TestMainFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TestMainFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TestMainFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TestMainFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TestMainFrame*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TestMainFrame*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TestMainFrame*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TestMainFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TestMainFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TestMainFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TestMainFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_710_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TestMainFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TestMainFrame G__TTestMainFrame;
static int G__CMCint_710_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TestMainFrame*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TestMainFrame*) (soff+(sizeof(TestMainFrame)*i)))->~G__TTestMainFrame();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TestMainFrame*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TestMainFrame*) (soff))->~G__TTestMainFrame();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMViewer */
static int G__CMCint_714_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMViewer* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMViewer((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CMViewer((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMViewer[n];
       } else {
         p = new((void*) gvp) CMViewer[n];
       }
     } else {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMViewer;
       } else {
         p = new((void*) gvp) CMViewer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMViewer);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMViewer*) G__getstructoffset())->ReadConfig((Option_t*) G__int(libp->para[0]), (CMHbook*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMViewer*) G__getstructoffset())->AddView());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMViewer*) G__getstructoffset())->AddView((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMViewer*) G__getstructoffset())->AddHist((CMHbook*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMViewer*) G__getstructoffset())->AddHist((CMHbook*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMViewer*) G__getstructoffset())->WriteConfig((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMViewer*) G__getstructoffset())->ViewCreate((Int_t) G__int(libp->para[0]), (CMHbook*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMViewer*) G__getstructoffset())->ViewDelete((Int_t) G__int(libp->para[0]), (CMHbook*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMViewer*) G__getstructoffset())->ViewPlot((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CMViewer*) G__getstructoffset())->GetPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMViewer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMViewer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMViewer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMViewer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMViewer*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMViewer*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMViewer*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMViewer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMViewer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMViewer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMViewer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_714_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMViewer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_714_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMViewer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMViewer(*(CMViewer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMViewer);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMViewer G__TCMViewer;
static int G__CMCint_714_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMViewer*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMViewer*) (soff+(sizeof(CMViewer)*i)))->~G__TCMViewer();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMViewer*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMViewer*) (soff))->~G__TCMViewer();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_714_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMViewer* dest = (CMViewer*) G__getstructoffset();
   *dest = *(CMViewer*) libp->para[0].ref;
   const CMViewer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMHist */
static int G__CMCint_715_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMHist* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMHist((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CMHist((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMHist[n];
       } else {
         p = new((void*) gvp) CMHist[n];
       }
     } else {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMHist;
       } else {
         p = new((void*) gvp) CMHist;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMHist);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->Download();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->Prestart((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->Go((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->End((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->Hist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMHist*) G__getstructoffset())->Event((Int_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->Status();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->Buttons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->PreviousView();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->NextView();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->ChangePrlib();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->ChangeTrlib();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->Menu();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMHist*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_715_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_715_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMHist(*(CMHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMHist);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMHist G__TCMHist;
static int G__CMCint_715_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMHist*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMHist*) (soff+(sizeof(CMHist)*i)))->~G__TCMHist();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMHist*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMHist*) (soff))->~G__TCMHist();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_715_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMHist* dest = (CMHist*) G__getstructoffset();
   *dest = *(CMHist*) libp->para[0].ref;
   const CMHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMSpars */
static int G__CMCint_719_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMSpars* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMSpars((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CMSpars((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMSpars[n];
       } else {
         p = new((void*) gvp) CMSpars[n];
       }
     } else {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMSpars;
       } else {
         p = new((void*) gvp) CMSpars;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMSpars);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->Download();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->Prestart((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->Go((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->End((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->Hist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMSpars*) G__getstructoffset())->Event((Int_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->Buttons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->PreviousView();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->NextView();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->Status();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((CMSpars*) G__getstructoffset())->ReadConfig((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((CMSpars*) G__getstructoffset())->ReadConfig());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CMSpars*) G__getstructoffset())->WriteConfig((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CMSpars*) G__getstructoffset())->WriteConfig();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->ReadCalibration();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->WriteCalibration();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->HistView();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->MenuCrate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->Menu();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMSpars::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMSpars::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMSpars::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMSpars::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMSpars*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMSpars*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMSpars::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMSpars::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMSpars::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_719_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMSpars::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_719_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMSpars* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMSpars(*(CMSpars*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMSpars);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMSpars G__TCMSpars;
static int G__CMCint_719_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMSpars*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMSpars*) (soff+(sizeof(CMSpars)*i)))->~G__TCMSpars();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMSpars*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMSpars*) (soff))->~G__TCMSpars();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_719_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMSpars* dest = (CMSpars*) G__getstructoffset();
   *dest = *(CMSpars*) libp->para[0].ref;
   const CMSpars& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CMTestSetup */
static int G__CMCint_721_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMTestSetup* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CMTestSetup((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CMTestSetup((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMTestSetup[n];
       } else {
         p = new((void*) gvp) CMTestSetup[n];
       }
     } else {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new CMTestSetup;
       } else {
         p = new((void*) gvp) CMTestSetup;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMTestSetup);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Download();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Prestart((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Go((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->End((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CMTestSetup*) G__getstructoffset())->Event((Int_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Status();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Hists((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Buttons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->PreviousView();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->NextView();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Change1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Change2();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Menu();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CMTestSetup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMTestSetup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CMTestSetup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CMTestSetup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CMTestSetup*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CMTestSetup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMTestSetup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMTestSetup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CMTestSetup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CMCint_721_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CMTestSetup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CMCint_721_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CMTestSetup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CMTestSetup(*(CMTestSetup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__CMCintLN_CMTestSetup);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CMTestSetup G__TCMTestSetup;
static int G__CMCint_721_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CMTestSetup*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CMTestSetup*) (soff+(sizeof(CMTestSetup)*i)))->~G__TCMTestSetup();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CMTestSetup*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CMTestSetup*) (soff))->~G__TCMTestSetup();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CMCint_721_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CMTestSetup* dest = (CMTestSetup*) G__getstructoffset();
   *dest = *(CMTestSetup*) libp->para[0].ref;
   const CMTestSetup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CMVirtualDisplay */

/* CMDaq */

/* CMEpics */

/* CMInputDialog */

/* CMDisplay */

/* CMClient */

/* CMPolar */

/* CMTline */

/* CMHbook */

/* TestMainFrame */

/* CMViewer */

/* CMHist */

/* CMSpars */

/* CMTestSetup */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncCMCint {
 public:
  G__Sizep2memfuncCMCint() {p=&G__Sizep2memfuncCMCint::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncCMCint::*p)();
};

size_t G__get_sizep2memfuncCMCint()
{
  G__Sizep2memfuncCMCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceCMCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CMCintLN_CMVirtualDisplay))) {
     CMVirtualDisplay *G__Lderived;
     G__Lderived=(CMVirtualDisplay*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMVirtualDisplay),G__get_linked_tagnum(&G__CMCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CMCintLN_CMDaq))) {
     CMDaq *G__Lderived;
     G__Lderived=(CMDaq*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMDaq),G__get_linked_tagnum(&G__CMCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CMCintLN_CMEpics))) {
     CMEpics *G__Lderived;
     G__Lderived=(CMEpics*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMEpics),G__get_linked_tagnum(&G__CMCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CMCintLN_CMDisplay))) {
     CMDisplay *G__Lderived;
     G__Lderived=(CMDisplay*)0x1000;
     {
       CMVirtualDisplay *G__Lpbase=(CMVirtualDisplay*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMDisplay),G__get_linked_tagnum(&G__CMCintLN_CMVirtualDisplay),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMDisplay),G__get_linked_tagnum(&G__CMCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CMCintLN_CMClient))) {
     CMClient *G__Lderived;
     G__Lderived=(CMClient*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMClient),G__get_linked_tagnum(&G__CMCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CMCintLN_CMPolar))) {
     CMPolar *G__Lderived;
     G__Lderived=(CMPolar*)0x1000;
     {
       CMClient *G__Lpbase=(CMClient*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMPolar),G__get_linked_tagnum(&G__CMCintLN_CMClient),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMPolar),G__get_linked_tagnum(&G__CMCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame))) {
     TestMainFrame *G__Lderived;
     G__Lderived=(TestMainFrame*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame),G__get_linked_tagnum(&G__CMCintLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame),G__get_linked_tagnum(&G__CMCintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame),G__get_linked_tagnum(&G__CMCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame),G__get_linked_tagnum(&G__CMCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame),G__get_linked_tagnum(&G__CMCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame),G__get_linked_tagnum(&G__CMCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame),G__get_linked_tagnum(&G__CMCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CMCintLN_CMHist))) {
     CMHist *G__Lderived;
     G__Lderived=(CMHist*)0x1000;
     {
       CMClient *G__Lpbase=(CMClient*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMHist),G__get_linked_tagnum(&G__CMCintLN_CMClient),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMHist),G__get_linked_tagnum(&G__CMCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CMCintLN_CMSpars))) {
     CMSpars *G__Lderived;
     G__Lderived=(CMSpars*)0x1000;
     {
       CMClient *G__Lpbase=(CMClient*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMSpars),G__get_linked_tagnum(&G__CMCintLN_CMClient),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMSpars),G__get_linked_tagnum(&G__CMCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CMCintLN_CMTestSetup))) {
     CMTestSetup *G__Lderived;
     G__Lderived=(CMTestSetup*)0x1000;
     {
       CMClient *G__Lpbase=(CMClient*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMTestSetup),G__get_linked_tagnum(&G__CMCintLN_CMClient),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CMCintLN_CMTestSetup),G__get_linked_tagnum(&G__CMCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableCMCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__CMCintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator,random_access_iterator_tag,value_type,const_reference,const_pointer,difference_type>",117,G__get_linked_tagnum(&G__CMCintLN_reverse_iteratorlETStreamerInfomUmUcOrandom_access_iterator_tagcOTStreamerInfomUcOTStreamerInfomUaNcOTStreamerInfomUmUcOlonggR),0,G__get_linked_tagnum(&G__CMCintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator,random_access_iterator_tag,value_type,reference,pointer,difference_type>",117,G__get_linked_tagnum(&G__CMCintLN_reverse_iteratorlETStreamerInfomUmUcOrandom_access_iterator_tagcOTStreamerInfomUcOTStreamerInfomUaNcOTStreamerInfomUmUcOlonggR),0,G__get_linked_tagnum(&G__CMCintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<void*,Version_t>",117,G__get_linked_tagnum(&G__CMCintLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<void*,short>",117,G__get_linked_tagnum(&G__CMCintLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<void*,short,less<void*>>",117,G__get_linked_tagnum(&G__CMCintLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__CMCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__CMCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__CMCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__CMCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__CMCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__CMCintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator,random_access_iterator_tag,value_type,const_reference,const_pointer,difference_type>",117,G__get_linked_tagnum(&G__CMCintLN_reverse_iteratorlETStringmUcOrandom_access_iterator_tagcOTStringcOTStringaNcOTStringmUcOlonggR),0,G__get_linked_tagnum(&G__CMCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator,random_access_iterator_tag,value_type,reference,pointer,difference_type>",117,G__get_linked_tagnum(&G__CMCintLN_reverse_iteratorlETStringmUcOrandom_access_iterator_tagcOTStringcOTStringaNcOTStringmUcOlonggR),0,G__get_linked_tagnum(&G__CMCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CMVirtualDisplay */
static void G__setup_memvarCMVirtualDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMVirtualDisplay));
   { CMVirtualDisplay *p; p=(CMVirtualDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMDaq */
static void G__setup_memvarCMDaq(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMDaq));
   { CMDaq *p; p=(CMDaq*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"downloaded=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"prestarted=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"active=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ended=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"filename[1024]=",0,"Data file name or ET file name");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMDisplay),-1,-1,4,"m_Display=",0,"pointer to CMDisplay object");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLoop=",0,"Loop in progress");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nev=",0,"Event number");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"newdstfile=",0,"if != 0 open new dst file");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"forcestop=",0,"if != 0 stop data acquisition");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"m_Pad=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nclient=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"clientActive[2]=",0,"1 for active clients, 0 for ...");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMClient),-1,-1,4,"m_Client[2]=",0,"the list of clients to be called");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMEpics */
static void G__setup_memvarCMEpics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMEpics));
   { CMEpics *p; p=(CMEpics*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nev=",0,"Event number");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"m_Pad=",0,"Pad to draw status");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TObject),-1,-1,4,"m_Epics=",0,"Pointer to ...");
   G__memvar_setup((void*)NULL,67,0,0,-1,G__defined_typename("Option_t"),-1,4,"tmpfile=",0,"Temporary file name");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_PMTL=",0,"Pointer to arc showing ON/OFF status Left PMT");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_PMTR=",0,"Pointer to arc showing ON/OFF status Right PMT");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_QUAD1=",0,"Pointer to arc showing ON/OFF status Quad 1");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_QUAD2=",0,"Pointer to arc showing ON/OFF status Quad 2");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_MAGN=",0,"Pointer to arc showing ON/OFF status Magnet");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_TARGL=",0,"Pointer to arc showing ON/OFF status Left Target");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_TARGR=",0,"Pointer to arc showing ON/OFF status Right Target");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_ALL=",0,"Pointer to arc showing ON/OFF status ALL");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TText),-1,-1,4,"tt[7]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pmtl_nom=",0,"Nominal value for Left PMT");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pmtl_mes=",0,"Measured value for Left PMT");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pmtl_dev=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pmtr_nom=",0,"Nominal value for Right PMT");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pmtr_mes=",0,"Measured value for Right PMT");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pmtr_dev=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"beam_energy=",0,"beam energy");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"quad1_nom=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"quad1_mes=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"quad1_dev=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"quad2_nom=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"quad2_mes=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"quad2_dev=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"magn_nom=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"magn_mes=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"magn_dev=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"targl_nom=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"targl_mes=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"targl_dev=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"targr_nom=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"targr_mes=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"targr_dev=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMInputDialog */
static void G__setup_memvarCMInputDialog(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMInputDialog));
   { CMInputDialog *p; p=(CMInputDialog*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGTransientFrame),-1,-1,4,"fDialog=",0,"transient frame, main dialog window");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGTextEntry),-1,-1,4,"fTE=",0,"text entry widget containing");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TList),-1,-1,4,"fWidgets=",0,"keep track of widgets to be deleted in dtor");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,4,"fRetStr=",0,"address to store return string");
   }
   G__tag_memvar_reset();
}


   /* CMDisplay */
static void G__setup_memvarCMDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMDisplay));
   { CMDisplay *p; p=(CMDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"dtext[10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TDiamond),-1,-1,4,"diamond=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_DrawAllViews=",0,"Flag True if AllViews selected");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_DrawParticles=",0,"Flag True if particles to be drawn");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_DrawClusters=",0,"Flag True if clusters to be drawn");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_PTcut=",0,"PT cut to display objects");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_PTcutEGMUNU=",0,"PT cut for Electrons, Gammas, MUons, Neutrinos");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Rin=",0,"Inner ATLAS radius");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Rout=",0,"Outer ATLAS radius");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Zin=",0,"Inner ATLAS length along Z");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Zout=",0,"Outer ATLAS length along Z");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Theta=",0,"Viewing angle theta");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi=",0,"Viewing angle phi");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TCanvas),-1,-1,4,"m_Canvas=",0,"Pointer to the display canvas");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"m_StatPad=",0,"Pointer to the status pad ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"m_Buttons=",0,"Pointer to the buttons pad");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"m_Pad=",0,"Pointer to the event display main pad");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TBRIK),-1,-1,4,"m_Brik=",0,"Main shape");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TTUBE),-1,-1,4,"m_Tubin=",0,"Inner tube");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TTUBE),-1,-1,4,"m_Tubout=",0,"outer tube");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TNode),-1,-1,4,"m_Nodin=",0,"Node for detector outline");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TNode),-1,-1,4,"m_Nodsda=",0,"Node for SDA outline");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TList),-1,-1,4,"m_Fruits=",0,"List for fruits");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMDaq),-1,-1,4,"m_Daq=",0,"Pointer to Daq");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMEpics),-1,-1,4,"m_Epics=",0,"Pointer to Epics");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMVirtualDisplay),-1,-1,4,"m_Display=",0,"Pointer to Event display object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMClient */
static void G__setup_memvarCMClient(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMClient));
   { CMClient *p; p=(CMClient*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,2,"m_Pad=",0,"Pad to draw histograms/counters");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,2,"m_StatPad=",0,"StatPad to draw status");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMPolar */
static void G__setup_memvarCMPolar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMPolar));
   { CMPolar *p; p=(CMPolar*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nev=",0,"Event number");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nevent_stat=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pad1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pad2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pad3=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pad4=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pad5=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pad6=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pad7=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pad8=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH1F),-1,-1,4,"tdc1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH1F),-1,-1,4,"adc1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH1F),-1,-1,4,"tdc2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH1F),-1,-1,4,"adc2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH1F),-1,-1,4,"adc3=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH1F),-1,-1,4,"adc4=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH2F),-1,-1,4,"tdc1adc1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH2F),-1,-1,4,"tdc2adc2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH2F),-1,-1,4,"adc1adc2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TText),-1,-1,4,"scal[12]=",0,"scaler pads");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"adc[32]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tdc[32]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"old_asym=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"scaler[32]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"oldscaler[32]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"s_1[4][10000]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"s_2[4][10000]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"scaler_h[32]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"scaler_hbar[32]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"HLSscaler[32][32]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"overflow[32]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"scaler2[4]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMTline */
static void G__setup_memvarCMTline(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMTline));
   { CMTline *p; p=(CMTline*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"grname[1000]=",0,"graph name");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pad=",0,"pad the graph to be displayed");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ngraph=",0,"the number of graphs booked");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"igraph=",0,"current graph number");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH1F),-1,-1,4,"hist=",0,"histogram where to draw");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPolyLine),-1,-1,4,"Pline[10]=",0,"pointers to TPolyLine() objects");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"colortable[10]=",0,"graph colors");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"grminalarm[10]=",0,"lower limit to be alarmed");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"grmaxalarm[10]=",0,"upper limit to be alarmed");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"gralarmbeep[10]=",0,"beep ON/OFF");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"npoints[10]=",0,"the number of points in a graph");
   G__memvar_setup((void*)NULL,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"times[10][7200]=",0,"UNIX time for every bin");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"graph[10][7200]=",0,"graphs as arrays of points");
   G__memvar_setup((void*)NULL,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"current_time=",0,"current UNIX time");
   G__memvar_setup((void*)NULL,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"timeinterval=",0,"time interval (seconds) to be drawn");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"minlimit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxlimit=",0,"min and max limits for the graphs");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMHbook */
static void G__setup_memvarCMHbook(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMHbook));
   { CMHbook *p; p=(CMHbook*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__CMCintLN_uthisti),G__defined_typename("UThisti"),-1,4,"histi[2000]=",0,"'cmon' format histos,");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__CMCintLN_uthistf),G__defined_typename("UThistf"),-1,4,"histf[2000]=",0,"initially filled after reading BOS banks ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMTline),-1,-1,4,"tline[2000]=",0,"time plot histograms, converted from ROOT");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"tlinebin[2000][10]=",0,"bin# (from 1) to be displayed");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"tlinenormbin[2000][10]=",0,"bin# (from 1) to normalize at");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pads[2000]=",0,"pointers to  pads");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"prompt[2000]=",0,"prompt flags (1-cleanup every time, 0-accumulate)");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hist1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH1F),-1,-1,1,"hist1[2000]=",0,"ROOT histograms, finally");
   G__memvar_setup((void*)((long)(&p->hist2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__CMCintLN_TH2F),-1,-1,1,"hist2[2000]=",0,"filled by current class");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TestMainFrame */
static void G__setup_memvarTestMainFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame));
   { TestMainFrame *p; p=(TestMainFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGCompositeFrame),-1,-1,4,"fStatusFrame=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGCanvas),-1,-1,4,"fCanvasWindow=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGCompositeFrame),-1,-1,4,"fContainer=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGTextEntry),-1,-1,4,"fTestText=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGButton),-1,-1,4,"fTestButton=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGMenuBar),-1,-1,4,"fMenuBar=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGPopupMenu),-1,-1,4,"fMenuFile=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGPopupMenu),-1,-1,4,"fMenuTest=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGPopupMenu),-1,-1,4,"fMenuHelp=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGPopupMenu),-1,-1,4,"fCascadeMenu=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGPopupMenu),-1,-1,4,"fCascade1Menu=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGPopupMenu),-1,-1,4,"fCascade2Menu=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGLayoutHints),-1,-1,4,"fMenuBarLayout=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGLayoutHints),-1,-1,4,"fMenuBarItemLayout=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGLayoutHints),-1,-1,4,"fMenuBarHelpLayout=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMViewer */
static void G__setup_memvarCMViewer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMViewer));
   { CMViewer *p; p=(CMViewer*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nview=",0,"the number of active views");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nh[16]=",0,"Ndiv horizontal");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nv[16]=",0,"Ndiv vertical");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ids[16][6][6]=",0,"histogram ids");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"key[16][6][6]=",0,"key: \"    \", \"HIST\", \"TMLN\", \"STAT\"");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TPad),-1,-1,4,"pad[16][6][6]=",0,"pad pointers");
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"filename[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMHist */
static void G__setup_memvarCMHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMHist));
   { CMHist *p; p=(CMHist*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ntimeline=",0,"current number of timeline plots");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMViewer),-1,-1,4,"viewer=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nview=",0,"the number of views");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iview=",0,"current view number");
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"filename[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"callprlib=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"calltrlib=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"downloaded=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"prestarted=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TestMainFrame),-1,-1,4,"fMenu=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TestDialog),-1,-1,4,"fDialog=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TestMsgBox),-1,-1,4,"fMsg=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TestSliders),-1,-1,4,"fSlider=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nevents=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nevents1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"time0=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"rate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc1[16]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc11=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc12=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc13=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc14=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc3=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hbook)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMHbook),-1,-1,1,"hbook=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMSpars */
static void G__setup_memvarCMSpars(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMSpars));
   { CMSpars *p; p=(CMSpars*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMHbook),-1,-1,4,"hbook=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMViewer),-1,-1,4,"viewer=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"filename[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"callprlib=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"calltrlib=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"downloaded=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"prestarted=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nevents=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nevents1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"time0=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"rate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nview=",0,"the number of views");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iview=",0,"current view number");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nmap=",0,"the number of maps");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"imap=",0,"current map number");
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"maptype[100][10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"mapname[100][100]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"setname[100][100]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"subsetname[100][100]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dim[100]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"histid[100]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nbin[100]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xmin[100]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xmax[100]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc11=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc12=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc13=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc14=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc3=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc4=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc5=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMSparsMenuCrate),-1,-1,4,"fDialog1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMSparsMenu),-1,-1,4,"fDialog2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"cratename[256]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CMTestSetup */
static void G__setup_memvarCMTestSetup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CMCintLN_CMTestSetup));
   { CMTestSetup *p; p=(CMTestSetup*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMHbook),-1,-1,4,"hbook=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ntimeline=",0,"current number of timeline plots");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMViewer),-1,-1,4,"viewer=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nview=",0,"the number of views");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iview=",0,"current view number");
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"filename[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"call1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"call2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"downloaded=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"prestarted=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"active=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ended=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_CMTestSetupMenu),-1,-1,4,"fDialog=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"slot=",0,"slot number to be displayed");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nevents=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nevents1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"time0=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"rate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc1[16]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc11=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc12=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc13=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc14=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc3=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TArc),-1,-1,4,"m_Arc4=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CMCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarCMCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCMVirtualDisplay(void) {
   /* CMVirtualDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMVirtualDisplay));
   G__memfunc_setup("Clear",487,G__CMCint_180_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("DisplayButtons",1477,G__CMCint_180_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__CMCint_180_0_4, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMVirtualDisplay::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_180_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMVirtualDisplay::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_180_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMVirtualDisplay::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_180_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMVirtualDisplay::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_180_0_8, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_180_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_180_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_180_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_180_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMVirtualDisplay::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_180_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMVirtualDisplay::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_180_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMVirtualDisplay::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_180_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMVirtualDisplay::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~CMVirtualDisplay", 1739, G__CMCint_180_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_180_0_17, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMVirtualDisplay), -1, 1, 1, 1, 1, 0, "u 'CMVirtualDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMDaq(void) {
   /* CMDaq */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMDaq));
   G__memfunc_setup("CMDaq",422,G__CMCint_189_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMDaq), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Download",824,G__CMCint_189_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prestart",853,G__CMCint_189_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pause",510,G__CMCint_189_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Resume",625,G__CMCint_189_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Start",526,G__CMCint_189_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Stop",422,G__CMCint_189_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFile",684,G__CMCint_189_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filnam", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFile",672,G__CMCint_189_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - filnam", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DstOpen",701,G__CMCint_189_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DstClose",801,G__CMCint_189_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewEvent",812,G__CMCint_189_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEvent",802,G__CMCint_189_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangeClient",1189,G__CMCint_189_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" dtext", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__CMCint_189_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__CMCint_189_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Loop",410,G__CMCint_189_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitET",557,G__CMCint_189_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddClient",872,G__CMCint_189_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CMClient' - 0 (CMClient*)0 Client", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveClient",1229,G__CMCint_189_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CMClient' - 0 (CMClient*)0 Client", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Display",726,G__CMCint_189_0_21, 85, G__get_linked_tagnum(&G__CMCintLN_CMDisplay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CMCint_189_0_22, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMDaq::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_189_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMDaq::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_189_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMDaq::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_189_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMDaq::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_189_0_26, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_189_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_189_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_189_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_189_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMDaq::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_189_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMDaq::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_189_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMDaq::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_189_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMDaq::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMDaq", 422, G__CMCint_189_0_34, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMDaq), -1, 0, 1, 1, 1, 0, "u 'CMDaq' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMDaq", 548, G__CMCint_189_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_189_0_36, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMDaq), -1, 1, 1, 1, 1, 0, "u 'CMDaq' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMEpics(void) {
   /* CMEpics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMEpics));
   G__memfunc_setup("CMEpics",644,G__CMCint_190_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMEpics), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"zzz_epics_tmp.tmp\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayStatus",1370,G__CMCint_190_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__CMCint_190_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Option_t' 10 \"\" option f - 'Float_t' 0 0.0 value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetValue",797,G__CMCint_190_0_4, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Status",644,G__CMCint_190_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQuadCurrents",1537,G__CMCint_190_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__CMCint_190_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Epics",500,G__CMCint_190_0_8, 85, G__get_linked_tagnum(&G__CMCintLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CMCint_190_0_9, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMEpics::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_190_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMEpics::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_190_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMEpics::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_190_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMEpics::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_190_0_13, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_190_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_190_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_190_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_190_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMEpics::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_190_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMEpics::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_190_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMEpics::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_190_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMEpics::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMEpics", 644, G__CMCint_190_0_21, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMEpics), -1, 0, 1, 1, 1, 0, "u 'CMEpics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMEpics", 770, G__CMCint_190_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_190_0_23, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMEpics), -1, 1, 1, 1, 1, 0, "u 'CMEpics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMInputDialog(void) {
   /* CMInputDialog */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMInputDialog));
   G__memfunc_setup("CMInputDialog",1264,G__CMCint_191_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMInputDialog), -1, 0, 3, 1, 1, 0, 
"C - - 10 - prompt C - - 10 - defval "
"C - - 0 - retstr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,G__CMCint_191_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CMInputDialog", 1264, G__CMCint_191_0_3, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMInputDialog), -1, 0, 1, 1, 1, 0, "u 'CMInputDialog' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMInputDialog", 1390, G__CMCint_191_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_191_0_5, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMInputDialog), -1, 1, 1, 1, 1, 0, "u 'CMInputDialog' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMDisplay(void) {
   /* CMDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMDisplay));
   G__memfunc_setup("CMDisplay",870,G__CMCint_192_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMDisplay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CMDisplay",870,G__CMCint_192_0_2, 105, G__get_linked_tagnum(&G__CMCintLN_CMDisplay), -1, 0, 1, 1, 1, 0, "C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Display",726,G__CMCint_192_0_3, 85, G__get_linked_tagnum(&G__CMCintLN_CMVirtualDisplay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__CMCint_192_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisplayButtons",1477,G__CMCint_192_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("VoltageOn",911,G__CMCint_192_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("VoltageOff",1005,G__CMCint_192_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MoveTarget",1022,G__CMCint_192_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Download",824,G__CMCint_192_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prestart",853,G__CMCint_192_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pause",510,G__CMCint_192_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Resume",625,G__CMCint_192_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StartLoop",936,G__CMCint_192_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - timeout", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StopLoop",832,G__CMCint_192_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,G__CMCint_192_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FileSelect",992,G__CMCint_192_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangeClient",1189,G__CMCint_192_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTitle",814,G__CMCint_192_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - datasrc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenFileDialog",1378,G__CMCint_192_0_19, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveFileDialog",1375,G__CMCint_192_0_20, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStringDialog",1511,G__CMCint_192_0_21, 67, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - prompt C - - 10 - defval", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIntegerDialog",1598,G__CMCint_192_0_22, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - prompt i - 'Int_t' 0 - defval", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFloatDialog",1382,G__CMCint_192_0_23, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"C - - 10 - prompt f - 'Float_t' 0 - defval", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AllViews",807,G__CMCint_192_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawClusters",1251,G__CMCint_192_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawParticles",1333,G__CMCint_192_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nodin",504,G__CMCint_192_0_27, 85, G__get_linked_tagnum(&G__CMCintLN_TNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tubin",514,G__CMCint_192_0_28, 85, G__get_linked_tagnum(&G__CMCintLN_TTUBE), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nodsda",601,G__CMCint_192_0_29, 85, G__get_linked_tagnum(&G__CMCintLN_TNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Brik",392,G__CMCint_192_0_30, 85, G__get_linked_tagnum(&G__CMCintLN_TBRIK), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pad",277,G__CMCint_192_0_31, 85, G__get_linked_tagnum(&G__CMCintLN_TPad), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StatPad",689,G__CMCint_192_0_32, 85, G__get_linked_tagnum(&G__CMCintLN_TPad), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDaq",578,G__CMCint_192_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CMDaq' - 0 (CMDaq*)0 Daq", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEpics",800,G__CMCint_192_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CMEpics' - 0 (CMEpics*)0 Epics", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CMCint_192_0_35, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMDisplay::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_192_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMDisplay::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_192_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMDisplay::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_192_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMDisplay::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_192_0_39, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_192_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_192_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_192_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_192_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMDisplay::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_192_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMDisplay::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_192_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMDisplay::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_192_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMDisplay::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMDisplay", 870, G__CMCint_192_0_47, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMDisplay), -1, 0, 1, 1, 1, 0, "u 'CMDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMDisplay", 996, G__CMCint_192_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_192_0_49, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMDisplay), -1, 1, 1, 1, 1, 0, "u 'CMDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMClient(void) {
   /* CMClient */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMClient));
   G__memfunc_setup("CMClient",751,G__CMCint_542_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMClient), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"tmp.tmp\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Download",824,G__CMCint_542_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prestart",853,G__CMCint_542_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - jw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Go",182,G__CMCint_542_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - jw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,G__CMCint_542_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - jw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__CMCint_542_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,G__CMCint_542_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,G__CMCint_542_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - jw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CMCint_542_0_9, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMClient::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_542_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMClient::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_542_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMClient::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_542_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMClient::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_542_0_13, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_542_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_542_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_542_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_542_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMClient::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_542_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMClient::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_542_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMClient::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_542_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMClient::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMClient", 751, G__CMCint_542_0_21, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMClient), -1, 0, 1, 1, 1, 0, "u 'CMClient' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMClient", 877, G__CMCint_542_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_542_0_23, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMClient), -1, 1, 1, 1, 1, 0, "u 'CMClient' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMPolar(void) {
   /* CMPolar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMPolar));
   G__memfunc_setup("CMPolar",654,G__CMCint_543_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMPolar), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"tmp.tmp\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Download",824,G__CMCint_543_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prestart",853,G__CMCint_543_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - jw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__CMCint_543_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hist",408,G__CMCint_543_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,G__CMCint_543_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,G__CMCint_543_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - jw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CMCint_543_0_8, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMPolar::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_543_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMPolar::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_543_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMPolar::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_543_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMPolar::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_543_0_12, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_543_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_543_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_543_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_543_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMPolar::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_543_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMPolar::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_543_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMPolar::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_543_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMPolar::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMPolar", 654, G__CMCint_543_0_20, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMPolar), -1, 0, 1, 1, 1, 0, "u 'CMPolar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMPolar", 780, G__CMCint_543_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_543_0_22, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMPolar), -1, 1, 1, 1, 1, 0, "u 'CMPolar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMTline(void) {
   /* CMTline */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMTline));
   G__memfunc_setup("CMTline",652,G__CMCint_547_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMTline), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"Timeline Graph\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPadAddress",1287,G__CMCint_547_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimeInterval",1536,G__CMCint_547_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'ULong_t' 0 - seconds", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddGraph",763,G__CMCint_547_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAlarmBeep",1173,G__CMCint_547_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - igr i - 'Int_t' 0 - on_off", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAlarmLimits",1419,G__CMCint_547_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - igr f - 'Float_t' 0 - min "
"f - 'Float_t' 0 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddPointToGraph",1480,G__CMCint_547_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - igr k - 'ULong_t' 0 - unixtime "
"f - 'Float_t' 0 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,G__CMCint_547_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CMCint_547_0_9, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMTline::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_547_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMTline::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_547_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMTline::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_547_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMTline::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_547_0_13, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_547_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_547_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_547_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_547_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMTline::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_547_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMTline::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_547_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMTline::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_547_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMTline::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMTline", 652, G__CMCint_547_0_21, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMTline), -1, 0, 1, 1, 1, 0, "u 'CMTline' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMTline", 778, G__CMCint_547_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_547_0_23, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMTline), -1, 1, 1, 1, 1, 0, "u 'CMTline' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMHbook(void) {
   /* CMHbook */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMHbook));
   G__memfunc_setup("CMhisti2root",1191,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'uthisti' 'UThisti' 0 - hist i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CMhistf2root",1188,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'uthistf' 'UThistf' 0 - hist i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CMgetHISS",775,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"I - 'Int_t' 0 - jw i - 'Int_t' 0 - ind", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CMgetHISI",765,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"I - 'Int_t' 0 - jw i - 'Int_t' 0 - ind", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CMgetHISF",762,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"I - 'Int_t' 0 - jw i - 'Int_t' 0 - ind", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CMgetHistFromBOS",1504,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"I - 'Int_t' 0 - jw i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CMHbook",643,G__CMCint_548_0_7, 105, G__get_linked_tagnum(&G__CMCintLN_CMHbook), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clean",483,G__CMCint_548_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetListOfPads",1285,G__CMCint_548_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TPad' - 2 - pad", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPadAddress",1287,G__CMCint_548_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPromptFlag",1320,G__CMCint_548_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id i - 'Int_t' 0 - iprompt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateTMLN",911,G__CMCint_548_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id k - 'ULong_t' 0 - timeinterval", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTMLNPad",892,G__CMCint_548_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTMLNGraph",1113,G__CMCint_548_0_14, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - id i - 'Int_t' 0 - ibin "
"f - 'Float_t' 0 - min f - 'Float_t' 0 - max "
"i - 'Int_t' 0 - alarm i - 'Int_t' 0 - norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BosToRoot",907,G__CMCint_548_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "I - 'Int_t' 0 - jw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HisToRoot",907,G__CMCint_548_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CMCint_548_0_17, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMHbook::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_548_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMHbook::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_548_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMHbook::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_548_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMHbook::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_548_0_21, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_548_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_548_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_548_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_548_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMHbook::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_548_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMHbook::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_548_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMHbook::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_548_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMHbook::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMHbook", 643, G__CMCint_548_0_29, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMHbook), -1, 0, 1, 1, 1, 0, "u 'CMHbook' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMHbook", 769, G__CMCint_548_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_548_0_31, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMHbook), -1, 1, 1, 1, 1, 0, "u 'CMHbook' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTestMainFrame(void) {
   /* TestMainFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame));
   G__memfunc_setup("TestMainFrame",1296,G__CMCint_710_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_TestMainFrame), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,G__CMCint_710_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessMessage",1444,G__CMCint_710_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CMCint_710_0_4, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TestMainFrame::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_710_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TestMainFrame::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_710_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TestMainFrame::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_710_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TestMainFrame::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_710_0_8, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_710_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_710_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_710_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_710_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TestMainFrame::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_710_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TestMainFrame::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_710_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TestMainFrame::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_710_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TestMainFrame::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~TestMainFrame", 1422, G__CMCint_710_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMViewer(void) {
   /* CMViewer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMViewer));
   G__memfunc_setup("CMViewer",770,G__CMCint_714_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMViewer), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"tmp.tmp\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadConfig",978,G__CMCint_714_0_2, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Option_t' 10 - fname U 'CMHbook' - 0 - hbook", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddView",676,G__CMCint_714_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddView",676,G__CMCint_714_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ih i - 'Int_t' 0 - iv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddHist",673,G__CMCint_714_0_5, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'CMHbook' - 0 - hbook i - 'Int_t' 0 - number "
"i - 'Int_t' 0 - iview i - 'Int_t' 0 - ih "
"i - 'Int_t' 0 - iv i - 'Int_t' 0 - iprompt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddHist",673,G__CMCint_714_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'CMHbook' - 0 - hbook i - 'Int_t' 0 - number "
"i - 'Int_t' 0 - iview i - 'Int_t' 0 - iprompt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteConfig",1121,G__CMCint_714_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - fname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ViewCreate",1007,G__CMCint_714_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num U 'CMHbook' - 0 - hbook", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ViewDelete",1006,G__CMCint_714_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num U 'CMHbook' - 0 - hbook", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ViewPlot",826,G__CMCint_714_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPad",565,G__CMCint_714_0_11, 85, G__get_linked_tagnum(&G__CMCintLN_TPad), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - iview i - 'Int_t' 0 - ipadh "
"i - 'Int_t' 0 - ipadv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CMCint_714_0_12, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMViewer::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_714_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMViewer::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_714_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMViewer::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_714_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMViewer::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_714_0_16, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_714_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_714_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_714_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_714_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMViewer::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_714_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMViewer::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_714_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMViewer::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_714_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMViewer::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMViewer", 770, G__CMCint_714_0_24, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMViewer), -1, 0, 1, 1, 1, 0, "u 'CMViewer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMViewer", 896, G__CMCint_714_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_714_0_26, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMViewer), -1, 1, 1, 1, 1, 0, "u 'CMViewer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMHist(void) {
   /* CMHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMHist));
   G__memfunc_setup("CMHist",552,G__CMCint_715_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMHist), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"tmp.tmp\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Download",824,G__CMCint_715_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prestart",853,G__CMCint_715_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Go",182,G__CMCint_715_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,G__CMCint_715_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__CMCint_715_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hist",408,G__CMCint_715_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,G__CMCint_715_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,G__CMCint_715_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Status",644,G__CMCint_715_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Buttons",751,G__CMCint_715_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreviousView",1272,G__CMCint_715_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextView",826,G__CMCint_715_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangePrlib",1087,G__CMCint_715_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangeTrlib",1091,G__CMCint_715_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Menu",405,G__CMCint_715_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CMCint_715_0_17, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMHist::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_715_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMHist::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_715_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMHist::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_715_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMHist::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_715_0_21, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_715_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_715_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_715_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_715_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMHist::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_715_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMHist::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_715_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMHist::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_715_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMHist::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMHist", 552, G__CMCint_715_0_29, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMHist), -1, 0, 1, 1, 1, 0, "u 'CMHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMHist", 678, G__CMCint_715_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_715_0_31, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMHist), -1, 1, 1, 1, 1, 0, "u 'CMHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMSpars(void) {
   /* CMSpars */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMSpars));
   G__memfunc_setup("CMSpars",665,G__CMCint_719_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMSpars), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"tmp.tmp\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Download",824,G__CMCint_719_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prestart",853,G__CMCint_719_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Go",182,G__CMCint_719_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,G__CMCint_719_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__CMCint_719_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hist",408,G__CMCint_719_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,G__CMCint_719_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,G__CMCint_719_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Buttons",751,G__CMCint_719_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreviousView",1272,G__CMCint_719_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextView",826,G__CMCint_719_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Status",644,G__CMCint_719_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadConfig",978,G__CMCint_719_0_14, 105, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"./hist.config\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteConfig",1121,G__CMCint_719_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"./hist.config\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadCalibration",1508,G__CMCint_719_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteCalibration",1651,G__CMCint_719_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HistView",819,G__CMCint_719_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MenuCrate",900,G__CMCint_719_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Menu",405,G__CMCint_719_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CMCint_719_0_21, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMSpars::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_719_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMSpars::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_719_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMSpars::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_719_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMSpars::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_719_0_25, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_719_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_719_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_719_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_719_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMSpars::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_719_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMSpars::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_719_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMSpars::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_719_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMSpars::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMSpars", 665, G__CMCint_719_0_33, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMSpars), -1, 0, 1, 1, 1, 0, "u 'CMSpars' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMSpars", 791, G__CMCint_719_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_719_0_35, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMSpars), -1, 1, 1, 1, 1, 0, "u 'CMSpars' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCMTestSetup(void) {
   /* CMTestSetup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CMCintLN_CMTestSetup));
   G__memfunc_setup("CMTestSetup",1089,G__CMCint_721_0_1, 105, G__get_linked_tagnum(&G__CMCintLN_CMTestSetup), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"tmp.tmp\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Download",824,G__CMCint_721_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prestart",853,G__CMCint_721_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Go",182,G__CMCint_721_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,G__CMCint_721_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__CMCint_721_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,G__CMCint_721_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Event",514,G__CMCint_721_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - iw", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Status",644,G__CMCint_721_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hists",523,G__CMCint_721_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ihist1 i - 'Int_t' 0 - nhists", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Buttons",751,G__CMCint_721_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreviousView",1272,G__CMCint_721_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextView",826,G__CMCint_721_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Change1",631,G__CMCint_721_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Change2",632,G__CMCint_721_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Menu",405,G__CMCint_721_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CMCint_721_0_17, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CMTestSetup::Class), 0);
   G__memfunc_setup("Class_Name",982,G__CMCint_721_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMTestSetup::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__CMCint_721_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CMTestSetup::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__CMCint_721_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CMTestSetup::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__CMCint_721_0_21, 85, G__get_linked_tagnum(&G__CMCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CMCint_721_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CMCint_721_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CMCint_721_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CMCint_721_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMTestSetup::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CMCint_721_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMTestSetup::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__CMCint_721_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CMTestSetup::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CMCint_721_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CMTestSetup::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CMTestSetup", 1089, G__CMCint_721_0_29, (int) ('i'), G__get_linked_tagnum(&G__CMCintLN_CMTestSetup), -1, 0, 1, 1, 1, 0, "u 'CMTestSetup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CMTestSetup", 1215, G__CMCint_721_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CMCint_721_0_31, (int) ('u'), G__get_linked_tagnum(&G__CMCintLN_CMTestSetup), -1, 1, 1, 1, 1, 0, "u 'CMTestSetup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncCMCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
   G__memvar_setup((void*)(&gClient),85,0,0,G__get_linked_tagnum(&G__CMCintLN_TGClient),-1,-1,1,"gClient=",0,(char*)NULL);
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalCMCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcCMCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__CMCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__CMCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__CMCintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__CMCintLN_reverse_iteratorlETStreamerInfomUmUcOrandom_access_iterator_tagcOTStreamerInfomUcOTStreamerInfomUaNcOTStreamerInfomUmUcOlonggR = { "reverse_iterator<TStreamerInfo**,random_access_iterator_tag,TStreamerInfo*,TStreamerInfo*&,TStreamerInfo**,long>" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMVirtualDisplay = { "CMVirtualDisplay" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TDiamond = { "TDiamond" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TArc = { "TArc" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TTUBE = { "TTUBE" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TBRIK = { "TBRIK" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TNode = { "TNode" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMDaq = { "CMDaq" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMEpics = { "CMEpics" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMInputDialog = { "CMInputDialog" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMDisplay = { "CMDisplay" , 99 , -1 };
G__linked_taginfo G__CMCintLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR = { "multimap<void*,short,less<void*>,allocator<pair<void* const,short> > >" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TText = { "TText" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMClient = { "CMClient" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMPolar = { "CMPolar" , 99 , -1 };
G__linked_taginfo G__CMCintLN_uthisti = { "uthisti" , 115 , -1 };
G__linked_taginfo G__CMCintLN_uthistf = { "uthistf" , 115 , -1 };
G__linked_taginfo G__CMCintLN_TPolyLine = { "TPolyLine" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMTline = { "CMTline" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMHbook = { "CMHbook" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGClient = { "TGClient" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGTransientFrame = { "TGTransientFrame" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGCanvas = { "TGCanvas" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGButton = { "TGButton" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TGMenuBar = { "TGMenuBar" , 99 , -1 };
G__linked_taginfo G__CMCintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__CMCintLN_reverse_iteratorlETStringmUcOrandom_access_iterator_tagcOTStringcOTStringaNcOTStringmUcOlonggR = { "reverse_iterator<TString*,random_access_iterator_tag,TString,TString&,TString*,long>" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TestMainFrame = { "TestMainFrame" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TestDialog = { "TestDialog" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TestMsgBox = { "TestMsgBox" , 99 , -1 };
G__linked_taginfo G__CMCintLN_TestSliders = { "TestSliders" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMViewer = { "CMViewer" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMHist = { "CMHist" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMSparsMenuCrate = { "CMSparsMenuCrate" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMSparsMenu = { "CMSparsMenu" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMSpars = { "CMSpars" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMTestSetupMenu = { "CMTestSetupMenu" , 99 , -1 };
G__linked_taginfo G__CMCintLN_CMTestSetup = { "CMTestSetup" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableCMCint() {
  G__CMCintLN_TClass.tagnum = -1 ;
  G__CMCintLN_TBuffer.tagnum = -1 ;
  G__CMCintLN_TMemberInspector.tagnum = -1 ;
  G__CMCintLN_TObject.tagnum = -1 ;
  G__CMCintLN_TList.tagnum = -1 ;
  G__CMCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__CMCintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__CMCintLN_reverse_iteratorlETStreamerInfomUmUcOrandom_access_iterator_tagcOTStreamerInfomUcOTStreamerInfomUaNcOTStreamerInfomUmUcOlonggR.tagnum = -1 ;
  G__CMCintLN_CMVirtualDisplay.tagnum = -1 ;
  G__CMCintLN_TDiamond.tagnum = -1 ;
  G__CMCintLN_TCanvas.tagnum = -1 ;
  G__CMCintLN_TPad.tagnum = -1 ;
  G__CMCintLN_TArc.tagnum = -1 ;
  G__CMCintLN_TTUBE.tagnum = -1 ;
  G__CMCintLN_TBRIK.tagnum = -1 ;
  G__CMCintLN_TNode.tagnum = -1 ;
  G__CMCintLN_CMDaq.tagnum = -1 ;
  G__CMCintLN_CMEpics.tagnum = -1 ;
  G__CMCintLN_CMInputDialog.tagnum = -1 ;
  G__CMCintLN_CMDisplay.tagnum = -1 ;
  G__CMCintLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR.tagnum = -1 ;
  G__CMCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__CMCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__CMCintLN_TH1F.tagnum = -1 ;
  G__CMCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__CMCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__CMCintLN_TH2F.tagnum = -1 ;
  G__CMCintLN_TQObject.tagnum = -1 ;
  G__CMCintLN_TText.tagnum = -1 ;
  G__CMCintLN_CMClient.tagnum = -1 ;
  G__CMCintLN_CMPolar.tagnum = -1 ;
  G__CMCintLN_uthisti.tagnum = -1 ;
  G__CMCintLN_uthistf.tagnum = -1 ;
  G__CMCintLN_TPolyLine.tagnum = -1 ;
  G__CMCintLN_CMTline.tagnum = -1 ;
  G__CMCintLN_CMHbook.tagnum = -1 ;
  G__CMCintLN_TGClient.tagnum = -1 ;
  G__CMCintLN_TGObject.tagnum = -1 ;
  G__CMCintLN_TGWindow.tagnum = -1 ;
  G__CMCintLN_TGFrame.tagnum = -1 ;
  G__CMCintLN_TGCompositeFrame.tagnum = -1 ;
  G__CMCintLN_TGLayoutHints.tagnum = -1 ;
  G__CMCintLN_TGMainFrame.tagnum = -1 ;
  G__CMCintLN_TGTransientFrame.tagnum = -1 ;
  G__CMCintLN_TGCanvas.tagnum = -1 ;
  G__CMCintLN_TGButton.tagnum = -1 ;
  G__CMCintLN_TGTextEntry.tagnum = -1 ;
  G__CMCintLN_TGPopupMenu.tagnum = -1 ;
  G__CMCintLN_TGMenuBar.tagnum = -1 ;
  G__CMCintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__CMCintLN_reverse_iteratorlETStringmUcOrandom_access_iterator_tagcOTStringcOTStringaNcOTStringmUcOlonggR.tagnum = -1 ;
  G__CMCintLN_TestMainFrame.tagnum = -1 ;
  G__CMCintLN_TestDialog.tagnum = -1 ;
  G__CMCintLN_TestMsgBox.tagnum = -1 ;
  G__CMCintLN_TestSliders.tagnum = -1 ;
  G__CMCintLN_CMViewer.tagnum = -1 ;
  G__CMCintLN_CMHist.tagnum = -1 ;
  G__CMCintLN_CMSparsMenuCrate.tagnum = -1 ;
  G__CMCintLN_CMSparsMenu.tagnum = -1 ;
  G__CMCintLN_CMSpars.tagnum = -1 ;
  G__CMCintLN_CMTestSetupMenu.tagnum = -1 ;
  G__CMCintLN_CMTestSetup.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableCMCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__CMCintLN_TClass);
   G__get_linked_tagnum(&G__CMCintLN_TBuffer);
   G__get_linked_tagnum(&G__CMCintLN_TMemberInspector);
   G__get_linked_tagnum(&G__CMCintLN_TObject);
   G__get_linked_tagnum(&G__CMCintLN_TList);
   G__get_linked_tagnum(&G__CMCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum(&G__CMCintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__CMCintLN_reverse_iteratorlETStreamerInfomUmUcOrandom_access_iterator_tagcOTStreamerInfomUcOTStreamerInfomUaNcOTStreamerInfomUmUcOlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMVirtualDisplay),sizeof(CMVirtualDisplay),-1,29954,"Virtual base class for Moller Polarimeter display",G__setup_memvarCMVirtualDisplay,G__setup_memfuncCMVirtualDisplay);
   G__get_linked_tagnum(&G__CMCintLN_TDiamond);
   G__get_linked_tagnum(&G__CMCintLN_TCanvas);
   G__get_linked_tagnum(&G__CMCintLN_TPad);
   G__get_linked_tagnum(&G__CMCintLN_TArc);
   G__get_linked_tagnum(&G__CMCintLN_TTUBE);
   G__get_linked_tagnum(&G__CMCintLN_TBRIK);
   G__get_linked_tagnum(&G__CMCintLN_TNode);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMDaq),sizeof(CMDaq),-1,62464,"Daq for Moller Polarimeter",G__setup_memvarCMDaq,G__setup_memfuncCMDaq);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMEpics),sizeof(CMEpics),-1,29952,"Epics for Moller Polarimeter",G__setup_memvarCMEpics,G__setup_memfuncCMEpics);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMInputDialog),sizeof(CMInputDialog),-1,33792,(char*)NULL,G__setup_memvarCMInputDialog,G__setup_memfuncCMInputDialog);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMDisplay),sizeof(CMDisplay),-1,62720,"Utility class to display Moller Polarimeter GUI",G__setup_memvarCMDisplay,G__setup_memfuncCMDisplay);
   G__get_linked_tagnum(&G__CMCintLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR);
   G__get_linked_tagnum(&G__CMCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum(&G__CMCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum(&G__CMCintLN_TH1F);
   G__get_linked_tagnum(&G__CMCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum(&G__CMCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum(&G__CMCintLN_TH2F);
   G__get_linked_tagnum(&G__CMCintLN_TQObject);
   G__get_linked_tagnum(&G__CMCintLN_TText);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMClient),sizeof(CMClient),-1,29952,"Client for the CLAS Monitor",G__setup_memvarCMClient,G__setup_memfuncCMClient);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMPolar),sizeof(CMPolar),-1,29952,"Polar for Moller Polarimeter",G__setup_memvarCMPolar,G__setup_memfuncCMPolar);
   G__get_linked_tagnum(&G__CMCintLN_uthisti);
   G__get_linked_tagnum(&G__CMCintLN_uthistf);
   G__get_linked_tagnum(&G__CMCintLN_TPolyLine);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMTline),sizeof(CMTline),-1,1280,(char*)NULL,G__setup_memvarCMTline,G__setup_memfuncCMTline);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMHbook),sizeof(CMHbook),-1,1280,(char*)NULL,G__setup_memvarCMHbook,G__setup_memfuncCMHbook);
   G__get_linked_tagnum(&G__CMCintLN_TGClient);
   G__get_linked_tagnum(&G__CMCintLN_TGObject);
   G__get_linked_tagnum(&G__CMCintLN_TGWindow);
   G__get_linked_tagnum(&G__CMCintLN_TGFrame);
   G__get_linked_tagnum(&G__CMCintLN_TGCompositeFrame);
   G__get_linked_tagnum(&G__CMCintLN_TGLayoutHints);
   G__get_linked_tagnum(&G__CMCintLN_TGMainFrame);
   G__get_linked_tagnum(&G__CMCintLN_TGTransientFrame);
   G__get_linked_tagnum(&G__CMCintLN_TGCanvas);
   G__get_linked_tagnum(&G__CMCintLN_TGButton);
   G__get_linked_tagnum(&G__CMCintLN_TGTextEntry);
   G__get_linked_tagnum(&G__CMCintLN_TGPopupMenu);
   G__get_linked_tagnum(&G__CMCintLN_TGMenuBar);
   G__get_linked_tagnum(&G__CMCintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum(&G__CMCintLN_reverse_iteratorlETStringmUcOrandom_access_iterator_tagcOTStringcOTStringaNcOTStringmUcOlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_TestMainFrame),sizeof(TestMainFrame),-1,62464,(char*)NULL,G__setup_memvarTestMainFrame,G__setup_memfuncTestMainFrame);
   G__get_linked_tagnum(&G__CMCintLN_TestDialog);
   G__get_linked_tagnum(&G__CMCintLN_TestMsgBox);
   G__get_linked_tagnum(&G__CMCintLN_TestSliders);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMViewer),sizeof(CMViewer),-1,1280,(char*)NULL,G__setup_memvarCMViewer,G__setup_memfuncCMViewer);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMHist),sizeof(CMHist),-1,29952,(char*)NULL,G__setup_memvarCMHist,G__setup_memfuncCMHist);
   G__get_linked_tagnum(&G__CMCintLN_CMSparsMenuCrate);
   G__get_linked_tagnum(&G__CMCintLN_CMSparsMenu);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMSpars),sizeof(CMSpars),-1,29952,(char*)NULL,G__setup_memvarCMSpars,G__setup_memfuncCMSpars);
   G__get_linked_tagnum(&G__CMCintLN_CMTestSetupMenu);
   G__tagtable_setup(G__get_linked_tagnum(&G__CMCintLN_CMTestSetup),sizeof(CMTestSetup),-1,29952,(char*)NULL,G__setup_memvarCMTestSetup,G__setup_memfuncCMTestSetup);
}
extern "C" void G__cpp_setupCMCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupCMCint()");
  G__set_cpp_environmentCMCint();
  G__cpp_setup_tagtableCMCint();

  G__cpp_setup_inheritanceCMCint();

  G__cpp_setup_typetableCMCint();

  G__cpp_setup_memvarCMCint();

  G__cpp_setup_memfuncCMCint();
  G__cpp_setup_globalCMCint();
  G__cpp_setup_funcCMCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncCMCint();
  return;
}
class G__cpp_setup_initCMCint {
  public:
    G__cpp_setup_initCMCint() { G__add_setup_func("CMCint",(G__incsetup)(&G__cpp_setupCMCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initCMCint() { G__remove_setup_func("CMCint"); }
};
G__cpp_setup_initCMCint G__cpp_setup_initializerCMCint;

