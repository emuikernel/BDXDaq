<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 12">
<meta name=Originator content="Microsoft Word 12">
<link rel=File-List href="using_system_files/filelist.xml">
<link rel=Edit-Time-Data href="using_system_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Using An ET System</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>bangdm</o:Author>
  <o:LastAuthor>bangdm</o:LastAuthor>
  <o:Revision>8</o:Revision>
  <o:TotalTime>25</o:TotalTime>
  <o:Created>2008-03-17T20:10:00Z</o:Created>
  <o:LastSaved>2008-03-19T20:07:00Z</o:LastSaved>
  <o:Pages>4</o:Pages>
  <o:Words>5259</o:Words>
  <o:Characters>29981</o:Characters>
  <o:Company>Jefferson Science Associates, LLC</o:Company>
  <o:Lines>249</o:Lines>
  <o:Paragraphs>70</o:Paragraphs>
  <o:CharactersWithSpaces>35170</o:CharactersWithSpaces>
  <o:Version>12.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:RelyOnVML/>
  <o:TargetScreenSize>1152x882</o:TargetScreenSize>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=dataStoreItem href="using_system_files/item0006.xml"
target="using_system_files/props0007.xml">
<link rel=themeData href="using_system_files/themedata.thmx">
<link rel=colorSchemeMapping href="using_system_files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:DontVertAlignCellWithSp/>
   <w:DontBreakConstrainedForcedTables/>
   <w:DontVertAlignInTxbx/>
   <w:Word11KerningPairs/>
   <w:CachedColBalance/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="--"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="true"
  DefSemiHidden="true" DefQFormat="false" DefPriority="99"
  LatentStyleCount="267">
  <w:LsdException Locked="false" Priority="0" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 9"/>
  <w:LsdException Locked="false" Priority="35" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" Priority="10" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" Priority="1" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" Priority="11" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" Priority="22" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" Priority="59" SemiHidden="false"
   UnhideWhenUsed="false" Name="Table Grid"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" QFormat="true" Name="TOC Heading"/>
 </w:LatentStyles>
</xml><![endif]-->
<link rel=Stylesheet type="text/css" media=all href=etmanual.css>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1107304683 0 0 159 0;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:1627400839 -2147483648 8 0 66047 0;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610611985 1073750091 0 0 159 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
h1
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 1 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	text-indent:-.5in;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:21.5pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h3
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 3 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	text-indent:-.25in;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:17.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h4
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 4 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	mso-pagination:widow-orphan;
	mso-outline-level:4;
	font-size:14.5pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h5
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 5 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	mso-pagination:widow-orphan;
	mso-outline-level:5;
	font-size:13.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;
	font-style:italic;}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:purple;
	text-decoration:underline;
	text-underline:single;}
p
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
code
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"HTML Preformatted Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:1.2in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 1";
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#365F91;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 3";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 4";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;
	font-style:italic;}
span.Heading5Char
	{mso-style-name:"Heading 5 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 5";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#243F60;
	mso-themecolor:accent1;
	mso-themeshade:127;}
span.HTMLPreformattedChar
	{mso-style-name:"HTML Preformatted Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"HTML Preformatted";
	font-family:Consolas;
	mso-ascii-font-family:Consolas;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Consolas;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Balloon Text";
	mso-ansi-font-size:8.0pt;
	mso-bidi-font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-ascii-font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Tahoma;
	mso-bidi-font-family:Tahoma;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:10.0pt;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:1043484098;
	mso-list-template-ids:-1769683218;}
@list l0:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1
	{mso-list-id:1107892047;
	mso-list-template-ids:-911597296;}
@list l1:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2
	{mso-list-id:1792749619;
	mso-list-template-ids:-1293898172;}
@list l2:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3
	{mso-list-id:2106538688;
	mso-list-template-ids:360640624;}
@list l3:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-qformat:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
</style>
<![endif]-->
<meta name=author content="Carl Timmer">
<meta name=description content="Chapter for ET system manual">
<meta name=copyright content="Copyright 1999, SURA, TJNAF">
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="3074"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white background=FlowBack.gif lang=EN-US link=blue vlink=purple
style='tab-interval:.5in'>
<!--[if gte mso 9]><xml>
 <v:background id="_x0000_s1025" o:bwmode="white">
  <v:fill src="FlowBack.gif" type="tile"/>
 </v:background></xml><![endif]-->

<div class=Section1>

<h1><a href="creating_system.htm"><span style='mso-fareast-font-family:"Times New Roman";
mso-no-proof:yes;text-decoration:none;text-underline:none'><img border=0
width=31 height=31 id="_x0000_i1028" src=left.gif alt=Previous></span></a><a
href="programming_details.htm"><span style='mso-fareast-font-family:"Times New Roman";
mso-no-proof:yes;text-decoration:none;text-underline:none'><img border=0
width=31 height=31 id="_x0000_i1027" src=right.gif alt=Next></span></a><span
style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h1>

<h1><span style='mso-fareast-font-family:"Times New Roman"'>Using An ET System<o:p></o:p></span></h1>

<p>In the previous chapter, we learned how to create an ET system, and in this
chapter we'll learn to use an existing system. This chapter shows how users can
attach to ET systems, define, create and remove stations, attach to and detach
from stations, handle events, and handle signals.</p>

<h3><a name=Opening><span style='mso-fareast-font-family:"Times New Roman"'>Opening
an ET System</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<p>Opening a system is done by calling <i><a href="user_routines.htm#et_open">et_open</a>
(et_sys_id* id, char *filename,et_openconfig config)</i>. The user defines a
variable of type <i>et_sys_id</i> and passes its pointer - a value-result
argument - which then gives back an &quot;ID&quot; to the open ET system. In
addition, the filename of an existing ET system and a parameter describing how
the user would like to open the system are passed as parameters to <i>et_open</i>.</p>

<p>There are a number of functions used to create and define the <i>config</i>
argument. It is initialized by a call to <i><a
href="user_routines.htm#et_open_config_init">et_open_config_init</a>
(et_openconfig *config)</i>. When the user is finished using the configuration,
<i><a href="user_routines.htm#et_open_config_destroy">et_open_config_destroy</a>
(et_openconfig config)</i> must be called in order to properly release all memory
used.</p>

<p>After initialization, calls can be made to functions which set various
properties of the specific configuration. Calls to these setting functions will
fail unless the configuration is first initialized. The functions used to SET
these properties are listed below along with an explanation for each:</p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setwait">et_open_config_setwait</a>(et_openconfig
config, int val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: setting <em>val</em> to ET_OPEN_WAIT makes <em>et_open</em> block by waiting
until the given ET system is fully functioning or a set time period has passed
before returning. Setting <em>val</em> to ET_OPEN_NOWAIT make et_open return
immediately after determining whether the ET system is alive or not. If the
system is remote, then broadcasting to find its location may take up to several
seconds. The default is ET_OPEN_NOWAIT.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_settimeout">et_open_config_settimeout</a>(et_openconfig
config, struct timespec val)</span></em><span style='mso-fareast-font-family:
"Times New Roman"'> : in ET_OPEN_WAIT mode, this function sets the maximum amount
of time to wait for an alive ET system to appear. If the time is set to zero
(the default), an infinite time is indicated. If broad/multicasting to find a
remote ET system, it is possible to take up to several seconds to determine
whether the system is alive or not -- possible exceeding the time limit.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_sethost">et_open_config_sethost</a>(et_openconfig
config, char *val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this sets the name of the host (or computer) on which the ET system resides.
For opening a local system only, set <em>val</em> to ET_HOST_LOCAL (the
default) or &quot;localhost&quot; (including quotes). For opening a system on
an unknown remote computer only, set it to ET_HOST_REMOTE. For an unknown host
which may be local or remote, set it to ET_HOST_ANYWHERE. Otherwise set <em>val</em>
to the name or dotted-decimal IP address of the desired host. (See next routine
also).<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setcast">et_open_config_setcast</a>(et_openconfig
config, int val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: setting <em>val</em> to ET_BROADCAST (default) means using UDP broadcast IP
packets to determine the location of ET systems so they can be opened. Setting <em>val</em>
to ET_MULTICAST uses the newer UDP multicast IP packets to do the same. Setting
<em>val</em> to ET_BROADANDMULTICAST does both. However setting <em>val</em> to
ET_DIRECT makes a direct connection to the ET system and requires that <em>et_open_config_sethost</em>
use the actual host's name or &quot;localhost&quot; and not ET_HOST_LOCAL,
ET_HOST_REMOTE, or ET_HOST_ANYWHERE. The tcp port number used in the direct
connection is set by <em>et_open_config_setserverport</em> and defaults to
ET_SERVER_PORT, defined in <em>et.h</em> as 11111.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setTTL">et_open_config_setTTL</a>(et_openconfig
config, int val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: when using multicasting, set the TTL value. This sets the number of routers
to hop. The default is one which keeps things on the subnet.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setport">et_open_config_setport</a>(et_openconfig
config, unsigned short val)</span></em><span style='mso-fareast-font-family:
"Times New Roman"'> : this sets the port number of the UDP broadcast
communications. The default is ET_BROADCAST_PORT, defined in <em>et.h</em> as
11111.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setmultiport">et_open_config_setmultiport</a>(et_openconfig
config, unsigned short val)</span></em><span style='mso-fareast-font-family:
"Times New Roman"'> : this sets the port number of the UDP multicast
communications. The default is ET_MULTICAST_PORT, defined in <em>et.h</em> as
11111. It will be necessary to use this routine when opening a Java-based ET
system as broadcast and multicast ports must be different.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setport">et_open_config_setserverport</a>(et_openconfig
config, unsigned short val)</span></em><span style='mso-fareast-font-family:
"Times New Roman"'> : this sets the port number of the tcp server thread of an
ET system. The default is ET_SERVER_PORT, defined in <em>et.h</em> as 11111.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_addbroadcast">et_open_config_addbroadcast</a>(et_openconfig
config, char *val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this adds an IP subnet broadcast address to a list of destinations used in
broadcast discovery of the ET system to be opened. The <em>val</em> argument
may also be set to ET_SUBNET_ALL which specifies all the local subnet broadcast
addresses, or to ET_SUBNET_DEFAULT which specifies the address associated with
the hostname returned by the &quot;uname&quot; routine. There can be at most
ET_MAXADDRESSES (defined in <em>et_private.h</em> as 10) addresses in the list.
Dotted-decimal.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>10.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_removebroadcast">et_open_config_removebroadcast</a>(et_openconfig
config, char *val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this removes an IP subnet broadcast address from a list of destinations used
in broadcast discovery of the ET system to be opened. If there is no such
address on the list, it is ignored. The <em>val</em> argument may also be set
to ET_SUBNET_ALL which specifies all the local subnet broadcast addresses, or
to ET_SUBNET_DEFAULT which specifies the address associated with the hostname
returned by the &quot;uname&quot; routine. Dotted-decimal.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>11.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_addmulticast">et_open_config_addmulticast</a>(et_openconfig
config, char *val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this adds a multicast address to a list of destinations used in multicast
discovery of the ET system to be opened. There can be at most ET_MAXADDRESSES
(defined in <em>et_private.h</em> as 10) addresses on the list. Duplicate
entries are not added to the list. Dotted-decimal.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>12.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_removemulticast">et_open_config_removemulticast</a>(et_openconfig
config, char *val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
:&nbsp; this removes a multicast address from a list of destinations used in multicast
discovery of the ET system to be opened. If there is no such address on the
list, it is ignored. Dotted-decimal.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>13.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman";color:red'>DEPRECATED&nbsp;</span></em><em><span
style='mso-fareast-font-family:"Times New Roman"'>&nbsp;&nbsp;&nbsp; <a
href="user_routines.htm#et_open_config_setaddress">et_open_config_setaddress</a>(et_openconfig
config, char *val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this is replaced by <em>et_open_config_addbroadcast</em> and <em>et_open_config_addmulticast</em>.
For compatibility purposes it is included though it is deprecated. Currently it
adds an IP subnet broadcasting address or a multicasting address to the
appropriate destination list used in discovering the ET system to be opened. If
the address starts with a number from 224 to 239, it's added to the multicast
address list, else it's added to the broadcast list.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>14.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setpolicy">et_open_config_setpolicy</a>(et_openconfig
config, int val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this sets the return policy from an <em>et_open</em> call so that if <em>et_open</em>
generates more than one response from one or more ET systems, different things
can be done. Setting <em>val</em> to ET_POLICY_ERROR returns an error,
ET_POLICY_FIRST opens the first responding system, and ET_POLICY_LOCAL opens
the first responding local system if there is one, and if not, the first
responding system.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>15.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setmode">et_open_config_setmode</a>(et_openconfig
config, int val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: setting <em>val</em> to ET_HOST_AS_LOCAL (default) means users which are on
the same machine as the ET system (local) will realize this and take advantage
of it. However, setting <em>val</em> to ET_HOST_AS_REMOTE means users will be
treated as if they were remote even if they are local. All transactions will be
through the ET system's server and not through shared memory.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>16.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_open_config_setdebugdefault">et_open_config_setdebugdefault</a>(et_openconfig
config, int val)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this sets the default level of debugging output. Set <em>val</em> to:
ET_DEBUG_NONE for no output, ET_DEBUG_SEVERE for output describing severe
errors, ET_DEBUG_ERROR for output describing all errors, ET_DEBUG_WARN for
output describing warnings and errors, and ET_DEBUG_INFO for output describing
all information, warnings, and errors..<o:p></o:p></span></p>

<p>More on remote ET systems can be found in the chapter entitled <a
href="remote_et.htm">Remote ET</a>. All of the above &quot;set&quot; functions
have their counterpart &quot;get&quot; functions as well.</p>

<p>Once an ET system has been opened, users can use the id as a handle for that
particular system. Users can open more than one system at a time, referring to
each by their respective handles.</p>

<h3><a name=Definition><span style='mso-fareast-font-family:"Times New Roman"'>Definition
of Stations</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Definition<o:p></o:p></span></h4>

<p>Analogous to the opening or creation of ET systems, users begin by declaring
a variable of type <em>et_statconfig</em>. Once this variable is declared, it
must be initialized before further use. Thus users must also call the function <em><a
href="user_routines.htm#et_station_config_init">et_station_config_init</a>(et_statconfig*
sconfig)</em>. After initialization, calls can be made to functions which set
various properties of the specific configuration. Calls to these setting
functions will fail unless the configuration is first initialized.</p>

<p>When the user is finished using a configuration variable, the user must call
<em><a href="user_routines.htm#et_station_config_destroy">et_station_config_destroy</a>(et_statconfig
sconfig)</em> with the configuration as an argument in order to properly
release all memory used.</p>

<p>The functions used to SET station parameters are listed below along with an
explanation for each: </p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setblock"><em>et_station_config_setblock</em></a>(et_statconfig
sconfig, int val) : setting <em>val</em> to ET_STATION_BLOCKING makes the
station block by looking at all events in the system, while setting it to
ET_STATION_NONBLOCKING allows the station to fill up a cue of events and when
that is full, events flow to the next station downstream. The default is
blocking.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setcue"><em>et_station_config_setcue</em></a>(et_statconfig
sconfig, int val) : when in nonblocking mode, this sets the maximum number of
events that are to be in the station's input list ready for reading (in so far
as it is possible). The default is 10.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setprescale"><em>et_station_config_setprescale</em></a>(et_statconfig
sconfig, int val) : when in blocking mode, every Nth event of interest is sent
to the user by setting the <em>val</em> to N. The default is 1.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setuser"><em>et_station_config_setuser</em></a>(et_statconfig
sconfig, int val) : setting <em>val</em> to ET_STATION_USER_SINGLE allows only
one user process to attach to this station, while setting it to
ET_STATION_USER_MULTI allows multiple users to attach. Setting it to a positive
integer allows only that number of attachments to the station. The default is
multiuser.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setrestore"><em>et_station_config_setrestore</em></a>(et_statconfig
sconfig, int val) : when a process dies or detaches from a station, the events
it read but did not write are recovered and sent to a station's output list if <em>val</em>
is set to ET_STATION_RESTORE_OUT. Similarly, it can be sent to the input list
with ET_STATION_RESTORE_IN or back to grandcentral station with
ET_STATION_RESTORE_GC. The default is restoration to the output list.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setselect"><em>et_station_config_setselect</em></a>(et_statconfig
sconfig, int val) : for selection of all events and no filtering set <em>val</em>
to ET_STATION_SELECT_ALL. For selection using a user-defined routine loaded
through a shared library set it to ET_STATION_SELECT_USER. For mimicking the DD
system, set it to ET_STATION_SELECT_MATCH. The last option takes an event's
array of control integers and does a comparison with the station's selection
integers or words. The results of all logical comparisons are ORed together. An
event is selected if result = 1. See below for more details. The default mode
is ET_STATION_SELECT_ALL.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setselectwords"><em>et_station_config_setselectwords</em></a>(et_statconfig
sconfig, int *val) : the argument is an array of integers used when the station
select mode is set to ET_STATION_SELECT_MATCH or possibly
ET_STATION_SELECT_USER (depending on what algorithm a user-defined, event
selection routine uses). For DD users, it is identical to the old &quot;p2ctl&quot;
element of the old &quot;fmode&quot; structure. The default is to set all
integers to a value of &quot;-1&quot;.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setlib"><em>et_station_config_setlib</em></a>(et_statconfig
sconfig, char *val) : for a select mode of ET_STATION_SELECT_USER, <em>val</em>
is the name of the shared library containing the function to be used for
selecting events.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setfunction"><em>et_station_config_setfunction</em></a>(et_statconfig
sconfig, char *val) : for a select mode of ET_STATION_SELECT_USER, <em>val</em>
is the name of the function to be used for selecting events.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l2 level1 lfo4;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>10.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_config_setclass"><em>et_station_config_setclass</em></a>(et_statconfig
sconfig, char *val) : when defining a station on a Java-based ET system with a
select mode of ET_STATION_SELECT_USER, <em>val</em> is the name of the class
containing the method to be used for selecting events.<o:p></o:p></span></p>

<p>Just a few notes on some of the details. When selecting the
ET_STATION_RESTORE_IN mode for event restoration, be aware of a few things. If
there is only one process attached to such a station and it dies, the events go
to the output list in order to prevent them from being lost to a station with
no event readers. If there is more than one process attached and one dies, its
events will be put into the input list with the assumption that the recovered
events are higher in priority to those already in the station's input list. To
be exact, the recovered high priority events are placed &quot;above&quot;
(sooner to be read) all other events, and the recovered low priority events are
placed below high priority but above all other low priority events. There are
no guarantees that the recovered events will be in their original order.</p>

<p>The mode denoted by ET_STATION_SELECT_MATCH has the following behavior. A
check is made to see if the first element of the station's selection array is
equal to -1. If it is, then the first element of the event's control array is
ignored and the event is not marked for selection. Similar comparisons continue
for each element of the arrays. Thus, if all elements of a station's selection
array are set to -1, the event will NOT be selected. If the first element of
the station's selection array is not -1 but is equal to the first element of
the event's control array, then the event is selected. If the bitwise AND
(&amp;) of the station's and event's second elements is true, then the event is
selected. This pattern is repeated with the even elements 0,2,4, 6, ...
compared for equality and the odd elements 1, 3, 5, ... compared for bitwise
AND. If any of the comparisons are true, then the event is selected. This is
the logic employed by the old DD system in its &quot;conditional&quot; mode.</p>

<p>Similar functions to those mentioned above are available to GET the values
associated with a station configuration.</p>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Examples<o:p></o:p></span></h4>

<p>Since one of the more difficult tasks facing the first time user is how to
properly configure a station, let's look at two examples first:</p>

<p><code><span style='font-size:10.0pt'>/* declarations */</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_stat_config sconfig;</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>/* set values */</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_init(&amp;sconfig);</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setselect(sconfig,
ET_STATION_SELECT_ALL);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setblock(sconfig,
ET_STATION_NONBLOCKING);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setuser(sconfig,
ET_STATION_USER_SINGLE);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setrestore(sconfig,
ET_STATION_RESTORE_GC);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setcue(sconfig,
20);</span></code></p>

<p>Here is a station to which only 1 user may attach. It accepts all events no
matter what values the selection integers have. It is nonblocking, meaning that
once the system fills up its input list with a maximum of 20 events, all other
events will bypass the station and be placed somewhere downstream. If the user
process should die, the events that it owns will be placed back in grandcentral
station, and no one else will get them.</p>

<p>A more complicated example can be seen below:<br>
&nbsp;<br>
<code><span style='font-size:10.0pt'>/* declarations */</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>int selections[] = {17,22,-1,-1};</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_stat_config sconfig;</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>/* set values */</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_init(&amp;sconfig);</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setselect(sconfig,
ET_STATION_SELECT_ALL);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setblock(sconfig,
ET_STATION_BLOCKING);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setuser(sconfig,
ET_STATION_USER_MULTI);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setrestore(sconfig,
ET_STATION_RESTORE_IN);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setprescale(sconfig,
5);</span></code><span style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setselect(sconfig,
ET_STATION_SELECT_USER);</span></code><span style='font-size:10.0pt;font-family:
"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>et_station_config_setselectwords(sconfig,
selections);</span></code><span style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>if
(et_station_config_setlib(sconfig, &quot;/stuff/libet_user.so&quot;) ==
ET_ERROR) {</span></code><span style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>&nbsp; printf(&quot; cannot set
library\n&quot;);</span></code><span style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>}</span></code><span
style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>if
(et_station_config_setfunction(sconfig, &quot;et_my_function&quot;) ==
ET_ERROR) {</span></code><span style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>&nbsp; printf(&quot;cannot set
function\n&quot;);</span></code><span style='font-size:10.0pt;font-family:"Courier New"'><br>
</span><code><span style='font-size:7.5pt'>}</span></code></p>

<p>In the above example, there is a station to which multiple users can attach.
Its select mode (ET_STATION_SELECT_USER) says that the user will be supplying a
function in a shared library to determine which events are to be selected.
Since this station is set to block events, all events which meet its selection
criteria are placed in its input list, even if it means slowing the whole ET
system down to a crawl. Actually, the prescale factor imposes an additional
selection criterion since it is in blocking mode. Thus, only every 5th event
which passes through the user's filter gets placed in the station's input list.
Its restore mode says that if this user process should ever die, the events
that it currently owns will be placed in the station's input list. </p>

<h3><a name=Creation><span style='mso-fareast-font-family:"Times New Roman"'>Creation
&amp; Removal of Stations</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<p>Once a configuration is defined, it is passed to the function <em><a
href="user_routines.htm#et_station_create">et_station_create</a>(et_sys_id id,
et_stat_id *stat_id, char *stat_name, et_statconfig sconfig)</em>. In addition
to the arguments, <em>id</em> and <em>sconfig</em>, which have already been
covered, the user must supply a unique name and is returned a station
identification number <em>stat_id</em>. This station id is used in other
station-related routines.</p>

<p>Possible errors returned by the function <em>et_station_create</em> are
ET_ERROR_EXISTS if a station by that name exists already, ET_ERROR_TOOMANY if
the user is the second user to try to attach to a station designated for one
user only, or ET_ERROR for other unrecoverable errors. If the user is a remote
consumer, the error ET_ERROR_REMOTE indicates a bad arg or not being able to
allocate memory, and ET_ERROR_READ &amp; ET_ERROR_WRITE indicate problems with
the network communication.</p>

<p>Removing stations can be accomplished by calling <em><a
href="user_routines.htm#et_station_remove">et_station_remove</a>(et_sys_id id,
et_stat_id stat_id)</em>.</p>

<h3><a name=Attaching><span style='mso-fareast-font-family:"Times New Roman"'>Attaching
to and Detaching from Stations</span></a><span style='mso-fareast-font-family:
"Times New Roman"'><o:p></o:p></span></h3>

<p>Until a user's process attaches to a station, the station is placed in an idle
mode, meaning, that it is not participating in the flow of events - it is
getting by-passed. Once a process attaches to a station, it becomes active and
begins to receive events. This logic ensures that events do not get stuck in
stations with no one to process them or that the entire flow of events does not
come to a grinding halt.</p>

<p>Attach to a station by calling <em><a
href="user_routines.htm#et_station_attach">et_station_attach</a>(et_sys_id id,
et_stat_id stat_id, et_att_id *att)</em>. This routine returns a unique
attachment number, <em>att</em>, by which a process identifies itself in
certain function calls. For example, when reading and writing events, this
parameter is required. In this manner, a single process can attach to different
stations and yet be differentiated by the ET system. With this type of
interface, for example, a user could conceivably have multiple threads with
each attached to the same station on a different attachment. The idea is that
this id represents a single attachment to a single station. This attachment id
is also a way of specifying the ownership of an event - which is important in
setting limits on how and where events can flow.</p>

<p>To detach from a station call <em><a
href="user_routines.htm#et_station_detach">et_station_detach</a>(et_sys_id id,
et_att_id att)</em>. If a user is the last one to detach from a station, all of
the events left in the station's input list are passed to the output list. In
addition, after a user detaches, a search is made for any events that were read
but not written back into the ET system by <em>att</em>. They are recovered and
placed according to the station's property set by the function <em>et_station_config_setrestore</em>.</p>

<h3><a name=Changing><span style='mso-fareast-font-family:"Times New Roman"'>Changing
a Station's</span></a><span style='mso-fareast-font-family:"Times New Roman"'>
Behavior on the Fly<o:p></o:p></span></h3>

<p>Some of the parameters that define a station's behavior as well as its
position in the linked list of stations may be modified while an ET system is
operating. The only thing that cannot be done is to load new user-defined event
selection functions or to change the select mode of the station. </p>

<p>The functions used to SET station parameters are listed below along with an
explanation for each: </p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setposition"><em>et_station_setposition</em></a>(et_sys_id
id, et_stat_id stat_id, int val) : setting <em>val</em> to a positive integer places
the station at that position in the linked list of active and idle stations.
The position of 0 is prohibited as the first position is reserved for
GRAND_CENTRAL station.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setblock"><em>et_station_setblock</em></a>(et_sys_id
id, et_stat_id stat_id, int val) : setting <em>val</em> to ET_STATION_BLOCKING
makes the station block by looking at all events in the system, while setting
it to ET_STATION_NONBLOCKING allows the station to fill up a cue of events and
when that is full, events flow to the next station downstream.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setcue"><em>et_station_setcue</em></a>(et_sys_id
id, et_stat_id stat_id, int val) : when in nonblocking mode, this sets the
maximum number of events that are to be in the station's input list ready for
reading (in so far as it is possible).<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setprescale"><em>et_station_setprescale</em></a>(et_sys_id
id, et_stat_id stat_id, int val) : when in blocking mode, every Nth event of
interest is sent to the user by setting the <em>val</em> to N.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setuser"><em>et_station_setuser</em></a>(et_sys_id
id, et_stat_id stat_id, int val) : setting <em>val</em> to
ET_STATION_USER_SINGLE allows only one user process to attach to this station,
while setting it to ET_STATION_USER_MULTI allows multiple users to attach.
Setting it to a positive integer allows only that number of attachments to the
station.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setrestore"><em>et_station_setrestore</em></a>(et_sys_id
id, et_stat_id stat_id, int val) : when a process dies or detaches from a
station, the events it read but did not write are recovered and sent to a
station's output list if <em>val</em> is set to ET_STATION_RESTORE_OUT.
Similarly, it can be sent to the input list with ET_STATION_RESTORE_IN or back
to grandcentral station with ET_STATION_RESTORE_GC.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l3 level1 lfo6;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_station_setselectwords"><em>et_station_setselectwords</em></a>(et_sys_id
id, et_stat_id stat_id, int *val) : the argument is an array of integers used
when the station select mode is set to ET_STATION_SELECT_MATCH or possibly
ET_STATION_SELECT_USER (depending on what algorithm a user-defined, event
selection routine uses). For DD users, it is identical to the old
&quot;p2ctl&quot; element of the old &quot;fmode&quot; structure.<o:p></o:p></span></p>

<p>Similar functions to those mentioned above are available to GET the values
associated with a station's configuration. Note that none of the above
functions are allowed to modify GRAND_CENTRAL station.</p>

<h3><a name=Handling><span style='mso-fareast-font-family:"Times New Roman"'>Handling
Events</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<p>After opening an ET system, creating a station, and attaching to it, users
are ready to start creating, reading and writing events.</p>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Creating<o:p></o:p></span></h4>

<p>When creating an new event, users are called producers. There are two
routines that can be used for doing this. The first is for getting a single,
blank event by calling <a href="user_routines.htm#et_event_new">e<em>t_event_new</em></a><em>(et_sys_id
id, et_att_id att, et_event **pe, int wait, struct timespec *time, int size)</em>.
At this point users are familiar with the first two arguments <em>id</em>, and <em>att</em>.
The third is a pointer to a pointer to an event. In the code, declare a pointer
to an event (i.e. et_event *pe) and pass its address. Upon a successful return,
<em>pe</em> points to a new event. The fourth arg, <em>wait</em>, is a flag
that can be set by using some predefined macros. By setting this <em>wait</em>
to ET_SLEEP, the call will block until the next free event is available. By
setting it to ET_ASYNC, the call returns immediately with a status. And by
setting it to ET_TIMED, the call waits for the amount of time given by the <em>time</em>
arg if no events are immediately available. Be warned that the time specified
with ET_TIMED mode is a minimum. First, read access to a station's input list
must be obtained and that could take some additional time. Finally, the last
arg is the requested size in bytes. If the size is larger than those the system
was created with, the newly created event will be declared a special
&quot;temporary&quot; event and will allocate the necessary memory. (This, of
course, slows things down).</p>

<p>Similarly the user can call <em><a href="user_routines.htm#et_events_new">et_events_new</a>(et_sys_id
id, et_att_id att, et_event *pe[], int wait, struct timespec *time, int size,
int num, int *nread)</em> for obtaining an array of new events. In this case, <em>pe</em>
is an array of pointers to events, <em>num</em> is the number of events
desired, and <em>nread</em> is the number of events actually read and placed
into the array (which may be less than what was asked for).</p>

<p>Finally, the user can call <em><span style='color:blue;font-style:normal;
mso-bidi-font-style:italic'><a href="user_routines.htm#et_events_new_group"><i
style='mso-bidi-font-style:normal'>et_events_new_group</i></a></span><span
style='color:blue'>(</span>et_sys_id id, et_att_id att, et_event *pe[], int
wait, struct timespec *time, int size, int num, int group, int *nread)</em><span
style='mso-fareast-font-family:"Times New Roman"'>. This is similar to <i
style='mso-bidi-font-style:normal'>et_events_new</i> with the exception that
only events of the specified event group will be read. There are situations in
which several producers need to grab and fill new events. In order to prevent a
single producer from grabbing too many events and slowing down or stopping
other producers, events in an et system may be divided into groups. If each
producer uses this function with a different group number, none will be starved
for events. To get only 1 event from a group, call <i style='mso-bidi-font-style:
normal'><a href="user_routines.htm#et_event_new_group">et_event_new_group</a></i>.
An alternative to using these two functions for getting new events of a
specific group is to call the function <i style='mso-bidi-font-style:normal'><a
href="user_routines.htm#et_system_setgroup">et_system_setgroup</a></i></span><i
style='mso-bidi-font-style:normal'>(</i><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman"'>et_sys_id id, int group)</span></i><span
style='mso-fareast-font-family:"Times New Roman"'> which will set a default
group to retrieve events from. Any subsequent calls to <i style='mso-bidi-font-style:
normal'>et_event(s)_new</i> will only retrieve events from the default group.
Using <i style='mso-bidi-font-style:normal'>et_system_setgroup </i>to set the
group to 0 resets things so events are retrieved from all groups.</span></p>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Reading<o:p></o:p></span></h4>

<p>When reading events, users are called consumers. There are two routines that
can be used for reading. The first is for reading single events and has the
form <em><a href="user_routines.htm#et_event_get">et_event_get</a>(et_sys_id
id, et_att_id att, et_event **pe, int wait, struct timespec *time)</em>. The
arguments are the same as those for creating a new event but without the size.</p>

<p>The second type of routine is for reading an array of events by using the
call, <em><a href="user_routines.htm#et_events_get">et_events_get</a>(et_sys_id
id, et_att_id att, et_event **pe, int wait, struct timespec *time, int num, int
*nread)</em>. The arguments are almost the same as for reading single events
with the exception that the user passes an array of pointers to events. There
are also additional arguments specifying the number of events the user wants to
read and the number actually read. Although less events may be returned, the
user will never get more than the amount asked for.</p>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Writing<o:p></o:p></span></h4>

<p>After reading an event, the user has access to a number of its properties
for manipulation. Routines to accomplish this are given in the following list: </p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_setpriority">et_event_setpriority</a>(et_event
*pe, int pri)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this routine sets the priority of an event, <em>pri</em>, to be ET_HIGH or
ET_LOW (default). A high priority means that such an event gets placed below
other high priority but above low priority events when placed in a station's
input or output list. Thus, high priority events are always the first to be
read. No other guarantees are made.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getpriority">et_event_getpriority</a>(et_event
*pe, int *pri)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this routine returns the priority of an event.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_setlength">et_event_setlength</a>(et_event
*pe, int len)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: sets the length or size of the event's data in bytes. This may not be larger
than the total amount of memory available.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getlength">et_event_getlength</a>(et_event
*pe, int *len)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: returns the length of the event's data in bytes.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_setcontrol">et_event_setcontrol</a>(et_event
*pe, int con[], int num)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: sets the control information of an event. The <em>con</em> argument is an
array of integers which control the flow of the event through the ET system,
and the <em>num</em> argument gives the size of the array. The DD system had
ctlw1, ctlb1, ctlw2, and ctlb2 as four integers used to carry this information.
These integers are now replaced respectively by an array of integers. The size
of this array is determined at compile time by ET_STATION_SELECT_INTS which
defaluts to four..<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getcontrol">et_event_getcontrol</a>(et_event
*pe, int con[])</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: gets the event's array of control information.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getdata">et_event_getdata</a>(et_event *pe,
void **data)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this routine returns a void pointer to the start of an event's data location.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getdatastatus">et_event_getdatastatus</a>(et_event
*pe, int *status)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this routine gets the status of an event's data. It can be either ET_DATA_OK,
ET_DATA_CORRUPT (not currently used), or ET_DATA_POSSIBLY_CORRUPT. Data is
ET_DATA_OK unless a previous user got the event from the system and then exited
or crashed without putting it back. If the ET system recovers that event and
puts it back into the system, its status becomes ET_DATA_POSSIBLY_CORRUPT as a
warning to others.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_setendian">et_event_setendian</a>(et_event
*pe, int endian)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: though normally the ET system automatically keeps track of the endianness of
an event's data, this routine can override and directly set the endian value of
the data. It may be ET_ENDIAN_BIG, ET_ENDIAN_LITTLE, ET_ENDIAN_LOCAL (same
endian as local host), ET_ENDIAN_NOTLOCAL (opposite endian as local host), or
ET_ENDIAN_SWITCH. See the chapter <a href="remote_et.htm">Remote ET</a>.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>10.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_getendian">et_event_getendian</a>(et_event
*pe, int *endian)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this routine returns the endian of an event's data - either ET_ENDIAN_BIG or
ET_ENDIAN_LITTLE. See the chapter Remote ET.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>11.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_needtoswap">et_event_needtoswap</a>(et_event
*pe, int *swap)</span></em><span style='mso-fareast-font-family:"Times New Roman"'>
: this routine tells the caller if an event's data needs to be swapped or not
by returning either ET_SWAP or ET_NOSWAP. See the chapter Remote ET.<o:p></o:p></span></p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.5in;text-indent:-.25in;mso-list:l0 level1 lfo8;tab-stops:list .5in'><![if !supportLists]><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>12.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]><em><span
style='mso-fareast-font-family:"Times New Roman"'><a
href="user_routines.htm#et_event_CODAswap">et_event_CODAswap</a>(et_event *pe)</span></em><span
style='mso-fareast-font-family:"Times New Roman"'> : this routine swaps the
data of an event in CODA format.<o:p></o:p></span></p>

<p>After setting an event's priority, data length, control array and perhaps its
endian value, and writing data, the user is finished with the event and wishes
to place it into the ET system. Or perhaps the user has only read the data and
is done with the event. In any case, the event must be written back into the
system by two possible means. Either write a single event with <em><a
href="user_routines.htm#et_event_put">et_event_put</a>(et_sys_id id, et_att_id
att, et_event *pe)</em> or write multiple events with <em><a
href="user_routines.htm#et_events_put">et_events_put</a>(et_sys_id id,
et_att_id att, et_event *pe[], int num)</em>. In the latter case, the user
gives the number, <em>num</em>, of events to put back in the array <em>pe</em>.
All events will always be successfully written and will never block as a
station's output list has enough room for all events in the whole ET system.</p>

<p>The ET system checks to see if the <em>att</em> that read the event is the
same one that is writing it. If it isn't, the call returns an error and nothing
is written.</p>

<h4><span style='mso-fareast-font-family:"Times New Roman"'>Dumping<o:p></o:p></span></h4>

<p>After reading existing events or creating new ones, it's possible that these
events may no longer be of interest to the user or any other user on the
system. In that case, one may dump or recycle these events by calls to two
routines. They are identical to the routines <em>et_event(s)_put</em> in their
arguments. The first is <em><a href="user_routines.htm#et_event_dump">et_event_dump</a>(et_sys_id
id, et_att_id att, et_event *pe)</em> and dumps a single event.
Similarly,&nbsp; <em><a href="user_routines.htm#et_events_dump">et_events_dump</a>(et_sys_id
id, et_att_id att, et_event *pe[], int num)</em> dumps multiple events.</p>

<h3><a name=Closing><span style='mso-fareast-font-family:"Times New Roman"'>Closing
an ET System</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<p>When finished using an ET system, it can be removed from a process' memory
by using the <em><a href="user_routines.htm#et_close">et_close</a>(et_sys_id
id)</em> routine. This unmaps the ET system memory from the process and makes
it inaccessible. It also stops the heartbeat and system-heartbeat-monitor
threads. In order to close, all attachments must be detached first. However,
there is another function <em><a href="user_routines.htm#et_forcedclose">et_forcedclose</a>(et_sys_id
id)</em> which will automatically do all the detaching first. Of course, the ET
system continues to function for other processes as before.</p>

<p><a href="creating_system.htm"><span style='mso-no-proof:yes;text-decoration:
none;text-underline:none'><img border=0 width=31 height=31 id="_x0000_i1026"
src=left.gif alt=Previous></span></a><a href="programming_details.htm"><span
style='mso-no-proof:yes;text-decoration:none;text-underline:none'><img
border=0 width=31 height=31 id="_x0000_i1025" src=right.gif alt=Next></span></a></p>

</div>

</body>

</html>
