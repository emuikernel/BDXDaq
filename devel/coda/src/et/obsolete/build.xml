<?xml version="1.0" ?>

<project name="et"  default="compile" basedir=".">
    
    <!-- Project-wide settings -->
    
    <!-- Directories -->
    <property name="src.dir"       value="java" />
    <property name="build.dir"     value="build" />
    <property name="build.classes" value="${build.dir}/classes" />
    <property name="build.lib"     value="${build.dir}/lib" />
    <property name="doc.dir"       value="doc/javadoc" />
    
    <!-- Classpath -->
    <path id="classpath">
        <fileset dir="java/jars">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <!-- Version -->
    <property name="et.version" value="9.0" />
    
    <!-- Debug -->
    <property name="javac.debug" value="on" />

    <!-- Tragets -->
    
    <!-- Help -->
    <target name="help">
        <echo message="Usage: ant [ant options] &lt;target1&gt; [target2 | target3 | ...]" />
        <echo message="" />
        <echo message="       targets:" />
        <echo message="       help     - print out usage" />
        <echo message="       env      - print out build file variables' values" />
        <echo message="       compile  - compile java files" />
        <echo message="       clean    - remove class files" />
        <echo message="       cleanall - remove all generated files" />
        <echo message="       jar      - compile and create jar file" />
        <echo message="       all      - clean, compile and create jar file" />
        <echo message="       javadoc  - create javadoc documentation" />
        <echo message="       prepare  - create necessary directories" />
    </target>

    <!-- Environment -->
    <target name="env">
        <echo message="Ant environment:" />
        <echo message="" />
        <echo message="    src.dir       = ${src.dir}" />
        <echo message="    build.dir     = ${build.dir}" />
        <echo message="    build.lib     = ${build.lib}" />
        <echo message="    build.classes = ${build.classes}" />
        <echo message="    doc.dir       = ${doc.dir}" />
        <echo message="    javac.debug   = ${javac.debug}" />
    </target>

    <!-- Prepare things by creating directories -->
    <target name="prepare">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.classes}" />
        <mkdir dir="${build.lib}" />
    </target>

    <!-- Clean by removing class files -->
    <target name="clean" description="Remove all class files">
        <delete failonerror="no" >
            <fileset dir="${build.classes}" includes="**/*.class" />
        </delete>
    </target>

    <!-- Clean by removing build & doc directories -->
    <target name="cleanall" depends="clean" description="Remove all generated files.">
        <delete dir="${build.dir}" failonerror="no" />
        <delete dir="${doc.dir}"   failonerror="no" />
    </target>

    <!-- Compile all source -->
    <target name="compile" depends="prepare" description="Compiles all source code.">
        <javac destdir="${build.classes}" debug="${javac.debug}" >
            <src path="${src.dir}" />
            <classpath refid="classpath" />
        </javac>
    </target>

    <!-- Create Jar file -->
    <target name="jar" depends="compile" description="Generates jar file.">
        <jar jarfile="${build.lib}/et-${et.version}.jar">
          <!-- Dont include Consumer, Producer, and StartET.class files -->
          <fileset dir="${build.classes}" excludes="*.class" />
        </jar>
    </target>

    <!-- Clean, compile, and create jar -->
    <target name="all" depends="clean,jar" description="Cleans, compile, then builds jar file." />

    <!-- Javadoc -->
    <target name="javadoc" description="Create javadoc.">
        <mkdir dir="${doc.dir}" />
        <javadoc packagenames="org.jlab.coda.*"
                 sourcepath="java"
                 destdir="${doc.dir}"
                 use="true" >
            <classpath refid="classpath" />
        </javadoc>
    </target>

</project>
