#
# init.itcl
# ----------------------------------------------------------------------
# Invoked automatically upon startup to customize the interpreter
# for [incr Tcl].
# ----------------------------------------------------------------------
#   AUTHOR:  Michael J. McLennan       Phone: (610)712-2842
#            AT&T Bell Laboratories   E-mail: michael.mclennan@att.com
#
#      RCS:  $Id: init.itcl,v 1.1.1.1 1996/08/21 19:29:53 heyes Exp $
# ----------------------------------------------------------------------
#                 Copyright (c) 1994  AT&T Bell Laboratories
# ======================================================================
# Permission to use, copy, modify, and distribute this software and its
# documentation for any purpose and without fee is hereby granted,
# provided that the above copyright notice appear in all copies and that
# both that the copyright notice and warranty disclaimer appear in
# supporting documentation, and that the names of AT&T Bell Laboratories
# any of their entities not be used in advertising or publicity
# pertaining to distribution of the software without specific, written
# prior permission.
#
# AT&T disclaims all warranties with regard to this software, including
# all implied warranties of merchantability and fitness.  In no event
# shall AT&T be liable for any special, indirect or consequential
# damages or any damages whatsoever resulting from loss of use, data or
# profits, whether in an action of contract, negligence or other
# tortuous action, arising out of or in connection with the use or
# performance of this software.
# ======================================================================

#
# Provide transparent access to all [incr Tcl] commands
#
import add ::itcl

#
# Add commands to the "mkindex-parser" namespace to support the
# generation of "tclIndex" files for the autoloading facility.
#
namespace ::tcl::mkindex-parser {
    #
    # HANDLE:  class name {definition...}
    #
    ::proc class {name defn} {
        global index scriptFile
        set name [mkindex_path $name]
        append index "set [list auto_index($name)]"
        append index " \"source \$dir/$scriptFile\"\n"
        namespace $name $defn
    }
    set commands(class) class
    set commands(itcl::class) class
    set commands(::itcl::class) class
    set commands(itcl_class) class
    set commands(::itcl_class) class

    #
    # HANDLE:  body name arglist body
    #
    ::proc body {name arglist body} {
        global index scriptFile
        set name [mkindex_path $name]
        append index "set [list auto_index($name)]"
        append index " \"source \$dir/$scriptFile\"\n"
    }
    set commands(body) body
    set commands(itcl::body) body
    set commands(::itcl::body) body

    #
    # HANDLE:  configbody name body
    #
    ::proc configbody {name body} {
        global index scriptFile
        set name [mkindex_path $name]
        append index "set [list auto_index($name)]"
        append index " \"source \$dir/$scriptFile\"\n"
    }
    set commands(configbody) configbody
    set commands(itcl::configbody) configbody
    set commands(::itcl::configbody) configbody
}


# ----------------------------------------------------------------------
#  USAGE:  local <className> <objName> ?<arg> <arg>...?
#
#  Creates a new object called <objName> in class <className>, passing
#  the remaining <arg>'s to the constructor.  Unlike the usual
#  [incr Tcl] objects, however, an object created by this procedure
#  will be automatically deleted when the local call frame is destroyed.
#  This command is useful for creating objects that should only remain
#  alive until a procedure exits.
# ----------------------------------------------------------------------
public proc ::itcl::local {class name args} {
    set ptr [uplevel eval $class $name $args]
    uplevel [list set itcl-local-$ptr $ptr]
    uplevel [list trace variable itcl-local-$ptr u "delete object $ptr"]
    return $ptr
}
