h26286
s 00009/00000/00101
d D 1.12 10/02/26 10:58:28 boiarino 12 11
c *** empty log message ***
e
s 00008/00003/00093
d D 1.11 09/11/06 12:24:20 boiarino 11 10
c *** empty log message ***
e
s 00001/00001/00095
d D 1.10 08/09/04 09:08:06 boiarino 10 9
c *** empty log message ***
e
s 00001/00008/00095
d D 1.9 08/04/01 17:23:16 boiarino 9 8
c *** empty log message ***
e
s 00014/00008/00089
d D 1.8 08/03/29 13:12:17 boiarino 8 7
c fix level1
c 
e
s 00002/00001/00095
d D 1.7 08/03/21 14:55:43 boiarino 7 6
c *** empty log message ***
e
s 00008/00002/00088
d D 1.6 08/03/21 12:42:54 boiarino 6 5
c *** empty log message ***
e
s 00004/00003/00086
d D 1.5 08/03/20 17:42:23 boiarino 5 4
c setForceSyncInterval(10), add v1495 stuff
c 
e
s 00007/00000/00082
d D 1.4 08/03/17 11:18:28 boiarino 4 3
c add v1495tcpServer
c 
e
s 00009/00000/00073
d D 1.3 06/10/23 13:59:15 boiarino 3 2
c *** empty log message ***
e
s 00002/00006/00071
d D 1.2 06/09/15 21:41:53 boiarino 2 1
c *** empty log message ***
e
s 00077/00000/00000
d D 1.1 06/05/26 10:30:30 boiarino 1 0
c date and time created 06/05/26 10:30:30 by boiarino
e
u
U
f e 0
t
T
I 1
#
D 9
# bootscr for clastrig2
E 9
I 9
# bootscript for clastrig2 (VXI/VME trigger supervisor crate in Hall B)
E 9
#

# adds router 
cd "$CODA/VXWORKS_ppc/bootscripts"
< routeadd_mot.boot

#  initializations for all rocs
cd "$CODA/VXWORKS_ppc/bootscripts"
< all.boot



#  standard CLAS libraries
cd "$CODA/VXWORKS_ppc/obj"
ld < all_rocs.o

#set env variables
cd "$CODA/VXWORKS_ppc/bootscripts"
< vxbootenv.boot



D 8
#
cd "$CODA/VXWORKS_ppc/obj"
ld < level1_ppc.o
cd "$CODA/VXWORKS_ppc/bin"
E 8
I 8

# level1 stuff
cd "$CLON/VXWORKS_ppc/bin"
ld < level1
E 8
ld < vme_server
I 8
D 9

##### old #####
#####cd "$CODA/VXWORKS_ppc/obj"
#####ld < level1_ppc.o
#####cd "$CODA/VXWORKS_ppc/bin"
#####ld < vme_server

E 9
E 8
# should we spawn it with bigger stack ???
sp vme_server


# load CLAS translation library
cd "$CODA/VXWORKS_ppc/lib"
ld < libcodatt.so


#Load coda_roc
cd "$CODA/VXWORKS_ppc/bin"
ld < coda_ts
ld < tcpServer.o
I 2
ld < blaster.o
ld < blastee.o
E 2

D 2
# our ts library
#  standard CLAS libraries
#cd "$CLON_VXWORKS/code"
#ld < blaster.ppco
#ld < blastee.ppco
E 2

D 2

E 2
# should we load entire 'librol.so' ???
cd "$CODA/VXWORKS_ppc/obj"
I 5
ld < v1495.o
E 5
ld < ts.o
I 8
ld < utload.o
E 8

D 8

E 8
# force sync events
D 11
taskSpawn "FORCE_SYNC",119,0,6000,ts2syncTask
E 11
I 11
taskSpawn "FORCE_SYNC",125,0,6000,ts2syncTask
E 11
I 5
D 6
# force sync events every 10 seconds
setForceSyncInterval(10)
E 6
E 5

I 6

# v1495 initialization
D 11
v1495ScalersReadoutStart(0x510000)
E 11
I 11
v1495ScalersReadoutAdd(0x08511000,119,0x08510800)

# TS registers: they are not in v1495, but it was convenient to read them here
v1495ScalersReadoutAdd(0xed0000,54,0)

v1495ScalersReadoutStart()
E 11
D 8
# v1495 scaler's readout every 2 seconds (if zero - no readout (default))
D 7
v1495SetScalersReadInterval(2)
E 7
I 7
##v1495SetScalersReadInterval(2)
v1495SetScalersReadInterval(0)
E 8
I 8
# v1495 scaler's readout every 1 second (if zero - no readout (default))
v1495SetScalersReadInterval(1)
E 8
E 7



E 6
taskDelay(sysClkRateGet()*5)

taskSpawn "ROC",200,0,500000,coda_roc,"-session","clasprod","-objects","clastrig2 TS","-i"

taskDelay(sysClkRateGet()*5)

taskSpawn "TCP_SERVER",250,0,100000,tcpServer

I 4

#v1495's server
D 5
ld < /usr/local/clas/devel/coda/src/rol/VXWORKS_ppc/obj/v1495.o
sp v1495tcpServer
###taskSpawn "TCP_SERVER",250,0,100000,v1495tcpServer
E 5
I 5
D 10
taskSpawn "V1495SRV",250,0,100000,v1495tcpServer
E 10
I 10
D 11
taskSpawn "V1495SRV",250,0,100000,v1495tcpServer0
E 11
I 11
taskSpawn "V1495SRV",250,0,200000,v1495tcpServer1
E 11
E 10
E 5


E 4
#ts ROC
 
I 3
#
#Ed's test
# td FORCE_SYNC
# ld < /u/home/jastrzem/c/ts_5/ppc/ts5_local_fp3.o
# ts5_local_fp3
# 300
# 40000000
# 13
#
E 3

I 12
#
# Ed's test
# ld < /u/home/jastrzem/c/vme-int/ppc/vme_link_ts5_latch_fp3.o
# vme_link_ts5_latch_fp3
# 0ea0
# 000ed0
# 0
# 13
#
E 12








E 1
