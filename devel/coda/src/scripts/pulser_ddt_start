#!/bin/sh
#\
exec /usr/bin/wish -f "$0" ${1+"$@"}
#
#  Remote pulser start (cover all mode of generation),
#  "pulser" here means a COMBINED SET of two generators:
#   KineticSystem Programmable Clock Generator 3660
#   and Phillips Charge/Time Generator 7120.
#
#    function:  pulser_start (dt1, dt2, ddt, rate, N)
#
#    function inputs:
#      dt1 - Start-to-Stop delay, MIN value (0-10000 nSec);
#      dt2 - Start-to-Stop delay, MAX value (0-10000 nSec, dt2>dt1);
#      ddt - step from MIN to MAX (in nSec, 0<=ddt<=dt2-dt1);
#     rate - frequency of generated Start-Stop signals;
#        N - number of Start/Stop pairs.
#
#  SP, 07-Oct-2002


set roc  "camac1"
set dt1   0
set dt2   0
set ddt   0
set rate  0
set N     0

set rocs    " camac1 croctest4 "
set inp_str [split $argv " "]
set inp_N   [llength $inp_str]


#***  Check input parameters ***
set flag 0
if { ($inp_N < 5) || ($inp_N > 6) } { set flag 1
} else {
  set dt1  [lindex $inp_str 0]
  set dt2  [lindex $inp_str 1]
  set ddt  [lindex $inp_str 2]
  set rate [lindex $inp_str 3]
  set N    [lindex $inp_str 4]
  if { $inp_N > 5 } { set roc [string tolower [lindex $inp_str 5]] }
  if       { ($dt1  < 0)      || ($dt1  > 10000) } { set flag 2
  } elseif {  $ddt == 0 } {
    if       { ($rate < 1)    || ($rate > 10000)            } { set flag 3
    } elseif {    ($N < 1)    && ($N   != -1)               } { set flag 4
    } elseif { ![string match "* $roc *" $rocs]             } { set flag 5
    }
  } elseif {  $ddt != 0 } {
    if       {  ($dt2 < $dt1) || ($dt2  > 10000)            } { set flag 6
    } elseif {  ($ddt < 0)    || ($ddt  > [expr $dt2-$dt1]) } { set flag 7
    } elseif { ($rate < 1)    || ($rate > 10000)            } { set flag 8
    } elseif {     $N < 1                                   } { set flag 9
    } elseif { ![string match "* $roc *" $rocs]             } { set flag 10
    }
  }
}
#puts "\n   flag=$flag;\n   inp_str=$inp_str;\n   inp_N=$inp_N;"
#puts " dt1=$dt1,\n dt2=$dt2,\n ddt=$ddt,\n rate=$rate,\n N=$N,\n roc=$roc.\n"


#***  Print help message ***
if { $flag != 0 } {
 puts "\n Usage: pulser_start dt1 dt2 ddt rate N \[roc\]"
 puts "        -------------------------------------"
 puts " Where \"dt1\" - Start-to-Stop delay, MIN value (0-10000 nSec);"
 puts "       \"dt2\" - Start-to-Stop delay, MAX value (dt1<dt2<=10000nSec);"
 puts "       \"ddt\" - step from MIN to MAX (in nSec, 0<=ddt<=dt2-dt1);"
 puts "      \"rate\" - frequency of Start/Stop signals (1-10000 Hz);"
 puts "         \"N\" - number of Start/Stop pairs (N>1),"
 puts "               mode of continuous generation can be set, put N=-1;"
 puts "       \"roc\" - ROC name from the list \"camac1 croctest4\","
 puts "               could be skipped (default=\"camac1\").\n"
 puts "     Generation modes:"
 puts "     -----------------"
 puts "      1) continuous generation (N=-1, ddt=0, dt2 not essential);"
 puts "      2) generate \"N\" pulses with \"rate\" frequency for"
 puts "         \"dt1\" Start-to-Stop delay (ddt=0, dt2 not essential);"
 puts "      3) if \"ddt\" not ZERO, generate \"N\" pulses per each"
 puts "         delay=(dt1+ddt*i), 0<=i<=(dt2-dt1)/ddt.\n\n"
 exit $flag
}


set result "\n error: Can't get result for pulser_start() \n"

catch {set result [exec tcpClient $roc pulser_start($dt1,$dt2,$ddt,$rate,$N)]}

puts "$result"


if       { [string match "*Call later*" $result] } { exit 20
} elseif { [string match "*rror*" $result]       } { exit 30
} else   { exit 0
}
