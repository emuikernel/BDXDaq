#!/bin/sh
#\
exec /usr/bin/wish -f "$0" ${1+"$@"}
#
#  alarm_window
#
#  displays alarm window

#  usage:

#    alarm_window [-w window] [-c1 color1] [-c2 color2] [-blink msec] message

#  where:

#     parameter       meaning (default in parenthesis)
#     ---------       --------------------------------
#     window          display to post error message ($DISPLAY)
#     color1          first background color
#     color2          second background color
#     blink           blink period, in msec
#     message         text to display


#   ejw, 24-mar-97




#---------------------------------------------------------------

#  blink procedure to cause warning display to blink
proc blink {w option value1 value2 interval} {
	$w config $option $value1
	after $interval [list blink $w $option $value2 $value1 $interval]
}

#---------------------------------------------------------------


#    alarm_window

#  check for wrong number of args
if {$argc<1} {
    puts "\n   alarm_window \[-w window\] \[-c1 color1\] \[-c2 color2\] \[-blink msec\] message\n\n"
    exit
}


#  set defaults
set window ""
set color1 red
set color2 green
set blink_time 1000


#  decode command line
set cmdline [split $argv]
set pt 0
while {[string match -* [lindex $cmdline $pt]] == 1} {
    if       {[lindex $cmdline $pt]=="-w"} {
	set window [lindex $cmdline [incr pt 1]]
    } elseif {[lindex $cmdline $pt]=="-c1"} {
	set color1 [lindex $cmdline [incr pt 1]]
    } elseif {[lindex $cmdline $pt]=="-c2"} {
	set color2 [lindex $cmdline [incr pt 1]]
    } elseif {[lindex $cmdline $pt]=="-blink"} {
	set blink_time [lindex $cmdline [incr pt 1]]
    }
    incr pt 1
}
set message [lrange $cmdline $pt end]


# create widgets and display
wm withdraw .
toplevel .top -screen $window
wm title .top "Alarm Window"
wm geometry .top 500x500

message .top.m  -borderwidth 20 -font r24  -justify center -aspect 400 -text $message
button .top.b -font r24 -border 5 -justify center -command exit -text "Acknowledge"
pack .top.m -pady 100
pack .top.b -pady 50
.top configure -bg red
blink .top -bg $color1 $color2 $blink_time

