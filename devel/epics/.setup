#
# EPICS .setup file
#
if ( ($OSTYPE == "SunOS") && ($MACHINE == "sun4u") ) then
  ##setenv EPICS_HOST_ARCH solaris-sparc64
  setenv EPICS_HOST_ARCH solaris-sparc
endif
if ( ($OSTYPE == "SunOS") && ($MACHINE == "i86pc") ) then
  setenv EPICS_HOST_ARCH solaris-x86
endif
if ( ($OSTYPE == "Linux") && ($MACHINE == "i686" || $MACHINE == "i686_vme") ) then
  setenv EPICS_HOST_ARCH linux-x86
endif
##???
if ( ($OSTYPE == "Linux") && ($MACHINE == "x86_64") ) then
  setenv EPICS_HOST_ARCH linux-x86
endif
##???
if ( ($OSTYPE == "Linux") && ($MACHINE == "ppc") ) then
  setenv EPICS_HOST_ARCH linux-ppc
endif
if ( ($OSTYPE == "Darwin") && ($MACHINE == "powerpc") ) then
  setenv EPICS_HOST_ARCH darwin-ppc
endif
if ( ($OSTYPE == "Linux") && ($MACHINE == "armv7l") ) then
  setenv EPICS_HOST_ARCH linux-armv7l
endif
if ( ($OSTYPE == "Linux") && ($MACHINE == "nios2") ) then
  setenv EPICS_HOST_ARCH linux-nios2
endif
#
#
#
  setenv EPICS_VER 3.14.12.3
#
  setenv EPICS_BASE $CLAS/R$EPICS_VER/base
  setenv EPICS_EXTENSIONS $CLAS/R$EPICS_VER/extensions

  setenv EPICS_SUPPORT $CLAS/R$EPICS_VER/support
  setenv EPICS_SYNAPPS $CLAS/R$EPICS_VER/synApps/synApps_5_5/support/

  setenv EPICS_BASE_LIB $EPICS_BASE/lib/$EPICS_HOST_ARCH
  setenv EPICS_BASE_INC $EPICS_BASE/include
  setenv PATH "$PATH":$EPICS_BASE/bin/$EPICS_HOST_ARCH


####setenv EPICS_CA_ADDR_LIST "129.57.255.4 129.57.163.255"
setenv EPICS_CA_ADDR_LIST "129.57.255.4 129.57.163.255 129.57.57.188 129.57.99.255 129.57.191.255 129.57.68.97 129.57.86.16 129.57.86.29 129.57.86.37"
#setenv EPICS_CA_ADDR_LIST "129.57.167.14"

#
# following for other applications
#
  setenv PATH "$PATH":$EPICS_EXTENSIONS/bin/$EPICS_HOST_ARCH

  if ($?LD_LIBRARY_PATH) then
    setenv LD_LIBRARY_PATH "$LD_LIBRARY_PATH":"$EPICS_BASE/lib/$EPICS_HOST_ARCH":"$EPICS_EXTENSIONS/lib/$EPICS_HOST_ARCH"

  else
    setenv LD_LIBRARY_PATH "$EPICS_BASE/lib/$EPICS_HOST_ARCH":"$EPICS_EXTENSIONS/lib/$EPICS_HOST_ARCH"

  endif
#
#
#
# needed by extensions
##################sergey: adjust for new structure!!!
###setenv EPICS $CLAS/R$EPICS_VER
###source $CLAS/R$EPICS_VER/EPICS/.setup
#

#
# tring to avoid duplicate broadcast addresses if we already attached to that network phisically
#
set ipList=" "
if ( `uname -s` == 'SunOS' ) then
	set ifcCommand = "/usr/sbin/ifconfig -a"
else
	set ifcCommand = "/sbin/ifconfig"
endif
#echo ifcCommand = $ifcCommand
foreach ip ($EPICS_CA_ADDR_LIST)
#    echo checking list = $ipList ip = $ip
    $ifcCommand |grep $ip > /dev/null || set ipList="$ipList $ip"
#    echo list = $ipList
end
setenv EPICS_CA_ADDR_LIST "$ipList"
unset ipList
unset ifcCommand
#
# end of broadcast duplicate removal
#


############################################################################
# old epics setup
###oldepics###    setenv EPICS /home/epics/R3.13.4
###oldepics###    setenv EPICS_CA_ADDR_LIST "129.57.163.255 129.57.255.4"
###oldepics###    setenv EPICS_CAS_INTF_ADDR_LIST clon10.jlab.org
###oldepics###    setenv EPICSLIB /home/epics/R3.13.4/base/lib/solaris
############################################################################
#
#-------------- new installation -------------------------------
  ###setenv CLAS /usr/local/clas12 # should be defined in user's .cshrc file
  setenv EPICSB_DRIVERS "$CLAS/epics/drivers"
#=============== smi++ and dim =====================================

setenv SMIDIR /apps/smixx
setenv SMIRTLDIR /apps/smixx
setenv OS Linux
setenv DIM_DNS_NODE clonpc3
setenv DIMDIR /apps/dim
setenv ODIR linux
setenv LD_LIBRARY_PATH "$DIMDIR/$ODIR":"$SMIDIR/$ODIR":"$LD_LIBRARY_PATH"
setenv PATH "$PATH":"$DIMDIR"/"$ODIR"
setenv PATH "$PATH":"$SMIDIR"/"$ODIR"

#====================================================================
#my: to use the libnetsnmp.so.25 
setenv LD_LIBRARY_PATH "/usr/local/lib":"$LD_LIBRARY_PATH"

# set env var EPICS just for convenience - EPICS does not need it
setenv EPICS $CLAS/epics

#=============== epics-qt N1 ============================================


setenv MYEPICSQT $CLAS/epics/qt/epicsqt_v1


setenv QCAQTDIR /apps/Trolltech/Qt
setenv QCAFRAMEWORK "$MYEPICSQT"/ca_framework

setenv QT_PLUGIN_PATH
setenv LD_LIBRARY_PATH "$MYEPICSQT"/ca_framework/qwt-5.2.1/lib:"$LD_LIBRARY_PATH"
setenv QT_PLUGIN_PATH "$MYEPICSQT"/ca_framework/qwt-5.2.1/designer/plugins:"$QT_PLUGIN_PATH"
setenv LD_LIBRARY_PATH "$MYEPICSQT"/ca_framework/plugins:"$LD_LIBRARY_PATH"
setenv QT_PLUGIN_PATH "$MYEPICSQT"/ca_framework/plugins:"$QT_PLUGIN_PATH"

#=========================================================================
setenv PATH "$CLAS"/epics/bin/"$EPICS_HOST_ARCH":"$PATH"
#=========================================================================

alias cd0 "cd $CLAS/epics/drivers/CAEN_HV/level0/IocShell"
alias cd0o "cd $CLAS/epics/drivers/CAEN_HV/level0/iocShellOld"
alias cdqt "cd $CLAS/epics/qt/epicsqt_v1/ca_framework/plugins"
alias cdqtdm "cd $CLAS/epics/qt/QtDM/build-qtdmtest-Desktop-Debug"
alias cdhv "cd $CLAS/epics/qt/epicsqt_v1/build-hv_control-Desktop-Debug"
alias cdsmi "cd $CLAS/epics/qt/epicsqt_v1/build-smi_browse-Desktop-Debug"
alias cd0m "cd $CLAS/epics/apps/iocBoot/iocmpodCrates"
alias cdm "cd $CLAS/epics/apps/mpodCratesApp"
alias mye "O.linux-x86/ioccaen startup.all"
alias myeo "O.linux-x86/ioccaenold startup.all"
