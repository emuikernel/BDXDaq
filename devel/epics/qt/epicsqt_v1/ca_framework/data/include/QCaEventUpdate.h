/*! 
  \class QCaEventUpdate
  \version $Revision: #4 $
  \date $DateTime: 2010/06/23 07:49:40 $
  \author andrew.rhyder
  \brief Packages CA callback data as a Qt event
 */
/*
 *  This file is part of the EPICS QT Framework, initially developed at the Australian Synchrotron.
 *
 *  The EPICS QT Framework is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The EPICS QT Framework is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with the EPICS QT Framework.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  Copyright (c) 2009, 2010
 *
 *  Author:
 *    Andrew Rhyder
 *  Contact details:
 *    andrew.rhyder@synchrotron.org.au
 */
 
 /*!

  \version $Revision: #4 $
  \date $DateTime: 2010/06/23 07:49:40 $
  \author Last checked in by: $Author: rhydera $


  Copyright (c) 2009 Australian Synchrotron

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  Licence as published by the Free Software Foundation; either
  version 2.1 of the Licence, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public Licence for more details.

  You should have received a copy of the GNU Lesser General Public
  Licence along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

  Contact details:
  andrew.rhyder@synchrotron.org.au.au
  800 Blackburn Road, Clayton, Victoria 3168, Australia.

*/

#ifndef QCAEVENTUPDATE_H
#define QCAEVENTUPDATE_H

#include <QtDebug>
#include <QEvent>
#include <QVariant>

namespace qcaobject { class QCaObject; }

//! Forward declaration for the item package.
class QCaEventUpdate;

/*!
  \class QCaEventItem
  \brief Simple container for a list QCaEventUpdate instances.

    This class is simply a reference to an update event (an instance of class QCaEventUpdate)
    This class exists so that a list of references to outstanding events can be maintained.
*/
class QCaEventItem {
  public:
    QCaEventItem() {}
    QCaEventItem( QCaEventUpdate *newEvent ) { event = newEvent; }
    QCaEventUpdate *event;
};

/*!
  \class QCaEventUpdate
  \brief Packages CA callback data as a Qt event

    This class packages data and status generated by a CA callback as a Qt event.
    When data or status updates must be passed from a foreign CA thread to a Qt thread
    an instance of this class is created, populated with the CA information and posted
    through the event mechanism to a Qt thread.
*/
class QCaEventUpdate : public QEvent {
  public:
    QCaEventUpdate( qcaobject::QCaObject *emitterObjectIn,  // The object that emited the event
                    long newReason,                         // Callback reason. Actually of type caobject::callback_reasons
                    void* newDataPtr );                     // CA data. This is actually of type carecord::CaRecord*

    static QEvent::Type EVENT_UPDATE_TYPE;
    bool acceptThisEvent;                /// If true, the originator of this event has been deleted. Ignore the event.

    qcaobject::QCaObject *emitterObject; /// The object to process the data and emit a signal.
    long reason;                         /// Callback reason. Actually of type caobject::callback_reasons
    void* dataPtr;                       /// CA data. this is actually of type carecord::CaRecord*
};

#endif /// QCAEVENTUPDATE_H
